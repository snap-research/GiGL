Search.setIndex({"docnames": ["components/config_populator", "components/data_preprocessor", "components/inferencer", "components/split_generator", "components/subgraph_sampler", "components/trainer", "index", "reference/_autosummary/common", "reference/_autosummary/common.beam", "reference/_autosummary/common.collections", "reference/_autosummary/common.collections.frozen_dict", "reference/_autosummary/common.collections.frozen_dict.FrozenDict", "reference/_autosummary/common.collections.itertools", "reference/_autosummary/common.collections.itertools.batch", "reference/_autosummary/common.collections.sorted_dict", "reference/_autosummary/common.collections.sorted_dict.SortedDict", "reference/_autosummary/common.data", "reference/_autosummary/common.data.export", "reference/_autosummary/common.data.export.EmbeddingExporter", "reference/_autosummary/common.data.export.load_embeddings_to_bigquery", "reference/_autosummary/common.env_config", "reference/_autosummary/common.env_config.get_available_cpus", "reference/_autosummary/common.logger", "reference/_autosummary/common.logger.Logger", "reference/_autosummary/common.metrics", "reference/_autosummary/common.metrics.base_metrics", "reference/_autosummary/common.metrics.base_metrics.NopMetricsPublisher", "reference/_autosummary/common.metrics.decorators", "reference/_autosummary/common.metrics.decorators.TimerRecordGranularity", "reference/_autosummary/common.metrics.decorators.flushes_metrics", "reference/_autosummary/common.metrics.decorators.profileit", "reference/_autosummary/common.metrics.metrics_interface", "reference/_autosummary/common.metrics.metrics_interface.OpsMetricPublisher", "reference/_autosummary/common.services", "reference/_autosummary/common.services.dataproc", "reference/_autosummary/common.services.dataproc.DataprocService", "reference/_autosummary/common.services.gcp_cloud_logging", "reference/_autosummary/common.services.gcp_cloud_logging.GCPCloudLoggingService", "reference/_autosummary/common.services.gcp_cloud_logging.LogEntries", "reference/_autosummary/common.services.kfp", "reference/_autosummary/common.services.kfp.KFPService", "reference/_autosummary/common.services.vertex_ai", "reference/_autosummary/common.services.vertex_ai.VertexAIService", "reference/_autosummary/common.services.vertex_ai.VertexAiJobConfig", "reference/_autosummary/common.types", "reference/_autosummary/common.types.resource_config", "reference/_autosummary/common.types.resource_config.CommonPipelineComponentConfigs", "reference/_autosummary/common.types.uri", "reference/_autosummary/common.types.uri.gcs_uri", "reference/_autosummary/common.types.uri.gcs_uri.GcsUri", "reference/_autosummary/common.types.uri.http_uri", "reference/_autosummary/common.types.uri.http_uri.HttpUri", "reference/_autosummary/common.types.uri.local_uri", "reference/_autosummary/common.types.uri.local_uri.LocalUri", "reference/_autosummary/common.types.uri.uri", "reference/_autosummary/common.types.uri.uri.Uri", "reference/_autosummary/common.types.uri.uri_factory", "reference/_autosummary/common.types.uri.uri_factory.UriFactory", "reference/_autosummary/common.types.wrappers", "reference/_autosummary/common.types.wrappers.argo_workflow_manifest", "reference/_autosummary/common.types.wrappers.argo_workflow_manifest.ArgoWorkflowManifestWrapper", "reference/_autosummary/common.types.wrappers.argo_workflow_manifest.ArgoWorkflowNodeStatus", "reference/_autosummary/common.types.wrappers.kfp_api", "reference/_autosummary/common.types.wrappers.kfp_api.ApiRunDetailWrapper", "reference/_autosummary/common.utils", "reference/_autosummary/common.utils.compute", "reference/_autosummary/common.utils.compute.random", "reference/_autosummary/common.utils.compute.random.make_compute_deterministic_and_set_seed", "reference/_autosummary/common.utils.compute.serialization", "reference/_autosummary/common.utils.compute.serialization.coder", "reference/_autosummary/common.utils.compute.serialization.coder.CoderProtocol", "reference/_autosummary/common.utils.compute.serialization.serialize_np", "reference/_autosummary/common.utils.compute.serialization.serialize_np.EncodedNdArray", "reference/_autosummary/common.utils.compute.serialization.serialize_np.NumpyCoder", "reference/_autosummary/common.utils.compute.serialization.serialize_protos", "reference/_autosummary/common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder", "reference/_autosummary/common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder", "reference/_autosummary/common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder", "reference/_autosummary/common.utils.compute.serialization.serialize_string", "reference/_autosummary/common.utils.compute.serialization.serialize_string.StringCoder", "reference/_autosummary/common.utils.dataflow", "reference/_autosummary/common.utils.dataflow.get_console_uri_from_pipeline_result", "reference/_autosummary/common.utils.func_tools", "reference/_autosummary/common.utils.func_tools.lru_cache", "reference/_autosummary/common.utils.gcs", "reference/_autosummary/common.utils.gcs.GcsUtils", "reference/_autosummary/common.utils.kfp", "reference/_autosummary/common.utils.kfp.KfpOutputViewers", "reference/_autosummary/common.utils.local_fs", "reference/_autosummary/common.utils.local_fs.FileSystemEntity", "reference/_autosummary/common.utils.local_fs.append_line_to_file", "reference/_autosummary/common.utils.local_fs.copy_files", "reference/_autosummary/common.utils.local_fs.count_files_with_uri_prefix", "reference/_autosummary/common.utils.local_fs.create_empty_file_if_none_exists", "reference/_autosummary/common.utils.local_fs.create_file_symlinks", "reference/_autosummary/common.utils.local_fs.delete_and_create_local_path", "reference/_autosummary/common.utils.local_fs.delete_local_directory", "reference/_autosummary/common.utils.local_fs.does_path_exist", "reference/_autosummary/common.utils.local_fs.list_at_path", "reference/_autosummary/common.utils.local_fs.remove_file_if_exist", "reference/_autosummary/common.utils.local_fs.remove_file_or_folder_if_exist", "reference/_autosummary/common.utils.local_fs.remove_folder_if_exist", "reference/_autosummary/common.utils.local_fs.remove_line_from_file", "reference/_autosummary/common.utils.os_utils", "reference/_autosummary/common.utils.os_utils.import_obj", "reference/_autosummary/common.utils.os_utils.num_lines_in_file", "reference/_autosummary/common.utils.os_utils.run_command_and_stream_stdout", "reference/_autosummary/common.utils.proto_utils", "reference/_autosummary/common.utils.proto_utils.ProtoUtils", "reference/_autosummary/common.utils.retry", "reference/_autosummary/common.utils.retry.RetriesFailedException", "reference/_autosummary/common.utils.retry.retry", "reference/_autosummary/common.utils.test_utils", "reference/_autosummary/common.utils.test_utils.TestArgs", "reference/_autosummary/common.utils.test_utils.parse_args", "reference/_autosummary/common.utils.test_utils.run_tests", "reference/_autosummary/common.utils.torch_training", "reference/_autosummary/common.utils.torch_training.get_distributed_backend", "reference/_autosummary/common.utils.torch_training.get_rank", "reference/_autosummary/common.utils.torch_training.get_world_size", "reference/_autosummary/common.utils.torch_training.is_distributed_available_and_initialized", "reference/_autosummary/common.utils.torch_training.is_distributed_local_debug", "reference/_autosummary/common.utils.torch_training.should_distribute", "reference/_autosummary/env", "reference/_autosummary/env.dep_constants", "reference/_autosummary/env.dep_constants.get_compiled_jar_path", "reference/_autosummary/env.dep_constants.get_current_jar_file", "reference/_autosummary/env.dep_constants.get_jar_file_uri", "reference/_autosummary/env.dep_constants.get_local_jar_directory", "reference/_autosummary/env.pipelines_config", "reference/_autosummary/env.pipelines_config.get_resource_config", "reference/_autosummary/env.pipelines_config.is_resource_config_loaded", "reference/_autosummary/orchestration", "reference/_autosummary/orchestration.kubeflow", "reference/_autosummary/orchestration.kubeflow.kfp_orchestrator", "reference/_autosummary/orchestration.kubeflow.kfp_orchestrator.KfpEnvMetadata", "reference/_autosummary/orchestration.kubeflow.kfp_orchestrator.KfpOrchestrator", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_config_populator_task_op", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_data_preprocessor_task_op", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_inferencer_task_op", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_post_processor_task_op", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_split_generator_task_op", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_subgraph_sampler_task_op", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_trainer_task_op", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.generate_component_task", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.generate_pipeline", "reference/_autosummary/orchestration.kubeflow.utils", "reference/_autosummary/orchestration.kubeflow.utils.glt_backend", "reference/_autosummary/orchestration.kubeflow.utils.glt_backend.check_glt_backend_eligibility_component", "reference/_autosummary/orchestration.kubeflow.utils.log_metrics", "reference/_autosummary/orchestration.kubeflow.utils.log_metrics.log_eval_metrics_to_ui", "reference/_autosummary/orchestration.kubeflow.utils.resource", "reference/_autosummary/orchestration.kubeflow.utils.resource.add_task_resource_requirements", "reference/_autosummary/src", "reference/_autosummary/src.applied_tasks", "reference/_autosummary/src.applied_tasks.test_tasks", "reference/_autosummary/src.applied_tasks.test_tasks.academic", "reference/_autosummary/src.applied_tasks.test_tasks.academic.get_pyg_cora_dataset", "reference/_autosummary/src.applied_tasks.test_tasks.academic.log_stats_for_pyg_planetoid_dataset", "reference/_autosummary/src.common", "reference/_autosummary/src.common.constants", "reference/_autosummary/src.common.constants.bq", "reference/_autosummary/src.common.constants.bq.get_embeddings_dataset_bq_path", "reference/_autosummary/src.common.constants.bq.get_embeddings_table", "reference/_autosummary/src.common.constants.bq.get_predictions_table", "reference/_autosummary/src.common.constants.components", "reference/_autosummary/src.common.constants.components.GiGLComponents", "reference/_autosummary/src.common.constants.gcs", "reference/_autosummary/src.common.constants.gcs.get_applied_task_perm_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_applied_task_temp_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_applied_task_temp_regional_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_config_populator_assets_perm_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_data_preprocessor_assets_perm_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_data_preprocessor_assets_temp_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_data_preprocessor_staging_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_dataflow_staging_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_dataflow_temp_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_frozen_gbml_config_proto_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_inferencer_asset_dir_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_inferencer_embeddings_gcs_prefix", "reference/_autosummary/src.common.constants.gcs.get_inferencer_predictions_gcs_prefix", "reference/_autosummary/src.common.constants.gcs.get_post_processor_asset_dir_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_post_processor_metrics_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_preprocessed_metadata_proto_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_split_dataset_main_samples_gcs_file_prefix", "reference/_autosummary/src.common.constants.gcs.get_split_dataset_output_gcs_file_prefix", "reference/_autosummary/src.common.constants.gcs.get_split_dataset_random_negatives_gcs_file_prefix", "reference/_autosummary/src.common.constants.gcs.get_split_generator_assets_temp_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_flattened_graph_metadata_output_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_node_anchor_based_link_prediction_random_negatives_samples_prefix", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_node_anchor_based_link_prediction_samples_prefix", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_node_anchor_based_link_prediction_task_dir", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_node_neighborhood_samples_dir", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_node_neighborhood_samples_path_prefix", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_root_dir", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_link_based_task_dir", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_link_based_task_labeled_samples_prefix", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_link_based_task_unlabeled_samples_prefix", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_node_classification_labeled_samples_prefix", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_node_classification_task_dir", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_node_classification_unlabeled_samples_prefix", "reference/_autosummary/src.common.constants.gcs.get_tensorboard_logs_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_directory_path", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_raw_data_schema_file_path", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_stats_directory_path", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_stats_file_path", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_temp_directory_path", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_visualized_facets_file_path", "reference/_autosummary/src.common.constants.gcs.get_tf_transformed_features_schema_path", "reference/_autosummary/src.common.constants.gcs.get_tf_transformed_features_transform_fn_assets_directory_path", "reference/_autosummary/src.common.constants.gcs.get_trained_model_eval_metrics_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_trained_model_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_trained_model_metadata_proto_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_trained_models_dir_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_trained_scripted_model_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_trainer_asset_dir_gcs_path", "reference/_autosummary/src.common.constants.gcs.get_transformed_features_directory_path", "reference/_autosummary/src.common.constants.gcs.get_transformed_features_file_prefix", "reference/_autosummary/src.common.constants.graph_metadata", "reference/_autosummary/src.common.constants.local_fs", "reference/_autosummary/src.common.constants.local_fs.get_gbml_assets_tmp_path", "reference/_autosummary/src.common.constants.local_fs.get_gbml_log_file_prefix_tmp_path", "reference/_autosummary/src.common.constants.local_fs.get_gbml_logs_folder_local_tmp_path", "reference/_autosummary/src.common.constants.local_fs.get_gbml_task_local_tmp_path", "reference/_autosummary/src.common.constants.local_fs.get_gigl_root_directory", "reference/_autosummary/src.common.constants.local_fs.get_inference_embeddings_local_tmp_dir_path", "reference/_autosummary/src.common.constants.local_fs.get_inference_embeddings_local_tmp_file_prefix", "reference/_autosummary/src.common.constants.local_fs.get_inference_predictions_local_tmp_file_prefix", "reference/_autosummary/src.common.constants.local_fs.get_path_to_manifest_file", "reference/_autosummary/src.common.constants.local_fs.get_preprocess_local_staging_dir_path", "reference/_autosummary/src.common.constants.local_fs.get_project_root_directory", "reference/_autosummary/src.common.constants.local_fs.get_python_project_root_path", "reference/_autosummary/src.common.constants.local_fs.get_train_val_info_local_tmp_file_path", "reference/_autosummary/src.common.constants.metrics", "reference/_autosummary/src.common.constants.resource_config", "reference/_autosummary/src.common.constants.test_assets", "reference/_autosummary/src.common.constants.test_assets.get_example_task_edge_features_gcs_dir", "reference/_autosummary/src.common.constants.test_assets.get_example_task_edge_features_schema_gcs_path", "reference/_autosummary/src.common.constants.test_assets.get_example_task_edges_bq_table_path", "reference/_autosummary/src.common.constants.test_assets.get_example_task_frozen_gbml_config_gcs_path", "reference/_autosummary/src.common.constants.test_assets.get_example_task_node_features_gcs_dir", "reference/_autosummary/src.common.constants.test_assets.get_example_task_node_features_schema_gcs_path", "reference/_autosummary/src.common.constants.test_assets.get_example_task_nodes_bq_table_path", "reference/_autosummary/src.common.constants.test_assets.get_example_task_preprocess_gcs_prefix", "reference/_autosummary/src.common.constants.test_assets.get_example_task_static_assets_gcs_dir", "reference/_autosummary/src.common.constants.test_assets.update_bq_table_with_test_assets_and_version", "reference/_autosummary/src.common.constants.test_assets.update_gcs_uri_with_test_assets_and_version", "reference/_autosummary/src.common.constants.time", "reference/_autosummary/src.common.constants.training", "reference/_autosummary/src.common.graph_builder", "reference/_autosummary/src.common.graph_builder.abstract_graph_builder", "reference/_autosummary/src.common.graph_builder.abstract_graph_builder.GraphBuilder", "reference/_autosummary/src.common.graph_builder.gbml_graph_protocol", "reference/_autosummary/src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol", "reference/_autosummary/src.common.graph_builder.pyg_graph_builder", "reference/_autosummary/src.common.graph_builder.pyg_graph_builder.PygGraphBuilder", "reference/_autosummary/src.common.graph_builder.pyg_graph_data", "reference/_autosummary/src.common.graph_builder.pyg_graph_data.PygGraphData", "reference/_autosummary/src.common.modeling_task_specs", "reference/_autosummary/src.common.modeling_task_specs.utils", "reference/_autosummary/src.common.modeling_task_specs.utils.early_stop", "reference/_autosummary/src.common.modeling_task_specs.utils.early_stop.EarlyStopper", "reference/_autosummary/src.common.modeling_task_specs.utils.parameter_loading", "reference/_autosummary/src.common.modeling_task_specs.utils.parameter_loading.ArgumentReader", "reference/_autosummary/src.common.modeling_task_specs.utils.profiler_wrapper", "reference/_autosummary/src.common.modeling_task_specs.utils.profiler_wrapper.TorchProfiler", "reference/_autosummary/src.common.models", "reference/_autosummary/src.common.models.dgl", "reference/_autosummary/src.common.models.dgl.homogenous", "reference/_autosummary/src.common.models.layers", "reference/_autosummary/src.common.models.layers.count_min_sketch", "reference/_autosummary/src.common.models.layers.count_min_sketch.CountMinSketch", "reference/_autosummary/src.common.models.layers.count_min_sketch.calculate_in_batch_candidate_sampling_probability", "reference/_autosummary/src.common.models.layers.decoder", "reference/_autosummary/src.common.models.layers.decoder.DecoderType", "reference/_autosummary/src.common.models.layers.decoder.LinkPredictionDecoder", "reference/_autosummary/src.common.models.layers.feature_interaction", "reference/_autosummary/src.common.models.layers.feature_interaction.DCNCross", "reference/_autosummary/src.common.models.layers.feature_interaction.DCNv2", "reference/_autosummary/src.common.models.layers.normalization", "reference/_autosummary/src.common.models.layers.normalization.l2_normalize_embeddings", "reference/_autosummary/src.common.models.pyg", "reference/_autosummary/src.common.models.pyg.heterogeneous", "reference/_autosummary/src.common.models.pyg.heterogeneous.HGT", "reference/_autosummary/src.common.models.pyg.heterogeneous.SimpleHGN", "reference/_autosummary/src.common.models.pyg.nn", "reference/_autosummary/src.common.models.pyg.nn.conv", "reference/_autosummary/src.common.models.pyg.nn.conv.edge_attr_gat_conv", "reference/_autosummary/src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv", "reference/_autosummary/src.common.models.pyg.nn.conv.gin_conv", "reference/_autosummary/src.common.models.pyg.nn.conv.gin_conv.GINEConv", "reference/_autosummary/src.common.models.pyg.nn.conv.hgt_conv", "reference/_autosummary/src.common.models.pyg.nn.conv.hgt_conv.HGTConv", "reference/_autosummary/src.common.models.pyg.nn.conv.simplehgn_conv", "reference/_autosummary/src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv", "reference/_autosummary/src.common.models.pyg.nn.models", "reference/_autosummary/src.common.models.pyg.nn.models.feature_interaction", "reference/_autosummary/src.common.models.pyg.nn.models.feature_interaction.CombinationMode", "reference/_autosummary/src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction", "reference/_autosummary/src.common.models.pyg.nn.models.jumping_knowledge", "reference/_autosummary/src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge", "reference/_autosummary/src.common.models.pyg.utils", "reference/_autosummary/src.common.models.pyg.utils.filter_dict", "reference/_autosummary/src.common.models.utils", "reference/_autosummary/src.common.models.utils.torch", "reference/_autosummary/src.common.models.utils.torch.to_hetero_feat", "reference/_autosummary/src.common.translators", "reference/_autosummary/src.common.translators.gbml_protos_translator", "reference/_autosummary/src.common.translators.gbml_protos_translator.GbmlProtosTranslator", "reference/_autosummary/src.common.translators.model_eval_metrics_translator", "reference/_autosummary/src.common.translators.model_eval_metrics_translator.EvalMetricsCollectionTranslator", "reference/_autosummary/src.common.types", "reference/_autosummary/src.common.types.dataflow_job_options", "reference/_autosummary/src.common.types.dataflow_job_options.CommonOptions", "reference/_autosummary/src.common.types.dataset_split", "reference/_autosummary/src.common.types.dataset_split.DatasetSplit", "reference/_autosummary/src.common.types.exception", "reference/_autosummary/src.common.types.exception.SubgraphSamplingValidationError", "reference/_autosummary/src.common.types.exception.SubgraphSamplingValidationErrorType", "reference/_autosummary/src.common.types.features", "reference/_autosummary/src.common.types.features.FeatureTypes", "reference/_autosummary/src.common.types.graph_data", "reference/_autosummary/src.common.types.graph_data.Edge", "reference/_autosummary/src.common.types.graph_data.EdgeType", "reference/_autosummary/src.common.types.graph_data.EdgeUsageType", "reference/_autosummary/src.common.types.graph_data.Node", "reference/_autosummary/src.common.types.model_eval_metrics", "reference/_autosummary/src.common.types.model_eval_metrics.EvalMetric", "reference/_autosummary/src.common.types.model_eval_metrics.EvalMetricType", "reference/_autosummary/src.common.types.model_eval_metrics.EvalMetricsCollection", "reference/_autosummary/src.common.types.pb_wrappers", "reference/_autosummary/src.common.types.pb_wrappers.dataset_metadata", "reference/_autosummary/src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.flattened_graph_metadata", "reference/_autosummary/src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.gigl_resource_config", "reference/_autosummary/src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types.NodePbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types_utils", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types_utils.get_dehydrated_node_pb_wrappers_from_edge_wrapper", "reference/_autosummary/src.common.types.pb_wrappers.graph_metadata", "reference/_autosummary/src.common.types.pb_wrappers.graph_metadata.GraphMetadataPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.RandomUniformPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.RandomWeightedPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.SamplingDirectionEnumType", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.TopKPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.UserDefinedPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.subgraph_sampling_strategy", "reference/_autosummary/src.common.types.pb_wrappers.subgraph_sampling_strategy.GlobalRandomUniformStrategyPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathStrategyPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.task_metadata", "reference/_autosummary/src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.trained_model_metadata", "reference/_autosummary/src.common.types.pb_wrappers.trained_model_metadata.TrainedModelMetadataPbWrapper", "reference/_autosummary/src.common.types.pb_wrappers.types", "reference/_autosummary/src.common.types.task_metadata", "reference/_autosummary/src.common.types.task_metadata.TaskMetadataType", "reference/_autosummary/src.common.utils", "reference/_autosummary/src.common.utils.bq", "reference/_autosummary/src.common.utils.bq.BqUtils", "reference/_autosummary/src.common.utils.data", "reference/_autosummary/src.common.utils.data.feature_serialization", "reference/_autosummary/src.common.utils.data.feature_serialization.FeatureSerializationUtils", "reference/_autosummary/src.common.utils.dataflow", "reference/_autosummary/src.common.utils.dataflow.get_sanitized_dataflow_job_name", "reference/_autosummary/src.common.utils.dataflow.init_beam_pipeline_options", "reference/_autosummary/src.common.utils.eval_metrics", "reference/_autosummary/src.common.utils.eval_metrics.hit_rate_at_k", "reference/_autosummary/src.common.utils.eval_metrics.mean_reciprocal_rank", "reference/_autosummary/src.common.utils.file_loader", "reference/_autosummary/src.common.utils.file_loader.FileLoader", "reference/_autosummary/src.common.utils.gbml_protos", "reference/_autosummary/src.common.utils.gbml_protos.TrainingSamplesSchemaProtoUtils", "reference/_autosummary/src.common.utils.metrics_service_provider", "reference/_autosummary/src.common.utils.metrics_service_provider.get_metrics_service_instance", "reference/_autosummary/src.common.utils.metrics_service_provider.init_metrics_publisher_grouping_for_job", "reference/_autosummary/src.common.utils.metrics_service_provider.initialize_metrics", "reference/_autosummary/src.common.utils.model", "reference/_autosummary/src.common.utils.model.load_scripted_model_from_uri", "reference/_autosummary/src.common.utils.model.load_state_dict_from_uri", "reference/_autosummary/src.common.utils.model.save_scripted_model", "reference/_autosummary/src.common.utils.model.save_state_dict", "reference/_autosummary/src.common.utils.scheduler", "reference/_autosummary/src.common.utils.scheduler.CosineDecayScheduler", "reference/_autosummary/src.common.utils.spark_job_manager", "reference/_autosummary/src.common.utils.spark_job_manager.DataprocClusterInitData", "reference/_autosummary/src.common.utils.spark_job_manager.SparkJobManager", "reference/_autosummary/src.common.utils.time", "reference/_autosummary/src.common.utils.time.convert_days_to_ms", "reference/_autosummary/src.common.utils.time.current_datetime", "reference/_autosummary/src.common.utils.time.current_formatted_datetime", "reference/_autosummary/src.common.utils.time.format_datetime", "reference/_autosummary/src.common.utils.time.is_datetime_str_format_valid", "reference/_autosummary/src.common.utils.time.parse_formatted_datetime", "reference/_autosummary/src.common.utils.timeout", "reference/_autosummary/src.common.utils.timeout.TimedOutException", "reference/_autosummary/src.common.utils.timeout.timeout", "reference/_autosummary/src.config_populator", "reference/_autosummary/src.config_populator.config_populator", "reference/_autosummary/src.config_populator.config_populator.ConfigPopulator", "reference/_autosummary/src.data_preprocessor", "reference/_autosummary/src.data_preprocessor.lib", "reference/_autosummary/src.data_preprocessor.lib.enumerate", "reference/_autosummary/src.data_preprocessor.lib.enumerate.queries", "reference/_autosummary/src.data_preprocessor.lib.ingest", "reference/_autosummary/src.data_preprocessor.lib.transform", "reference/_autosummary/src.inference", "reference/_autosummary/src.inference.v1", "reference/_autosummary/src.inference.v1.lib", "reference/_autosummary/src.inference.v1.lib.inference_output_schema", "reference/_autosummary/src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema", "reference/_autosummary/src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchemaBuilder", "reference/_autosummary/src.inference.v1.lib.queries", "reference/_autosummary/src.inference.v1.lib.transforms", "reference/_autosummary/src.inference.v2", "reference/_autosummary/src.post_process", "reference/_autosummary/src.post_process.lib", "reference/_autosummary/src.post_process.lib.base_post_processor", "reference/_autosummary/src.post_process.lib.base_post_processor.BasePostProcessor", "reference/_autosummary/src.post_process.utils", "reference/_autosummary/src.post_process.utils.component_runtime", "reference/_autosummary/src.post_process.utils.component_runtime.assert_component_runtimes_match_expected_parameters", "reference/_autosummary/src.post_process.utils.component_runtime.get_runtime_manifest_from_kfp_pipeline", "reference/_autosummary/src.post_process.utils.cosine_similarity", "reference/_autosummary/src.post_process.utils.cosine_similarity.assert_cosine_similarity_stats", "reference/_autosummary/src.post_process.utils.cosine_similarity.calculate_cosine_sim_between_embedding_tables", "reference/_autosummary/src.post_process.utils.cosine_similarity.calculate_cosine_similarity_stats", "reference/_autosummary/src.post_process.utils.cosine_similarity.get_table_paths_via_timedelta", "reference/_autosummary/src.split_generator", "reference/_autosummary/src.subgraph_sampler", "reference/_autosummary/src.subgraph_sampler.lib", "reference/_autosummary/src.training", "reference/_autosummary/src.training.v1", "reference/_autosummary/src.training.v1.lib", "reference/_autosummary/src.training.v1.lib.data_loaders", "reference/_autosummary/src.training.v1.lib.data_loaders.common", "reference/_autosummary/src.training.v1.lib.data_loaders.common.DataloaderConfig", "reference/_autosummary/src.training.v1.lib.data_loaders.common.DataloaderTypes", "reference/_autosummary/src.training.v1.lib.eval_metrics", "reference/_autosummary/src.training.v1.lib.eval_metrics.get_metric_name_for_gauge_model_metrics_hit_rate_at", "reference/_autosummary/src.training.v2", "reference/_autosummary/src.validation_check", "reference/_autosummary/src.validation_check.libs", "reference/_autosummary/src.validation_check.libs.resource_config_checks", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_inferencer_resource_config_valid", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_preprocessor_resource_config_valid", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_shared_resource_config_valid", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_split_generator_resource_config_valid", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_subgraph_sampler_resource_config_valid", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_trainer_resource_config_valid", "reference/_autosummary/src.validation_check.libs.utils", "reference/_autosummary/src.validation_check.libs.utils.assert_proto_field_value_is_truthy", "reference/_autosummary/src.validation_check.libs.utils.assert_proto_has_field", "reference/index", "user_guide/assets/docker_images", "user_guide/assets/public_data", "user_guide/config_guides/resource_config_guide", "user_guide/config_guides/task_config_guide", "user_guide/contributing/contributing_guide", "user_guide/custom_specs/data_preprocessor_spec_guide", "user_guide/custom_specs/modelling_task_spec_guide", "user_guide/examples/example1", "user_guide/examples/example2", "user_guide/getting_started/cloud_setup_guide", "user_guide/getting_started/installation", "user_guide/getting_started/orchestration", "user_guide/getting_started/quick_start", "user_guide/index", "user_guide/overview/components", "user_guide/overview/what_is_gigl", "user_guide/trouble_shooting/faq"], "filenames": ["components/config_populator.md", "components/data_preprocessor.md", "components/inferencer.md", "components/split_generator.md", "components/subgraph_sampler.md", "components/trainer.md", "index.rst", "reference/_autosummary/common.rst", "reference/_autosummary/common.beam.rst", "reference/_autosummary/common.collections.rst", "reference/_autosummary/common.collections.frozen_dict.rst", "reference/_autosummary/common.collections.frozen_dict.FrozenDict.rst", "reference/_autosummary/common.collections.itertools.rst", "reference/_autosummary/common.collections.itertools.batch.rst", "reference/_autosummary/common.collections.sorted_dict.rst", "reference/_autosummary/common.collections.sorted_dict.SortedDict.rst", "reference/_autosummary/common.data.rst", "reference/_autosummary/common.data.export.rst", "reference/_autosummary/common.data.export.EmbeddingExporter.rst", "reference/_autosummary/common.data.export.load_embeddings_to_bigquery.rst", "reference/_autosummary/common.env_config.rst", "reference/_autosummary/common.env_config.get_available_cpus.rst", "reference/_autosummary/common.logger.rst", "reference/_autosummary/common.logger.Logger.rst", "reference/_autosummary/common.metrics.rst", "reference/_autosummary/common.metrics.base_metrics.rst", "reference/_autosummary/common.metrics.base_metrics.NopMetricsPublisher.rst", "reference/_autosummary/common.metrics.decorators.rst", "reference/_autosummary/common.metrics.decorators.TimerRecordGranularity.rst", "reference/_autosummary/common.metrics.decorators.flushes_metrics.rst", "reference/_autosummary/common.metrics.decorators.profileit.rst", "reference/_autosummary/common.metrics.metrics_interface.rst", "reference/_autosummary/common.metrics.metrics_interface.OpsMetricPublisher.rst", "reference/_autosummary/common.services.rst", "reference/_autosummary/common.services.dataproc.rst", "reference/_autosummary/common.services.dataproc.DataprocService.rst", "reference/_autosummary/common.services.gcp_cloud_logging.rst", "reference/_autosummary/common.services.gcp_cloud_logging.GCPCloudLoggingService.rst", "reference/_autosummary/common.services.gcp_cloud_logging.LogEntries.rst", "reference/_autosummary/common.services.kfp.rst", "reference/_autosummary/common.services.kfp.KFPService.rst", "reference/_autosummary/common.services.vertex_ai.rst", "reference/_autosummary/common.services.vertex_ai.VertexAIService.rst", "reference/_autosummary/common.services.vertex_ai.VertexAiJobConfig.rst", "reference/_autosummary/common.types.rst", "reference/_autosummary/common.types.resource_config.rst", "reference/_autosummary/common.types.resource_config.CommonPipelineComponentConfigs.rst", "reference/_autosummary/common.types.uri.rst", "reference/_autosummary/common.types.uri.gcs_uri.rst", "reference/_autosummary/common.types.uri.gcs_uri.GcsUri.rst", "reference/_autosummary/common.types.uri.http_uri.rst", "reference/_autosummary/common.types.uri.http_uri.HttpUri.rst", "reference/_autosummary/common.types.uri.local_uri.rst", "reference/_autosummary/common.types.uri.local_uri.LocalUri.rst", "reference/_autosummary/common.types.uri.uri.rst", "reference/_autosummary/common.types.uri.uri.Uri.rst", "reference/_autosummary/common.types.uri.uri_factory.rst", "reference/_autosummary/common.types.uri.uri_factory.UriFactory.rst", "reference/_autosummary/common.types.wrappers.rst", "reference/_autosummary/common.types.wrappers.argo_workflow_manifest.rst", "reference/_autosummary/common.types.wrappers.argo_workflow_manifest.ArgoWorkflowManifestWrapper.rst", "reference/_autosummary/common.types.wrappers.argo_workflow_manifest.ArgoWorkflowNodeStatus.rst", "reference/_autosummary/common.types.wrappers.kfp_api.rst", "reference/_autosummary/common.types.wrappers.kfp_api.ApiRunDetailWrapper.rst", "reference/_autosummary/common.utils.rst", "reference/_autosummary/common.utils.compute.rst", "reference/_autosummary/common.utils.compute.random.rst", "reference/_autosummary/common.utils.compute.random.make_compute_deterministic_and_set_seed.rst", "reference/_autosummary/common.utils.compute.serialization.rst", "reference/_autosummary/common.utils.compute.serialization.coder.rst", "reference/_autosummary/common.utils.compute.serialization.coder.CoderProtocol.rst", "reference/_autosummary/common.utils.compute.serialization.serialize_np.rst", "reference/_autosummary/common.utils.compute.serialization.serialize_np.EncodedNdArray.rst", "reference/_autosummary/common.utils.compute.serialization.serialize_np.NumpyCoder.rst", "reference/_autosummary/common.utils.compute.serialization.serialize_protos.rst", "reference/_autosummary/common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.rst", "reference/_autosummary/common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.rst", "reference/_autosummary/common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.rst", "reference/_autosummary/common.utils.compute.serialization.serialize_string.rst", "reference/_autosummary/common.utils.compute.serialization.serialize_string.StringCoder.rst", "reference/_autosummary/common.utils.dataflow.rst", "reference/_autosummary/common.utils.dataflow.get_console_uri_from_pipeline_result.rst", "reference/_autosummary/common.utils.func_tools.rst", "reference/_autosummary/common.utils.func_tools.lru_cache.rst", "reference/_autosummary/common.utils.gcs.rst", "reference/_autosummary/common.utils.gcs.GcsUtils.rst", "reference/_autosummary/common.utils.kfp.rst", "reference/_autosummary/common.utils.kfp.KfpOutputViewers.rst", "reference/_autosummary/common.utils.local_fs.rst", "reference/_autosummary/common.utils.local_fs.FileSystemEntity.rst", "reference/_autosummary/common.utils.local_fs.append_line_to_file.rst", "reference/_autosummary/common.utils.local_fs.copy_files.rst", "reference/_autosummary/common.utils.local_fs.count_files_with_uri_prefix.rst", "reference/_autosummary/common.utils.local_fs.create_empty_file_if_none_exists.rst", "reference/_autosummary/common.utils.local_fs.create_file_symlinks.rst", "reference/_autosummary/common.utils.local_fs.delete_and_create_local_path.rst", "reference/_autosummary/common.utils.local_fs.delete_local_directory.rst", "reference/_autosummary/common.utils.local_fs.does_path_exist.rst", "reference/_autosummary/common.utils.local_fs.list_at_path.rst", "reference/_autosummary/common.utils.local_fs.remove_file_if_exist.rst", "reference/_autosummary/common.utils.local_fs.remove_file_or_folder_if_exist.rst", "reference/_autosummary/common.utils.local_fs.remove_folder_if_exist.rst", "reference/_autosummary/common.utils.local_fs.remove_line_from_file.rst", "reference/_autosummary/common.utils.os_utils.rst", "reference/_autosummary/common.utils.os_utils.import_obj.rst", "reference/_autosummary/common.utils.os_utils.num_lines_in_file.rst", "reference/_autosummary/common.utils.os_utils.run_command_and_stream_stdout.rst", "reference/_autosummary/common.utils.proto_utils.rst", "reference/_autosummary/common.utils.proto_utils.ProtoUtils.rst", "reference/_autosummary/common.utils.retry.rst", "reference/_autosummary/common.utils.retry.RetriesFailedException.rst", "reference/_autosummary/common.utils.retry.retry.rst", "reference/_autosummary/common.utils.test_utils.rst", "reference/_autosummary/common.utils.test_utils.TestArgs.rst", "reference/_autosummary/common.utils.test_utils.parse_args.rst", "reference/_autosummary/common.utils.test_utils.run_tests.rst", "reference/_autosummary/common.utils.torch_training.rst", "reference/_autosummary/common.utils.torch_training.get_distributed_backend.rst", "reference/_autosummary/common.utils.torch_training.get_rank.rst", "reference/_autosummary/common.utils.torch_training.get_world_size.rst", "reference/_autosummary/common.utils.torch_training.is_distributed_available_and_initialized.rst", "reference/_autosummary/common.utils.torch_training.is_distributed_local_debug.rst", "reference/_autosummary/common.utils.torch_training.should_distribute.rst", "reference/_autosummary/env.rst", "reference/_autosummary/env.dep_constants.rst", "reference/_autosummary/env.dep_constants.get_compiled_jar_path.rst", "reference/_autosummary/env.dep_constants.get_current_jar_file.rst", "reference/_autosummary/env.dep_constants.get_jar_file_uri.rst", "reference/_autosummary/env.dep_constants.get_local_jar_directory.rst", "reference/_autosummary/env.pipelines_config.rst", "reference/_autosummary/env.pipelines_config.get_resource_config.rst", "reference/_autosummary/env.pipelines_config.is_resource_config_loaded.rst", "reference/_autosummary/orchestration.rst", "reference/_autosummary/orchestration.kubeflow.rst", "reference/_autosummary/orchestration.kubeflow.kfp_orchestrator.rst", "reference/_autosummary/orchestration.kubeflow.kfp_orchestrator.KfpEnvMetadata.rst", "reference/_autosummary/orchestration.kubeflow.kfp_orchestrator.KfpOrchestrator.rst", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.rst", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_config_populator_task_op.rst", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_data_preprocessor_task_op.rst", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_inferencer_task_op.rst", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_post_processor_task_op.rst", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_split_generator_task_op.rst", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_subgraph_sampler_task_op.rst", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.create_trainer_task_op.rst", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.generate_component_task.rst", "reference/_autosummary/orchestration.kubeflow.kfp_pipeline.generate_pipeline.rst", "reference/_autosummary/orchestration.kubeflow.utils.rst", "reference/_autosummary/orchestration.kubeflow.utils.glt_backend.rst", "reference/_autosummary/orchestration.kubeflow.utils.glt_backend.check_glt_backend_eligibility_component.rst", "reference/_autosummary/orchestration.kubeflow.utils.log_metrics.rst", "reference/_autosummary/orchestration.kubeflow.utils.log_metrics.log_eval_metrics_to_ui.rst", "reference/_autosummary/orchestration.kubeflow.utils.resource.rst", "reference/_autosummary/orchestration.kubeflow.utils.resource.add_task_resource_requirements.rst", "reference/_autosummary/src.rst", "reference/_autosummary/src.applied_tasks.rst", "reference/_autosummary/src.applied_tasks.test_tasks.rst", "reference/_autosummary/src.applied_tasks.test_tasks.academic.rst", "reference/_autosummary/src.applied_tasks.test_tasks.academic.get_pyg_cora_dataset.rst", "reference/_autosummary/src.applied_tasks.test_tasks.academic.log_stats_for_pyg_planetoid_dataset.rst", "reference/_autosummary/src.common.rst", "reference/_autosummary/src.common.constants.rst", "reference/_autosummary/src.common.constants.bq.rst", "reference/_autosummary/src.common.constants.bq.get_embeddings_dataset_bq_path.rst", "reference/_autosummary/src.common.constants.bq.get_embeddings_table.rst", "reference/_autosummary/src.common.constants.bq.get_predictions_table.rst", "reference/_autosummary/src.common.constants.components.rst", "reference/_autosummary/src.common.constants.components.GiGLComponents.rst", "reference/_autosummary/src.common.constants.gcs.rst", "reference/_autosummary/src.common.constants.gcs.get_applied_task_perm_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_applied_task_temp_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_applied_task_temp_regional_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_config_populator_assets_perm_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_data_preprocessor_assets_perm_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_data_preprocessor_assets_temp_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_data_preprocessor_staging_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_dataflow_staging_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_dataflow_temp_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_frozen_gbml_config_proto_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_inferencer_asset_dir_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_inferencer_embeddings_gcs_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_inferencer_predictions_gcs_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_post_processor_asset_dir_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_post_processor_metrics_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_preprocessed_metadata_proto_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_split_dataset_main_samples_gcs_file_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_split_dataset_output_gcs_file_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_split_dataset_random_negatives_gcs_file_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_split_generator_assets_temp_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_flattened_graph_metadata_output_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_node_anchor_based_link_prediction_random_negatives_samples_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_node_anchor_based_link_prediction_samples_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_node_anchor_based_link_prediction_task_dir.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_node_neighborhood_samples_dir.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_node_neighborhood_samples_path_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_root_dir.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_link_based_task_dir.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_link_based_task_labeled_samples_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_link_based_task_unlabeled_samples_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_node_classification_labeled_samples_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_node_classification_task_dir.rst", "reference/_autosummary/src.common.constants.gcs.get_subgraph_sampler_supervised_node_classification_unlabeled_samples_prefix.rst", "reference/_autosummary/src.common.constants.gcs.get_tensorboard_logs_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_directory_path.rst", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_raw_data_schema_file_path.rst", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_stats_directory_path.rst", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_stats_file_path.rst", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_temp_directory_path.rst", "reference/_autosummary/src.common.constants.gcs.get_tf_transform_visualized_facets_file_path.rst", "reference/_autosummary/src.common.constants.gcs.get_tf_transformed_features_schema_path.rst", "reference/_autosummary/src.common.constants.gcs.get_tf_transformed_features_transform_fn_assets_directory_path.rst", "reference/_autosummary/src.common.constants.gcs.get_trained_model_eval_metrics_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_trained_model_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_trained_model_metadata_proto_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_trained_models_dir_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_trained_scripted_model_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_trainer_asset_dir_gcs_path.rst", "reference/_autosummary/src.common.constants.gcs.get_transformed_features_directory_path.rst", "reference/_autosummary/src.common.constants.gcs.get_transformed_features_file_prefix.rst", "reference/_autosummary/src.common.constants.graph_metadata.rst", "reference/_autosummary/src.common.constants.local_fs.rst", "reference/_autosummary/src.common.constants.local_fs.get_gbml_assets_tmp_path.rst", "reference/_autosummary/src.common.constants.local_fs.get_gbml_log_file_prefix_tmp_path.rst", "reference/_autosummary/src.common.constants.local_fs.get_gbml_logs_folder_local_tmp_path.rst", "reference/_autosummary/src.common.constants.local_fs.get_gbml_task_local_tmp_path.rst", "reference/_autosummary/src.common.constants.local_fs.get_gigl_root_directory.rst", "reference/_autosummary/src.common.constants.local_fs.get_inference_embeddings_local_tmp_dir_path.rst", "reference/_autosummary/src.common.constants.local_fs.get_inference_embeddings_local_tmp_file_prefix.rst", "reference/_autosummary/src.common.constants.local_fs.get_inference_predictions_local_tmp_file_prefix.rst", "reference/_autosummary/src.common.constants.local_fs.get_path_to_manifest_file.rst", "reference/_autosummary/src.common.constants.local_fs.get_preprocess_local_staging_dir_path.rst", "reference/_autosummary/src.common.constants.local_fs.get_project_root_directory.rst", "reference/_autosummary/src.common.constants.local_fs.get_python_project_root_path.rst", "reference/_autosummary/src.common.constants.local_fs.get_train_val_info_local_tmp_file_path.rst", "reference/_autosummary/src.common.constants.metrics.rst", "reference/_autosummary/src.common.constants.resource_config.rst", "reference/_autosummary/src.common.constants.test_assets.rst", "reference/_autosummary/src.common.constants.test_assets.get_example_task_edge_features_gcs_dir.rst", "reference/_autosummary/src.common.constants.test_assets.get_example_task_edge_features_schema_gcs_path.rst", "reference/_autosummary/src.common.constants.test_assets.get_example_task_edges_bq_table_path.rst", "reference/_autosummary/src.common.constants.test_assets.get_example_task_frozen_gbml_config_gcs_path.rst", "reference/_autosummary/src.common.constants.test_assets.get_example_task_node_features_gcs_dir.rst", "reference/_autosummary/src.common.constants.test_assets.get_example_task_node_features_schema_gcs_path.rst", "reference/_autosummary/src.common.constants.test_assets.get_example_task_nodes_bq_table_path.rst", "reference/_autosummary/src.common.constants.test_assets.get_example_task_preprocess_gcs_prefix.rst", "reference/_autosummary/src.common.constants.test_assets.get_example_task_static_assets_gcs_dir.rst", "reference/_autosummary/src.common.constants.test_assets.update_bq_table_with_test_assets_and_version.rst", "reference/_autosummary/src.common.constants.test_assets.update_gcs_uri_with_test_assets_and_version.rst", "reference/_autosummary/src.common.constants.time.rst", "reference/_autosummary/src.common.constants.training.rst", "reference/_autosummary/src.common.graph_builder.rst", "reference/_autosummary/src.common.graph_builder.abstract_graph_builder.rst", "reference/_autosummary/src.common.graph_builder.abstract_graph_builder.GraphBuilder.rst", "reference/_autosummary/src.common.graph_builder.gbml_graph_protocol.rst", "reference/_autosummary/src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.rst", "reference/_autosummary/src.common.graph_builder.pyg_graph_builder.rst", "reference/_autosummary/src.common.graph_builder.pyg_graph_builder.PygGraphBuilder.rst", "reference/_autosummary/src.common.graph_builder.pyg_graph_data.rst", "reference/_autosummary/src.common.graph_builder.pyg_graph_data.PygGraphData.rst", "reference/_autosummary/src.common.modeling_task_specs.rst", "reference/_autosummary/src.common.modeling_task_specs.utils.rst", "reference/_autosummary/src.common.modeling_task_specs.utils.early_stop.rst", "reference/_autosummary/src.common.modeling_task_specs.utils.early_stop.EarlyStopper.rst", "reference/_autosummary/src.common.modeling_task_specs.utils.parameter_loading.rst", "reference/_autosummary/src.common.modeling_task_specs.utils.parameter_loading.ArgumentReader.rst", "reference/_autosummary/src.common.modeling_task_specs.utils.profiler_wrapper.rst", "reference/_autosummary/src.common.modeling_task_specs.utils.profiler_wrapper.TorchProfiler.rst", "reference/_autosummary/src.common.models.rst", "reference/_autosummary/src.common.models.dgl.rst", "reference/_autosummary/src.common.models.dgl.homogenous.rst", "reference/_autosummary/src.common.models.layers.rst", "reference/_autosummary/src.common.models.layers.count_min_sketch.rst", "reference/_autosummary/src.common.models.layers.count_min_sketch.CountMinSketch.rst", "reference/_autosummary/src.common.models.layers.count_min_sketch.calculate_in_batch_candidate_sampling_probability.rst", "reference/_autosummary/src.common.models.layers.decoder.rst", "reference/_autosummary/src.common.models.layers.decoder.DecoderType.rst", "reference/_autosummary/src.common.models.layers.decoder.LinkPredictionDecoder.rst", "reference/_autosummary/src.common.models.layers.feature_interaction.rst", "reference/_autosummary/src.common.models.layers.feature_interaction.DCNCross.rst", "reference/_autosummary/src.common.models.layers.feature_interaction.DCNv2.rst", "reference/_autosummary/src.common.models.layers.normalization.rst", "reference/_autosummary/src.common.models.layers.normalization.l2_normalize_embeddings.rst", "reference/_autosummary/src.common.models.pyg.rst", "reference/_autosummary/src.common.models.pyg.heterogeneous.rst", "reference/_autosummary/src.common.models.pyg.heterogeneous.HGT.rst", "reference/_autosummary/src.common.models.pyg.heterogeneous.SimpleHGN.rst", "reference/_autosummary/src.common.models.pyg.nn.rst", "reference/_autosummary/src.common.models.pyg.nn.conv.rst", "reference/_autosummary/src.common.models.pyg.nn.conv.edge_attr_gat_conv.rst", "reference/_autosummary/src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.rst", "reference/_autosummary/src.common.models.pyg.nn.conv.gin_conv.rst", "reference/_autosummary/src.common.models.pyg.nn.conv.gin_conv.GINEConv.rst", "reference/_autosummary/src.common.models.pyg.nn.conv.hgt_conv.rst", "reference/_autosummary/src.common.models.pyg.nn.conv.hgt_conv.HGTConv.rst", "reference/_autosummary/src.common.models.pyg.nn.conv.simplehgn_conv.rst", "reference/_autosummary/src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.rst", "reference/_autosummary/src.common.models.pyg.nn.models.rst", "reference/_autosummary/src.common.models.pyg.nn.models.feature_interaction.rst", "reference/_autosummary/src.common.models.pyg.nn.models.feature_interaction.CombinationMode.rst", "reference/_autosummary/src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.rst", "reference/_autosummary/src.common.models.pyg.nn.models.jumping_knowledge.rst", "reference/_autosummary/src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.rst", "reference/_autosummary/src.common.models.pyg.utils.rst", "reference/_autosummary/src.common.models.pyg.utils.filter_dict.rst", "reference/_autosummary/src.common.models.utils.rst", "reference/_autosummary/src.common.models.utils.torch.rst", "reference/_autosummary/src.common.models.utils.torch.to_hetero_feat.rst", "reference/_autosummary/src.common.translators.rst", "reference/_autosummary/src.common.translators.gbml_protos_translator.rst", "reference/_autosummary/src.common.translators.gbml_protos_translator.GbmlProtosTranslator.rst", "reference/_autosummary/src.common.translators.model_eval_metrics_translator.rst", "reference/_autosummary/src.common.translators.model_eval_metrics_translator.EvalMetricsCollectionTranslator.rst", "reference/_autosummary/src.common.types.rst", "reference/_autosummary/src.common.types.dataflow_job_options.rst", "reference/_autosummary/src.common.types.dataflow_job_options.CommonOptions.rst", "reference/_autosummary/src.common.types.dataset_split.rst", "reference/_autosummary/src.common.types.dataset_split.DatasetSplit.rst", "reference/_autosummary/src.common.types.exception.rst", "reference/_autosummary/src.common.types.exception.SubgraphSamplingValidationError.rst", "reference/_autosummary/src.common.types.exception.SubgraphSamplingValidationErrorType.rst", "reference/_autosummary/src.common.types.features.rst", "reference/_autosummary/src.common.types.features.FeatureTypes.rst", "reference/_autosummary/src.common.types.graph_data.rst", "reference/_autosummary/src.common.types.graph_data.Edge.rst", "reference/_autosummary/src.common.types.graph_data.EdgeType.rst", "reference/_autosummary/src.common.types.graph_data.EdgeUsageType.rst", "reference/_autosummary/src.common.types.graph_data.Node.rst", "reference/_autosummary/src.common.types.model_eval_metrics.rst", "reference/_autosummary/src.common.types.model_eval_metrics.EvalMetric.rst", "reference/_autosummary/src.common.types.model_eval_metrics.EvalMetricType.rst", "reference/_autosummary/src.common.types.model_eval_metrics.EvalMetricsCollection.rst", "reference/_autosummary/src.common.types.pb_wrappers.rst", "reference/_autosummary/src.common.types.pb_wrappers.dataset_metadata.rst", "reference/_autosummary/src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.flattened_graph_metadata.rst", "reference/_autosummary/src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.gigl_resource_config.rst", "reference/_autosummary/src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types.rst", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types.NodePbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types_utils.rst", "reference/_autosummary/src.common.types.pb_wrappers.graph_data_types_utils.get_dehydrated_node_pb_wrappers_from_edge_wrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.graph_metadata.rst", "reference/_autosummary/src.common.types.pb_wrappers.graph_metadata.GraphMetadataPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.rst", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.RandomUniformPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.RandomWeightedPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.SamplingDirectionEnumType.rst", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.TopKPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.sampling_op.UserDefinedPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.subgraph_sampling_strategy.rst", "reference/_autosummary/src.common.types.pb_wrappers.subgraph_sampling_strategy.GlobalRandomUniformStrategyPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathStrategyPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.task_metadata.rst", "reference/_autosummary/src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.trained_model_metadata.rst", "reference/_autosummary/src.common.types.pb_wrappers.trained_model_metadata.TrainedModelMetadataPbWrapper.rst", "reference/_autosummary/src.common.types.pb_wrappers.types.rst", "reference/_autosummary/src.common.types.task_metadata.rst", "reference/_autosummary/src.common.types.task_metadata.TaskMetadataType.rst", "reference/_autosummary/src.common.utils.rst", "reference/_autosummary/src.common.utils.bq.rst", "reference/_autosummary/src.common.utils.bq.BqUtils.rst", "reference/_autosummary/src.common.utils.data.rst", "reference/_autosummary/src.common.utils.data.feature_serialization.rst", "reference/_autosummary/src.common.utils.data.feature_serialization.FeatureSerializationUtils.rst", "reference/_autosummary/src.common.utils.dataflow.rst", "reference/_autosummary/src.common.utils.dataflow.get_sanitized_dataflow_job_name.rst", "reference/_autosummary/src.common.utils.dataflow.init_beam_pipeline_options.rst", "reference/_autosummary/src.common.utils.eval_metrics.rst", "reference/_autosummary/src.common.utils.eval_metrics.hit_rate_at_k.rst", "reference/_autosummary/src.common.utils.eval_metrics.mean_reciprocal_rank.rst", "reference/_autosummary/src.common.utils.file_loader.rst", "reference/_autosummary/src.common.utils.file_loader.FileLoader.rst", "reference/_autosummary/src.common.utils.gbml_protos.rst", "reference/_autosummary/src.common.utils.gbml_protos.TrainingSamplesSchemaProtoUtils.rst", "reference/_autosummary/src.common.utils.metrics_service_provider.rst", "reference/_autosummary/src.common.utils.metrics_service_provider.get_metrics_service_instance.rst", "reference/_autosummary/src.common.utils.metrics_service_provider.init_metrics_publisher_grouping_for_job.rst", "reference/_autosummary/src.common.utils.metrics_service_provider.initialize_metrics.rst", "reference/_autosummary/src.common.utils.model.rst", "reference/_autosummary/src.common.utils.model.load_scripted_model_from_uri.rst", "reference/_autosummary/src.common.utils.model.load_state_dict_from_uri.rst", "reference/_autosummary/src.common.utils.model.save_scripted_model.rst", "reference/_autosummary/src.common.utils.model.save_state_dict.rst", "reference/_autosummary/src.common.utils.scheduler.rst", "reference/_autosummary/src.common.utils.scheduler.CosineDecayScheduler.rst", "reference/_autosummary/src.common.utils.spark_job_manager.rst", "reference/_autosummary/src.common.utils.spark_job_manager.DataprocClusterInitData.rst", "reference/_autosummary/src.common.utils.spark_job_manager.SparkJobManager.rst", "reference/_autosummary/src.common.utils.time.rst", "reference/_autosummary/src.common.utils.time.convert_days_to_ms.rst", "reference/_autosummary/src.common.utils.time.current_datetime.rst", "reference/_autosummary/src.common.utils.time.current_formatted_datetime.rst", "reference/_autosummary/src.common.utils.time.format_datetime.rst", "reference/_autosummary/src.common.utils.time.is_datetime_str_format_valid.rst", "reference/_autosummary/src.common.utils.time.parse_formatted_datetime.rst", "reference/_autosummary/src.common.utils.timeout.rst", "reference/_autosummary/src.common.utils.timeout.TimedOutException.rst", "reference/_autosummary/src.common.utils.timeout.timeout.rst", "reference/_autosummary/src.config_populator.rst", "reference/_autosummary/src.config_populator.config_populator.rst", "reference/_autosummary/src.config_populator.config_populator.ConfigPopulator.rst", "reference/_autosummary/src.data_preprocessor.rst", "reference/_autosummary/src.data_preprocessor.lib.rst", "reference/_autosummary/src.data_preprocessor.lib.enumerate.rst", "reference/_autosummary/src.data_preprocessor.lib.enumerate.queries.rst", "reference/_autosummary/src.data_preprocessor.lib.ingest.rst", "reference/_autosummary/src.data_preprocessor.lib.transform.rst", "reference/_autosummary/src.inference.rst", "reference/_autosummary/src.inference.v1.rst", "reference/_autosummary/src.inference.v1.lib.rst", "reference/_autosummary/src.inference.v1.lib.inference_output_schema.rst", "reference/_autosummary/src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.rst", "reference/_autosummary/src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchemaBuilder.rst", "reference/_autosummary/src.inference.v1.lib.queries.rst", "reference/_autosummary/src.inference.v1.lib.transforms.rst", "reference/_autosummary/src.inference.v2.rst", "reference/_autosummary/src.post_process.rst", "reference/_autosummary/src.post_process.lib.rst", "reference/_autosummary/src.post_process.lib.base_post_processor.rst", "reference/_autosummary/src.post_process.lib.base_post_processor.BasePostProcessor.rst", "reference/_autosummary/src.post_process.utils.rst", "reference/_autosummary/src.post_process.utils.component_runtime.rst", "reference/_autosummary/src.post_process.utils.component_runtime.assert_component_runtimes_match_expected_parameters.rst", "reference/_autosummary/src.post_process.utils.component_runtime.get_runtime_manifest_from_kfp_pipeline.rst", "reference/_autosummary/src.post_process.utils.cosine_similarity.rst", "reference/_autosummary/src.post_process.utils.cosine_similarity.assert_cosine_similarity_stats.rst", "reference/_autosummary/src.post_process.utils.cosine_similarity.calculate_cosine_sim_between_embedding_tables.rst", "reference/_autosummary/src.post_process.utils.cosine_similarity.calculate_cosine_similarity_stats.rst", "reference/_autosummary/src.post_process.utils.cosine_similarity.get_table_paths_via_timedelta.rst", "reference/_autosummary/src.split_generator.rst", "reference/_autosummary/src.subgraph_sampler.rst", "reference/_autosummary/src.subgraph_sampler.lib.rst", "reference/_autosummary/src.training.rst", "reference/_autosummary/src.training.v1.rst", "reference/_autosummary/src.training.v1.lib.rst", "reference/_autosummary/src.training.v1.lib.data_loaders.rst", "reference/_autosummary/src.training.v1.lib.data_loaders.common.rst", "reference/_autosummary/src.training.v1.lib.data_loaders.common.DataloaderConfig.rst", "reference/_autosummary/src.training.v1.lib.data_loaders.common.DataloaderTypes.rst", "reference/_autosummary/src.training.v1.lib.eval_metrics.rst", "reference/_autosummary/src.training.v1.lib.eval_metrics.get_metric_name_for_gauge_model_metrics_hit_rate_at.rst", "reference/_autosummary/src.training.v2.rst", "reference/_autosummary/src.validation_check.rst", "reference/_autosummary/src.validation_check.libs.rst", "reference/_autosummary/src.validation_check.libs.resource_config_checks.rst", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_inferencer_resource_config_valid.rst", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_preprocessor_resource_config_valid.rst", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_shared_resource_config_valid.rst", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_split_generator_resource_config_valid.rst", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_subgraph_sampler_resource_config_valid.rst", "reference/_autosummary/src.validation_check.libs.resource_config_checks.check_if_trainer_resource_config_valid.rst", "reference/_autosummary/src.validation_check.libs.utils.rst", "reference/_autosummary/src.validation_check.libs.utils.assert_proto_field_value_is_truthy.rst", "reference/_autosummary/src.validation_check.libs.utils.assert_proto_has_field.rst", "reference/index.rst", "user_guide/assets/docker_images.md", "user_guide/assets/public_data.md", "user_guide/config_guides/resource_config_guide.md", "user_guide/config_guides/task_config_guide.md", "user_guide/contributing/contributing_guide.md", "user_guide/custom_specs/data_preprocessor_spec_guide.md", "user_guide/custom_specs/modelling_task_spec_guide.md", "user_guide/examples/example1.md", "user_guide/examples/example2.md", "user_guide/getting_started/cloud_setup_guide.md", "user_guide/getting_started/installation.md", "user_guide/getting_started/orchestration.md", "user_guide/getting_started/quick_start.md", "user_guide/index.md", "user_guide/overview/components.md", "user_guide/overview/what_is_gigl.md", "user_guide/trouble_shooting/faq.md"], "titles": ["Config Populator", "Data Preprocessor", "Model Inference", "Split Generator", "Subgraph Sampler", "Trainer", "This REPO is a bit dusty while we prepare for the OSS launch. We will have it in working order coming soon.", "common", "common.beam", "common.collections", "common.collections.frozen_dict", "common.collections.FrozenDict", "common.collections.itertools", "common.collections.batch", "common.collections.sorted_dict", "common.collections.SortedDict", "common.data", "common.data.export", "common.data.EmbeddingExporter", "common.data.load_embeddings_to_bigquery", "common.env_config", "common.get_available_cpus", "common.logger", "common.Logger", "common.metrics", "common.metrics.base_metrics", "common.metrics.NopMetricsPublisher", "common.metrics.decorators", "common.metrics.TimerRecordGranularity", "common.metrics.flushes_metrics", "common.metrics.profileit", "common.metrics.metrics_interface", "common.metrics.OpsMetricPublisher", "common.services", "common.services.dataproc", "common.services.DataprocService", "common.services.gcp_cloud_logging", "common.services.GCPCloudLoggingService", "common.services.LogEntries", "common.services.kfp", "common.services.KFPService", "common.services.vertex_ai", "common.services.VertexAIService", "common.services.VertexAiJobConfig", "common.types", "common.types.resource_config", "common.types.CommonPipelineComponentConfigs", "common.types.uri", "common.types.uri.gcs_uri", "common.types.uri.GcsUri", "common.types.uri.http_uri", "common.types.uri.HttpUri", "common.types.uri.local_uri", "common.types.uri.LocalUri", "common.types.uri.uri", "common.types.Uri", "common.types.uri.uri_factory", "common.types.uri.UriFactory", "common.types.wrappers", "common.types.wrappers.argo_workflow_manifest", "common.types.wrappers.ArgoWorkflowManifestWrapper", "common.types.wrappers.ArgoWorkflowNodeStatus", "common.types.wrappers.kfp_api", "common.types.wrappers.ApiRunDetailWrapper", "common.utils", "common.utils.compute", "common.utils.compute.random", "common.utils.compute.make_compute_deterministic_and_set_seed", "common.utils.compute.serialization", "common.utils.compute.serialization.coder", "common.utils.compute.serialization.CoderProtocol", "common.utils.compute.serialization.serialize_np", "common.utils.compute.serialization.EncodedNdArray", "common.utils.compute.serialization.NumpyCoder", "common.utils.compute.serialization.serialize_protos", "common.utils.compute.serialization.EdgePbWrapperCoder", "common.utils.compute.serialization.GraphPbWrapperCoder", "common.utils.compute.serialization.NodePbWrapperCoder", "common.utils.compute.serialization.serialize_string", "common.utils.compute.serialization.StringCoder", "common.utils.dataflow", "common.utils.get_console_uri_from_pipeline_result", "common.utils.func_tools", "common.utils.lru_cache", "common.utils.gcs", "common.utils.GcsUtils", "common.utils.kfp", "common.utils.KfpOutputViewers", "common.utils.local_fs", "common.utils.FileSystemEntity", "common.utils.append_line_to_file", "common.utils.copy_files", "common.utils.count_files_with_uri_prefix", "common.utils.create_empty_file_if_none_exists", "common.utils.create_file_symlinks", "common.utils.delete_and_create_local_path", "common.utils.delete_local_directory", "common.utils.does_path_exist", "common.utils.list_at_path", "common.utils.remove_file_if_exist", "common.utils.remove_file_or_folder_if_exist", "common.utils.remove_folder_if_exist", "common.utils.remove_line_from_file", "common.utils.os_utils", "common.utils.import_obj", "common.utils.num_lines_in_file", "common.utils.run_command_and_stream_stdout", "common.utils.proto_utils", "common.utils.ProtoUtils", "common.utils.retry", "common.utils.RetriesFailedException", "common.utils.retry", "common.utils.test_utils", "common.utils.TestArgs", "common.utils.parse_args", "common.utils.run_tests", "common.utils.torch_training", "common.utils.get_distributed_backend", "common.utils.get_rank", "common.utils.get_world_size", "common.utils.is_distributed_available_and_initialized", "common.utils.is_distributed_local_debug", "common.utils.should_distribute", "env", "env.dep_constants", "env.get_compiled_jar_path", "env.get_current_jar_file", "env.get_jar_file_uri", "env.get_local_jar_directory", "env.pipelines_config", "env.get_resource_config", "env.is_resource_config_loaded", "orchestration", "orchestration.kubeflow", "orchestration.kubeflow.kfp_orchestrator", "orchestration.kubeflow.KfpEnvMetadata", "orchestration.kubeflow.KfpOrchestrator", "orchestration.kubeflow.kfp_pipeline", "orchestration.kubeflow.create_config_populator_task_op", "orchestration.kubeflow.create_data_preprocessor_task_op", "orchestration.kubeflow.create_inferencer_task_op", "orchestration.kubeflow.create_post_processor_task_op", "orchestration.kubeflow.create_split_generator_task_op", "orchestration.kubeflow.create_subgraph_sampler_task_op", "orchestration.kubeflow.create_trainer_task_op", "orchestration.kubeflow.generate_component_task", "orchestration.kubeflow.generate_pipeline", "orchestration.kubeflow.utils", "orchestration.kubeflow.utils.glt_backend", "orchestration.kubeflow.utils.check_glt_backend_eligibility_component", "orchestration.kubeflow.utils.log_metrics", "orchestration.kubeflow.utils.log_eval_metrics_to_ui", "orchestration.kubeflow.utils.resource", "orchestration.kubeflow.utils.add_task_resource_requirements", "src", "src.applied_tasks", "src.applied_tasks.test_tasks", "src.applied_tasks.test_tasks.academic", "src.applied_tasks.test_tasks.get_pyg_cora_dataset", "src.applied_tasks.test_tasks.log_stats_for_pyg_planetoid_dataset", "src.common", "src.common.constants", "src.common.constants.bq", "src.common.constants.get_embeddings_dataset_bq_path", "src.common.constants.get_embeddings_table", "src.common.constants.get_predictions_table", "src.common.constants.components", "src.common.constants.GiGLComponents", "src.common.constants.gcs", "src.common.constants.get_applied_task_perm_gcs_path", "src.common.constants.get_applied_task_temp_gcs_path", "src.common.constants.get_applied_task_temp_regional_gcs_path", "src.common.constants.get_config_populator_assets_perm_gcs_path", "src.common.constants.get_data_preprocessor_assets_perm_gcs_path", "src.common.constants.get_data_preprocessor_assets_temp_gcs_path", "src.common.constants.get_data_preprocessor_staging_gcs_path", "src.common.constants.get_dataflow_staging_gcs_path", "src.common.constants.get_dataflow_temp_gcs_path", "src.common.constants.get_frozen_gbml_config_proto_gcs_path", "src.common.constants.get_inferencer_asset_dir_gcs_path", "src.common.constants.get_inferencer_embeddings_gcs_prefix", "src.common.constants.get_inferencer_predictions_gcs_prefix", "src.common.constants.get_post_processor_asset_dir_gcs_path", "src.common.constants.get_post_processor_metrics_gcs_path", "src.common.constants.get_preprocessed_metadata_proto_gcs_path", "src.common.constants.get_split_dataset_main_samples_gcs_file_prefix", "src.common.constants.get_split_dataset_output_gcs_file_prefix", "src.common.constants.get_split_dataset_random_negatives_gcs_file_prefix", "src.common.constants.get_split_generator_assets_temp_gcs_path", "src.common.constants.get_subgraph_sampler_flattened_graph_metadata_output_gcs_path", "src.common.constants.get_subgraph_sampler_node_anchor_based_link_prediction_random_negatives_samples_prefix", "src.common.constants.get_subgraph_sampler_node_anchor_based_link_prediction_samples_prefix", "src.common.constants.get_subgraph_sampler_node_anchor_based_link_prediction_task_dir", "src.common.constants.get_subgraph_sampler_node_neighborhood_samples_dir", "src.common.constants.get_subgraph_sampler_node_neighborhood_samples_path_prefix", "src.common.constants.get_subgraph_sampler_root_dir", "src.common.constants.get_subgraph_sampler_supervised_link_based_task_dir", "src.common.constants.get_subgraph_sampler_supervised_link_based_task_labeled_samples_prefix", "src.common.constants.get_subgraph_sampler_supervised_link_based_task_unlabeled_samples_prefix", "src.common.constants.get_subgraph_sampler_supervised_node_classification_labeled_samples_prefix", "src.common.constants.get_subgraph_sampler_supervised_node_classification_task_dir", "src.common.constants.get_subgraph_sampler_supervised_node_classification_unlabeled_samples_prefix", "src.common.constants.get_tensorboard_logs_gcs_path", "src.common.constants.get_tf_transform_directory_path", "src.common.constants.get_tf_transform_raw_data_schema_file_path", "src.common.constants.get_tf_transform_stats_directory_path", "src.common.constants.get_tf_transform_stats_file_path", "src.common.constants.get_tf_transform_temp_directory_path", "src.common.constants.get_tf_transform_visualized_facets_file_path", "src.common.constants.get_tf_transformed_features_schema_path", "src.common.constants.get_tf_transformed_features_transform_fn_assets_directory_path", "src.common.constants.get_trained_model_eval_metrics_gcs_path", "src.common.constants.get_trained_model_gcs_path", "src.common.constants.get_trained_model_metadata_proto_gcs_path", "src.common.constants.get_trained_models_dir_gcs_path", "src.common.constants.get_trained_scripted_model_gcs_path", "src.common.constants.get_trainer_asset_dir_gcs_path", "src.common.constants.get_transformed_features_directory_path", "src.common.constants.get_transformed_features_file_prefix", "src.common.constants.graph_metadata", "src.common.constants.local_fs", "src.common.constants.get_gbml_assets_tmp_path", "src.common.constants.get_gbml_log_file_prefix_tmp_path", "src.common.constants.get_gbml_logs_folder_local_tmp_path", "src.common.constants.get_gbml_task_local_tmp_path", "src.common.constants.get_gigl_root_directory", "src.common.constants.get_inference_embeddings_local_tmp_dir_path", "src.common.constants.get_inference_embeddings_local_tmp_file_prefix", "src.common.constants.get_inference_predictions_local_tmp_file_prefix", "src.common.constants.get_path_to_manifest_file", "src.common.constants.get_preprocess_local_staging_dir_path", "src.common.constants.get_project_root_directory", "src.common.constants.get_python_project_root_path", "src.common.constants.get_train_val_info_local_tmp_file_path", "src.common.constants.metrics", "src.common.constants.resource_config", "src.common.constants.test_assets", "src.common.constants.get_example_task_edge_features_gcs_dir", "src.common.constants.get_example_task_edge_features_schema_gcs_path", "src.common.constants.get_example_task_edges_bq_table_path", "src.common.constants.get_example_task_frozen_gbml_config_gcs_path", "src.common.constants.get_example_task_node_features_gcs_dir", "src.common.constants.get_example_task_node_features_schema_gcs_path", "src.common.constants.get_example_task_nodes_bq_table_path", "src.common.constants.get_example_task_preprocess_gcs_prefix", "src.common.constants.get_example_task_static_assets_gcs_dir", "src.common.constants.update_bq_table_with_test_assets_and_version", "src.common.constants.update_gcs_uri_with_test_assets_and_version", "src.common.constants.time", "src.common.constants.training", "src.common.graph_builder", "src.common.graph_builder.abstract_graph_builder", "src.common.graph_builder.GraphBuilder", "src.common.graph_builder.gbml_graph_protocol", "src.common.graph_builder.GbmlGraphDataProtocol", "src.common.graph_builder.pyg_graph_builder", "src.common.graph_builder.PygGraphBuilder", "src.common.graph_builder.pyg_graph_data", "src.common.graph_builder.PygGraphData", "src.common.modeling_task_specs", "src.common.modeling_task_specs.utils", "src.common.modeling_task_specs.utils.early_stop", "src.common.modeling_task_specs.utils.EarlyStopper", "src.common.modeling_task_specs.utils.parameter_loading", "src.common.modeling_task_specs.utils.ArgumentReader", "src.common.modeling_task_specs.utils.profiler_wrapper", "src.common.modeling_task_specs.utils.TorchProfiler", "src.common.models", "src.common.models.dgl", "src.common.models.dgl.homogenous", "src.common.models.layers", "src.common.models.layers.count_min_sketch", "src.common.models.layers.CountMinSketch", "src.common.models.layers.calculate_in_batch_candidate_sampling_probability", "src.common.models.layers.decoder", "src.common.models.layers.DecoderType", "src.common.models.layers.LinkPredictionDecoder", "src.common.models.layers.feature_interaction", "src.common.models.layers.DCNCross", "src.common.models.layers.DCNv2", "src.common.models.layers.normalization", "src.common.models.layers.l2_normalize_embeddings", "src.common.models.pyg", "src.common.models.pyg.heterogeneous", "src.common.models.pyg.HGT", "src.common.models.pyg.SimpleHGN", "src.common.models.pyg.nn", "src.common.models.pyg.nn.conv", "src.common.models.pyg.nn.conv.edge_attr_gat_conv", "src.common.models.pyg.nn.conv.EdgeAttrGATConv", "src.common.models.pyg.nn.conv.gin_conv", "src.common.models.pyg.nn.conv.GINEConv", "src.common.models.pyg.nn.conv.hgt_conv", "src.common.models.pyg.nn.conv.HGTConv", "src.common.models.pyg.nn.conv.simplehgn_conv", "src.common.models.pyg.nn.conv.SimpleHGNConv", "src.common.models.pyg.nn.models", "src.common.models.pyg.nn.models.feature_interaction", "src.common.models.pyg.nn.models.CombinationMode", "src.common.models.pyg.nn.models.FeatureInteraction", "src.common.models.pyg.nn.models.jumping_knowledge", "src.common.models.pyg.nn.models.JumpingKnowledge", "src.common.models.pyg.utils", "src.common.models.pyg.filter_dict", "src.common.models.utils", "src.common.models.utils.torch", "src.common.models.utils.to_hetero_feat", "src.common.translators", "src.common.translators.gbml_protos_translator", "src.common.translators.GbmlProtosTranslator", "src.common.translators.model_eval_metrics_translator", "src.common.translators.EvalMetricsCollectionTranslator", "src.common.types", "src.common.types.dataflow_job_options", "src.common.types.CommonOptions", "src.common.types.dataset_split", "src.common.types.DatasetSplit", "src.common.types.exception", "src.common.types.SubgraphSamplingValidationError", "src.common.types.SubgraphSamplingValidationErrorType", "src.common.types.features", "src.common.types.FeatureTypes", "src.common.types.graph_data", "src.common.types.Edge", "src.common.types.EdgeType", "src.common.types.EdgeUsageType", "src.common.types.Node", "src.common.types.model_eval_metrics", "src.common.types.EvalMetric", "src.common.types.EvalMetricType", "src.common.types.EvalMetricsCollection", "src.common.types.pb_wrappers", "src.common.types.pb_wrappers.dataset_metadata", "src.common.types.pb_wrappers.DatasetMetadataPbWrapper", "src.common.types.pb_wrappers.flattened_graph_metadata", "src.common.types.pb_wrappers.FlattenedGraphMetadataPbWrapper", "src.common.types.pb_wrappers.gigl_resource_config", "src.common.types.pb_wrappers.GiglResourceConfigWrapper", "src.common.types.pb_wrappers.graph_data_types", "src.common.types.pb_wrappers.EdgePbWrapper", "src.common.types.pb_wrappers.GraphPbWrapper", "src.common.types.pb_wrappers.NodePbWrapper", "src.common.types.pb_wrappers.graph_data_types_utils", "src.common.types.pb_wrappers.get_dehydrated_node_pb_wrappers_from_edge_wrapper", "src.common.types.pb_wrappers.graph_metadata", "src.common.types.pb_wrappers.GraphMetadataPbWrapper", "src.common.types.pb_wrappers.sampling_op", "src.common.types.pb_wrappers.RandomUniformPbWrapper", "src.common.types.pb_wrappers.RandomWeightedPbWrapper", "src.common.types.pb_wrappers.SamplingDirectionEnumType", "src.common.types.pb_wrappers.SamplingOpPbWrapper", "src.common.types.pb_wrappers.TopKPbWrapper", "src.common.types.pb_wrappers.UserDefinedPbWrapper", "src.common.types.pb_wrappers.subgraph_sampling_strategy", "src.common.types.pb_wrappers.GlobalRandomUniformStrategyPbWrapper", "src.common.types.pb_wrappers.MessagePassingPathPbWrapper", "src.common.types.pb_wrappers.MessagePassingPathStrategyPbWrapper", "src.common.types.pb_wrappers.SubgraphSamplingStrategyPbWrapper", "src.common.types.pb_wrappers.task_metadata", "src.common.types.pb_wrappers.TaskMetadataPbWrapper", "src.common.types.pb_wrappers.trained_model_metadata", "src.common.types.pb_wrappers.TrainedModelMetadataPbWrapper", "src.common.types.pb_wrappers.types", "src.common.types.task_metadata", "src.common.types.TaskMetadataType", "src.common.utils", "src.common.utils.bq", "src.common.utils.BqUtils", "src.common.utils.data", "src.common.utils.data.feature_serialization", "src.common.utils.data.FeatureSerializationUtils", "src.common.utils.dataflow", "src.common.utils.get_sanitized_dataflow_job_name", "src.common.utils.init_beam_pipeline_options", "src.common.utils.eval_metrics", "src.common.utils.hit_rate_at_k", "src.common.utils.mean_reciprocal_rank", "src.common.utils.file_loader", "src.common.utils.FileLoader", "src.common.utils.gbml_protos", "src.common.utils.TrainingSamplesSchemaProtoUtils", "src.common.utils.metrics_service_provider", "src.common.utils.get_metrics_service_instance", "src.common.utils.init_metrics_publisher_grouping_for_job", "src.common.utils.initialize_metrics", "src.common.utils.model", "src.common.utils.load_scripted_model_from_uri", "src.common.utils.load_state_dict_from_uri", "src.common.utils.save_scripted_model", "src.common.utils.save_state_dict", "src.common.utils.scheduler", "src.common.utils.CosineDecayScheduler", "src.common.utils.spark_job_manager", "src.common.utils.DataprocClusterInitData", "src.common.utils.SparkJobManager", "src.common.utils.time", "src.common.utils.convert_days_to_ms", "src.common.utils.current_datetime", "src.common.utils.current_formatted_datetime", "src.common.utils.format_datetime", "src.common.utils.is_datetime_str_format_valid", "src.common.utils.parse_formatted_datetime", "src.common.utils.timeout", "src.common.utils.TimedOutException", "src.common.utils.timeout", "src.config_populator", "src.config_populator.config_populator", "src.ConfigPopulator", "src.data_preprocessor", "src.data_preprocessor.lib", "src.data_preprocessor.lib.enumerate", "src.data_preprocessor.lib.enumerate.queries", "src.data_preprocessor.lib.ingest", "src.data_preprocessor.lib.transform", "src.inference", "src.inference.v1", "src.inference.v1.lib", "src.inference.v1.lib.inference_output_schema", "src.inference.v1.lib.InferenceOutputBigqueryTableSchema", "src.inference.v1.lib.InferenceOutputBigqueryTableSchemaBuilder", "src.inference.v1.lib.queries", "src.inference.v1.lib.transforms", "src.inference.v2", "src.post_process", "src.post_process.lib", "src.post_process.lib.base_post_processor", "src.post_process.lib.BasePostProcessor", "src.post_process.utils", "src.post_process.utils.component_runtime", "src.post_process.utils.assert_component_runtimes_match_expected_parameters", "src.post_process.utils.get_runtime_manifest_from_kfp_pipeline", "src.post_process.utils.cosine_similarity", "src.post_process.utils.assert_cosine_similarity_stats", "src.post_process.utils.calculate_cosine_sim_between_embedding_tables", "src.post_process.utils.calculate_cosine_similarity_stats", "src.post_process.utils.get_table_paths_via_timedelta", "src.split_generator", "src.subgraph_sampler", "src.subgraph_sampler.lib", "src.training", "src.training.v1", "src.training.v1.lib", "src.training.v1.lib.data_loaders", "src.training.v1.lib.data_loaders.common", "src.training.v1.lib.data_loaders.DataloaderConfig", "src.training.v1.lib.data_loaders.DataloaderTypes", "src.training.v1.lib.eval_metrics", "src.training.v1.lib.get_metric_name_for_gauge_model_metrics_hit_rate_at", "src.training.v2", "src.validation_check", "src.validation_check.libs", "src.validation_check.libs.resource_config_checks", "src.validation_check.libs.check_if_inferencer_resource_config_valid", "src.validation_check.libs.check_if_preprocessor_resource_config_valid", "src.validation_check.libs.check_if_shared_resource_config_valid", "src.validation_check.libs.check_if_split_generator_resource_config_valid", "src.validation_check.libs.check_if_subgraph_sampler_resource_config_valid", "src.validation_check.libs.check_if_trainer_resource_config_valid", "src.validation_check.libs.utils", "src.validation_check.libs.assert_proto_field_value_is_truthy", "src.validation_check.libs.assert_proto_has_field", "API Reference", "Docker Images", "Public Assets", "Resource Config Guide", "Task Config Guide", "Contributing Guide", "Data Preprocessor Spec Guide", "Modeling Task Spec Guide", "Example Walkthrough #1", "Example Walkthrough #2", "Cloud Setup Guide", "Installation", "Orchestration", "Quick Start Guide", "User Guide", "GiGL Components", "What is GiGL?", "Frequently Asked Questions (FAQ)"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 11, 13, 15, 18, 19, 21, 23, 35, 37, 40, 42, 49, 51, 53, 55, 57, 70, 73, 75, 76, 77, 79, 85, 87, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 117, 118, 130, 153, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 252, 254, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 350, 359, 367, 373, 378, 404, 454, 464, 472, 473, 474], "take": [0, 1, 5, 6, 13, 111, 276, 279, 285, 289, 291, 293, 295, 299, 301, 407, 433, 473], "templat": [0, 1, 2, 3, 4, 5, 407, 473, 474, 476], "gener": [0, 1, 2, 4, 5, 6, 11, 15, 17, 53, 70, 75, 76, 77, 146, 184, 185, 186, 187, 188, 252, 258, 289, 291, 293, 295, 301, 335, 337, 373, 464, 473, 474, 476, 477], "frozen": [0, 1, 2, 3, 4, 5, 11, 15, 172, 178, 407], "us": [0, 1, 2, 3, 4, 5, 6, 7, 11, 15, 17, 23, 37, 40, 42, 53, 70, 73, 75, 76, 77, 79, 85, 115, 117, 149, 172, 176, 177, 192, 193, 195, 196, 200, 202, 203, 204, 205, 207, 226, 252, 254, 256, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 324, 337, 340, 343, 350, 355, 367, 373, 391, 404, 418, 464, 465, 472, 473, 474, 475], "all": [0, 1, 2, 3, 4, 5, 6, 18, 35, 37, 42, 72, 98, 115, 252, 256, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 314, 350, 357, 359, 367, 378, 407, 426, 464], "subsequ": [0, 1, 2, 18, 85, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "compon": [0, 1, 2, 3, 4, 5, 46, 60, 75, 76, 77, 87, 125, 127, 128, 136, 145, 146, 151, 153, 154, 167, 314, 337, 373, 407, 464, 474, 475, 477], "job_nam": [0, 1, 2, 3, 4, 5, 6, 43, 138, 139, 140, 141, 142, 143, 144, 145, 176, 177, 373, 473], "appliedtaskidentifi": [0, 1, 2, 3, 4, 5, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 226, 227, 228, 230, 233, 373, 473, 474], "which": [0, 1, 2, 3, 4, 5, 6, 18, 23, 75, 76, 77, 85, 113, 192, 193, 195, 196, 200, 258, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 345, 350, 375, 418, 464, 473, 474, 477], "uniqu": [0, 1, 2, 3, 4, 5, 258, 373, 473], "identifi": [0, 1, 2, 3, 4, 5, 53, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 258, 373, 418, 473], "an": [0, 1, 2, 3, 4, 5, 6, 11, 15, 17, 18, 23, 28, 49, 51, 53, 55, 57, 72, 75, 76, 77, 85, 87, 93, 104, 146, 167, 258, 272, 275, 276, 278, 279, 284, 285, 289, 291, 293, 295, 298, 299, 301, 303, 314, 316, 319, 321, 325, 329, 333, 335, 343, 349, 350, 359, 364, 433, 445, 459, 460, 473, 477], "end": [0, 1, 2, 3, 4, 5, 132, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 473, 477], "task": [0, 1, 2, 3, 4, 5, 6, 149, 153, 196, 197, 198, 295, 357, 359, 373, 473, 474, 475, 477], "task_config_uri": [0, 1, 2, 3, 4, 5, 6, 138, 139, 140, 141, 142, 143, 144, 149, 151, 384, 473], "uri": [0, 1, 2, 3, 4, 5, 18, 35, 37, 85, 92, 98, 130, 145, 149, 247, 333, 335, 337, 367, 378, 384, 386, 387, 388, 389, 444, 454, 473], "path": [0, 1, 2, 3, 4, 5, 18, 40, 49, 51, 53, 55, 57, 85, 87, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 136, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 188, 189, 192, 193, 195, 196, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 224, 229, 233, 247, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 333, 335, 350, 355, 357, 367, 407, 473, 474], "point": [0, 1, 2, 3, 4, 5, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "gbmlconfig": [0, 1, 2, 3, 4, 5, 407], "proto": [0, 1, 2, 3, 4, 5, 178, 184, 189, 213, 333, 335, 340, 359, 459, 460, 464], "yaml": [0, 1, 2, 3, 4, 5, 6, 87, 184, 189, 213, 247, 464, 473, 474], "file": [0, 1, 2, 3, 4, 5, 6, 17, 18, 19, 23, 35, 40, 53, 85, 87, 89, 90, 91, 92, 93, 97, 98, 99, 100, 102, 113, 115, 123, 130, 136, 178, 184, 185, 186, 187, 190, 191, 194, 197, 198, 199, 201, 204, 206, 208, 209, 213, 218, 222, 227, 228, 229, 233, 367, 378, 426, 464, 473, 474, 476, 477], "resource_config_uri": [0, 1, 2, 3, 4, 5, 6, 130, 138, 139, 140, 141, 142, 143, 144, 145, 473, 474], "giglresourceconfig": [0, 1, 2, 3, 4, 5, 163, 337, 452, 453, 454, 455, 456, 457], "job": [0, 1, 2, 3, 4, 5, 35, 37, 42, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 222, 223, 224, 227, 228, 233, 314, 367, 373, 407, 473, 474], "relat": [0, 4, 6, 254, 258, 289, 291, 293, 295, 301, 309, 324, 350, 373, 407, 465], "metadata": [0, 1, 4, 5, 87, 136, 184, 189, 213, 258, 293, 333, 335, 343, 357, 359, 407, 418, 465, 473], "sharedconfig": [0, 1, 2, 3, 5, 407], "These": [0, 1, 3, 4, 6, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 472, 477], "ar": [0, 1, 2, 3, 4, 5, 6, 17, 35, 60, 72, 75, 76, 77, 130, 151, 158, 217, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 350, 357, 367, 404, 472, 474, 476, 477], "mostli": 0, "gc": [0, 1, 3, 6, 18, 19, 49, 55, 85, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 247, 337, 471], "follow": [0, 1, 2, 3, 4, 5, 6, 23, 37, 72, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 465, 472, 474, 477], "read": [0, 1, 2, 3, 4, 5, 6, 85, 476], "write": [0, 1, 2, 3, 75, 76, 77, 85, 172, 258, 474], "from": [0, 1, 2, 3, 4, 5, 6, 19, 23, 37, 72, 75, 76, 77, 85, 91, 102, 130, 136, 254, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 314, 333, 335, 340, 350, 367, 391, 473, 474, 477], "intermediari": [0, 471], "data": [0, 2, 3, 4, 5, 6, 158, 173, 174, 175, 203, 204, 205, 207, 209, 210, 217, 252, 254, 256, 258, 272, 284, 285, 289, 291, 293, 295, 301, 314, 343, 367, 464, 474, 475, 476, 477], "commun": [0, 5, 42, 477], "medium": 0, "For": [0, 1, 4, 5, 6, 35, 37, 75, 76, 77, 121, 254, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 350, 359, 373, 433, 473, 474, 477], "exampl": [0, 1, 2, 3, 4, 5, 6, 23, 37, 75, 76, 77, 85, 87, 247, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 350, 373, 435, 465, 474], "field": [0, 1, 2, 3, 4, 5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 340, 350, 418, 454, 459, 460, 464, 476], "trainedmodelmetadata": [0, 2, 5, 361], "indic": [0, 1, 4, 5, 85, 258, 289, 291, 293, 295, 301, 306, 350], "trainer": [0, 6, 151, 211, 212, 213, 215, 216, 337, 464, 476, 477], "train": [0, 2, 3, 6, 117, 118, 119, 120, 121, 122, 158, 212, 213, 214, 216, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 464, 473, 474, 476, 477], "model": [0, 5, 6, 151, 212, 213, 214, 215, 216, 386, 387, 388, 389, 475, 477], "thi": [0, 1, 2, 3, 4, 5, 11, 15, 18, 23, 37, 42, 53, 70, 72, 73, 75, 76, 77, 79, 85, 111, 118, 119, 121, 165, 252, 254, 256, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 343, 350, 359, 367, 373, 391, 404, 435, 460, 464, 465, 472, 473, 474, 475, 477], "inferenc": [0, 2, 6, 179, 180, 181, 226, 337, 426, 464, 476, 477], "import": [0, 1, 2, 3, 4, 5, 104, 340, 464, 474], "gigl": [0, 1, 2, 3, 4, 5, 7, 23, 46, 123, 132, 136, 146, 154, 164, 165, 169, 170, 171, 172, 173, 174, 175, 225, 231, 285, 407, 464, 465, 471, 472, 475], "src": [0, 1, 2, 3, 4, 5, 6, 46, 111, 473, 474], "config_popul": [0, 407, 473], "configpopul": 0, "common": [0, 1, 2, 3, 4, 5, 153, 444, 445, 464, 473, 474, 477], "urifactori": [0, 1, 2, 3, 4, 5, 473, 474], "type": [0, 1, 2, 3, 4, 5, 6, 11, 13, 15, 18, 19, 21, 23, 35, 37, 40, 42, 75, 76, 77, 83, 85, 87, 92, 97, 98, 104, 106, 111, 113, 115, 117, 120, 130, 136, 146, 149, 151, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 252, 254, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 306, 309, 367, 373, 375, 376, 378, 387, 397, 398, 464, 465, 473, 474], "applied_task_identifi": [0, 1, 2, 3, 4, 5, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 226, 227, 228, 230, 233, 373, 473, 474], "my_gigl_job_nam": [0, 1, 2, 3, 4, 5], "create_uri": [0, 1, 2, 3, 4, 5, 57, 473, 474], "g": [0, 1, 2, 3, 4, 5, 6, 11, 15, 18, 53, 55, 75, 76, 77, 85, 98, 104, 111, 179, 182, 216, 247, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 333, 335, 337, 359, 404, 464, 473, 477], "my": [0, 1, 2, 3, 4, 5, 473, 474], "temp": [0, 1, 2, 3, 4, 5, 170, 171, 192, 195, 196, 200, 207, 464, 471], "asset": [0, 1, 2, 3, 4, 5, 6, 169, 170, 171, 172, 173, 174, 175, 179, 182, 188, 192, 195, 196, 200, 203, 205, 207, 210, 216, 221, 247, 337, 418, 426, 464, 471, 477], "bucket": [0, 1, 2, 3, 4, 5, 6, 42, 85, 169, 170, 247, 337, 464, 471, 474], "task_config": [0, 1, 2, 3, 4, 5, 6, 473], "resource_config": [0, 1, 2, 3, 4, 5, 6, 46, 130, 337, 473], "command": [0, 1, 2, 3, 4, 5, 43, 87, 106, 130, 314], "line": [0, 1, 2, 3, 4, 5, 17, 90, 102, 130, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 433], "python": [0, 1, 2, 3, 4, 5, 6, 35, 87, 113, 258, 278, 404, 472, 474], "m": [0, 1, 2, 3, 4, 5, 6, 87, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 398, 399, 400, 401], "mau_sample_task_id": 0, "template_uri": 0, "test": [0, 3, 5, 17, 113, 114, 115, 158, 247, 272, 474, 476, 477], "placehold": 0, "example_task_asset": 0, "mau": [0, 2, 3], "mau_template_gbml_config_20230213": 0, "output_file_path_frozen_gbml_config_uri": 0, "config_path": 0, "note": [0, 1, 2, 3, 4, 5, 17, 18, 42, 60, 75, 76, 77, 111, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 433, 460], "method": [0, 3, 4, 6, 11, 15, 18, 23, 26, 32, 35, 37, 38, 40, 43, 46, 51, 53, 55, 57, 60, 61, 63, 70, 72, 73, 75, 76, 77, 79, 85, 87, 108, 113, 135, 136, 252, 254, 256, 258, 262, 264, 266, 272, 275, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 309, 311, 314, 323, 324, 326, 328, 329, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 361, 367, 370, 378, 380, 391, 393, 394, 407, 418, 419, 426, 444, 460], "seen": [0, 272, 464, 474], "usag": [0, 75, 76, 77, 130, 314], "Be": 0, "sure": [0, 3, 4, 6, 472, 474], "discrep": 0, "v": [0, 72, 278, 279, 289, 291, 293, 295, 301], "A": [0, 1, 2, 5, 13, 18, 23, 35, 37, 40, 42, 49, 53, 55, 57, 75, 76, 77, 85, 91, 94, 98, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 350, 378, 391, 459, 460, 471], "If": [0, 4, 5, 6, 11, 15, 18, 23, 53, 70, 72, 73, 75, 76, 77, 79, 85, 91, 94, 98, 101, 111, 121, 130, 136, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 350, 367, 378, 433, 464, 473, 477], "trainedmodeluri": [0, 2, 5], "exist": [0, 1, 3, 4, 6, 35, 57, 90, 91, 93, 94, 95, 97, 99, 100, 101, 102, 252, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367, 378, 473], "skiptrain": 0, "true": [0, 5, 11, 15, 23, 35, 42, 43, 49, 51, 53, 55, 67, 70, 72, 73, 79, 85, 91, 94, 97, 98, 101, 120, 121, 122, 131, 149, 252, 254, 256, 258, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 340, 367, 378, 400], "we": [0, 1, 2, 3, 4, 5, 17, 85, 272, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 340, 350, 373, 391, 433, 465, 474, 477], "pipelin": [0, 1, 2, 3, 40, 75, 76, 77, 87, 130, 132, 136, 146, 151, 153, 314, 367, 373, 473, 477], "pre": [0, 6, 252, 256, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 474], "overwrit": [0, 91, 94], "although": [0, 276, 279, 285, 299], "ad": [0, 2, 5, 6, 18, 23, 111, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "you": [0, 1, 2, 3, 4, 5, 6, 23, 37, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 373, 464, 465, 471, 472, 473, 474, 475, 477], "mai": [0, 2, 4, 5, 6, 11, 15, 18, 70, 73, 75, 76, 77, 79, 111, 252, 254, 256, 258, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 471, 473, 474, 477], "add": [0, 1, 3, 4, 18, 153, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 350, 367], "your": [0, 5, 6, 23, 87, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367, 464, 465, 471, 472, 473, 474], "enabl": [0, 4, 5, 23, 87, 117, 121, 278, 279, 418, 471, 474, 477], "ani": [0, 6, 11, 23, 29, 49, 51, 53, 55, 75, 76, 77, 254, 258, 272, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 314, 350, 357, 373, 474], "featur": [0, 1, 4, 5, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 252, 254, 256, 258, 278, 279, 284, 285, 289, 291, 293, 295, 301, 306, 309, 321, 340, 476, 477], "option": [0, 1, 2, 3, 4, 5, 18, 23, 35, 40, 42, 53, 85, 91, 92, 94, 98, 106, 111, 117, 130, 136, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 252, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 350, 367, 373, 378, 404, 465, 473, 474], "flag": [0, 3, 4, 85, 314], "node": [1, 2, 3, 4, 5, 6, 190, 191, 192, 193, 194, 199, 200, 201, 203, 204, 205, 208, 209, 217, 252, 254, 256, 258, 284, 285, 289, 291, 293, 295, 301, 309, 340, 341, 350, 357, 359, 418, 474, 476, 477], "edg": [1, 3, 4, 203, 204, 205, 208, 209, 217, 252, 254, 256, 258, 285, 289, 291, 293, 295, 301, 339, 340, 350, 357, 359, 465, 476, 477], "respect": [1, 4, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 357], "sourc": [1, 6, 91, 94, 154, 225, 343, 350, 359, 367, 477], "produc": [1, 2, 3, 75, 76, 77, 151, 258, 279, 289, 291, 293, 295, 301, 418], "preprocess": [1, 6, 184], "transform": [1, 6, 203, 204, 205, 206, 207, 209, 210, 217, 218, 284, 293, 301, 472, 476, 477], "version": [1, 5, 40, 75, 76, 77, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 472], "It": [1, 4, 5, 11, 15, 42, 53, 70, 73, 79, 252, 254, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314], "tensorflow": [1, 203, 204, 205, 206, 207, 273, 278, 477], "achiev": [1, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "distribut": [1, 2, 117, 118, 119, 120, 121, 122, 476, 477], "fashion": [1, 2], "allow": [1, 4, 5, 6, 23, 35, 61, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 345, 474, 477], "like": [1, 5, 6, 11, 15, 18, 23, 72, 85, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 404, 473, 474, 477], "categor": [1, 477], "encod": [1, 75, 76, 77, 79, 477], "scale": [1, 2, 3, 4, 6, 471, 474, 477], "normal": [1, 5, 11, 15, 23, 53, 70, 73, 79, 254, 258, 281, 477], "cast": [1, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "more": [1, 2, 3, 4, 5, 6, 17, 35, 113, 178, 189, 213, 258, 272, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 375, 376, 433, 473, 474, 476, 477], "custom_worker_image_uri": [1, 2, 373], "docker": [1, 2, 5, 6, 475], "dataflow": [1, 2, 3, 6, 23, 37, 75, 76, 77, 81, 136, 176, 177, 337, 372, 373, 464, 471, 473, 474], "worker": [1, 2, 5, 42, 464, 471], "har": [1, 2], "imag": [1, 2, 5, 136, 475], "undertak": [1, 2, 3], "action": [1, 2, 3, 6], "contain": [1, 2, 3, 4, 5, 6, 18, 19, 35, 37, 85, 87, 113, 136, 258, 264, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 314, 350, 357, 359, 375, 376, 418, 473, 474], "pointer": [1, 2, 3], "user": [1, 3, 4, 5, 6, 18, 42, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 337, 400, 465, 471, 473, 477], "defin": [1, 3, 4, 5, 11, 15, 18, 23, 26, 32, 35, 37, 38, 40, 42, 43, 46, 49, 51, 53, 55, 57, 60, 61, 63, 70, 72, 73, 75, 76, 77, 79, 85, 87, 108, 113, 135, 136, 158, 252, 254, 256, 258, 262, 264, 266, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 309, 311, 314, 323, 325, 326, 328, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 364, 367, 370, 373, 378, 380, 391, 393, 394, 407, 419, 426, 444, 454, 460, 474], "instanc": [1, 2, 3, 5, 11, 15, 18, 23, 40, 55, 57, 75, 76, 77, 85, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 324, 333, 335, 343, 359, 418, 473], "datapreprocessorconfig": [1, 337], "class": [1, 2, 3, 4, 5, 10, 11, 14, 15, 17, 18, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 107, 108, 111, 112, 113, 134, 135, 136, 166, 167, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 271, 272, 274, 275, 276, 277, 278, 279, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 369, 370, 377, 378, 379, 380, 390, 391, 392, 393, 394, 404, 406, 407, 417, 418, 419, 425, 426, 443, 444, 445, 473, 474, 477], "see": [1, 2, 3, 4, 5, 6, 23, 72, 113, 136, 178, 189, 213, 272, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 418, 464, 472, 473, 474], "datapreprocessorconfigclspath": 1, "datasetconfig": [1, 3], "hous": [1, 2, 3, 477], "logic": [1, 2, 3, 5, 254, 258, 350, 473, 474, 477], "prepar": 1, "dataset": [1, 5, 19, 158, 159, 185, 186, 187, 333, 337, 367, 474], "ingest": 1, "prepare_for_pipelin": 1, "imper": 1, "differ": [1, 2, 3, 4, 5, 6, 75, 76, 77, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 471, 473, 474], "get_nodes_preprocessing_spec": 1, "get_edges_preprocessing_spec": 1, "argument": [1, 2, 3, 4, 5, 23, 35, 40, 75, 76, 77, 130, 258, 264, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 314, 404, 474], "can": [1, 2, 3, 4, 5, 6, 11, 15, 23, 37, 42, 53, 70, 73, 75, 76, 77, 79, 111, 252, 254, 256, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 373, 400, 404, 433, 464, 471, 473, 474, 477], "also": [1, 2, 3, 4, 5, 6, 75, 76, 77, 85, 111, 252, 256, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 337, 350, 473], "pass": [1, 2, 3, 4, 5, 6, 23, 75, 76, 77, 115, 136, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 350, 355, 357, 373, 404, 464, 473, 474, 477], "includ": [1, 2, 3, 4, 5, 6, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 359, 464, 477], "them": [1, 2, 3, 5, 13, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 373, 477], "datapreprocessorarg": 1, "insid": [1, 2, 3, 293], "section": [1, 2, 3, 5, 464, 474], "build": [1, 252, 256, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 355, 418], "graphmetadata": [1, 5, 345, 357], "inform": [1, 4, 5, 6, 23, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 473, 474], "about": [1, 4, 5, 6, 272], "e": [1, 3, 4, 11, 13, 15, 18, 53, 72, 75, 76, 77, 85, 98, 104, 111, 158, 179, 182, 216, 252, 254, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 333, 335, 337, 357, 359, 367, 373, 404, 464, 477], "graph": [1, 3, 4, 6, 158, 189, 252, 254, 256, 258, 284, 289, 291, 293, 295, 301, 306, 340, 343, 355, 357, 465, 474, 476, 477], "friend": 1, "assign": [1, 3, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "correspond": [1, 3, 18, 72, 75, 76, 77, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 306, 333, 335, 343, 375], "condens": 1, "integ": [1, 18, 42, 258, 314], "enumer": [1, 2, 28, 167, 275, 276, 278, 279, 284, 285, 289, 291, 293, 295, 298, 299, 301, 316, 319, 321, 325, 329, 349, 364, 418, 445], "step": [1, 4, 5, 6, 75, 76, 77, 289, 474], "intern": [1, 6, 42, 75, 76, 77, 258, 272, 276, 278, 279, 284, 289, 291, 293, 295, 299, 301], "map": [1, 11, 15, 75, 76, 77, 85, 91, 94, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 306, 345, 357], "id": [1, 4, 5, 18, 19, 35, 40, 42, 85, 254, 258, 326, 464, 473], "mitig": 1, "space": [1, 254, 258], "overhead": [1, 477], "oper": [1, 4, 6, 75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 340, 367, 426, 474, 477], "reduc": [1, 61, 278, 279, 289, 291, 293, 295, 301], "storag": [1, 17, 18, 49, 85, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 471], "footprint": 1, "memori": [1, 4, 18, 72, 85, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 340, 477], "network": [1, 5, 6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 477], "traffic": 1, "each": [1, 3, 4, 5, 6, 13, 75, 76, 77, 111, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 306, 314, 345, 350, 357, 464, 465, 473, 474, 476, 477], "spin": 1, "up": [1, 3, 4, 5, 6, 111, 258, 314, 345, 404, 471, 472, 473, 474, 477], "manifest": [1, 229], "operation": 1, "specifi": [1, 2, 4, 5, 6, 23, 35, 72, 163, 222, 223, 224, 227, 228, 233, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 350, 367, 378, 400, 404, 464, 465, 471, 477], "function": [1, 5, 6, 12, 17, 20, 27, 29, 42, 66, 75, 76, 77, 80, 82, 88, 103, 109, 111, 112, 116, 124, 129, 130, 137, 146, 148, 150, 152, 157, 162, 165, 168, 220, 236, 254, 258, 271, 276, 278, 279, 280, 284, 285, 289, 291, 293, 295, 299, 301, 302, 305, 340, 342, 350, 371, 374, 381, 385, 395, 402, 404, 428, 431, 446, 451, 458, 474], "out": [1, 2, 3, 72, 111, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 404, 433, 464, 477], "tfrecord": [1, 3, 4], "schema": [1, 4, 204, 209, 418], "help": [1, 87, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 464, 474, 475], "pars": [1, 114, 264, 314, 333, 335], "infer": [1, 6, 289, 291, 293, 295, 301, 350, 373, 474, 476, 477], "set": [1, 3, 5, 6, 11, 15, 18, 23, 72, 118, 119, 121, 130, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 350, 359, 459, 460, 464, 471, 472, 473, 476, 477], "data_preprocessor": 1, "datapreprocessor": [1, 337, 473], "gcr": [1, 2, 464], "io": [1, 2, 85, 272, 293, 367, 418, 464], "project": [1, 2, 5, 6, 19, 35, 40, 42, 85, 108, 232, 278, 279, 337, 367, 378, 393, 394, 435, 464, 473, 474], "directori": [1, 2, 6, 95, 96, 98, 115, 126, 136, 175, 176, 177, 180, 181, 203, 205, 207, 210, 214, 217, 226, 231, 303, 473], "dataflow_imag": [1, 2], "x": [1, 2, 72, 258, 273, 278, 279, 289, 299, 301], "upon": [1, 2, 3, 4], "complet": [1, 3, 4, 35, 40, 75, 76, 77, 136, 258], "referenc": [1, 2, 3, 4, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 333, 335], "last": [1, 3, 18, 72, 433], "bullet": [1, 3], "abov": [1, 2, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 474], "preprocessedmetadata": [1, 184], "preprocessedmetadatauri": [1, 4], "nodemetadataoutput": 1, "edgemetadataoutput": 1, "store": [1, 2, 3, 4, 163, 164, 165, 192, 193, 195, 196, 200, 202, 226, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 433, 471, 477], "mention": 1, "relev": [1, 4, 254, 258, 333, 335, 359, 471], "tfexampl": 1, "kei": [1, 2, 3, 4, 11, 15, 60, 72, 75, 76, 77, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 314, 324, 337, 418], "label": [1, 43, 197, 199, 314, 337, 393, 464], "etc": [1, 5, 6, 18, 23, 85, 179, 182, 216, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 426, 474, 477], "larg": [1, 5, 6, 471, 474, 477], "determin": [1, 2, 122, 258], "provid": [1, 2, 3, 4, 5, 6, 11, 13, 15, 18, 23, 35, 37, 40, 72, 75, 76, 77, 85, 98, 111, 136, 164, 165, 258, 264, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 350, 355, 357, 378, 398, 465, 473, 474, 475, 477], "leav": 1, "much": [1, 18], "control": 1, "pleas": [1, 3, 6, 272, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 477], "look": [1, 5, 6, 17, 18, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 345, 473], "order": [1, 3, 72, 75, 76, 77, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 340], "learn": [1, 5, 6, 278, 301, 477], "here": [1, 3, 5, 6, 17, 75, 76, 77, 273, 295, 464, 474], "In": [1, 3, 72, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 465, 474], "document": [1, 6, 35, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 471, 475], "remov": [1, 72, 99, 100, 101, 102, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "modifi": [1, 3, 5, 23, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 464, 474], "feature_spec_fn": 1, "preprocessing_fn": 1, "nodedatapreprocessingspec": 1, "edgedatapreprocessingspec": 1, "build_ingestion_feature_spec_fn": 1, "conveni": 1, "spec": [1, 2, 5, 473, 474], "dst": [1, 258, 345, 357], "alwai": [1, 6, 29, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350], "design": [1, 2, 3, 5, 6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 473, 477], "due": [1, 2, 5, 17], "preced": 1, "intend": [1, 4], "maxim": [1, 5], "flexibl": [1, 3, 4, 5, 474, 477], "thei": [1, 3, 5, 6, 17, 42, 151, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 477], "want": [1, 3, 4, 6, 37, 272, 471, 473, 474], "unlik": 1, "same": [1, 5, 75, 76, 77, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "across": [1, 2, 5, 6, 75, 76, 77, 258, 464, 477], "mani": [1, 279, 435, 474, 477], "thu": [1, 273], "opt": 1, "code": [1, 6, 42, 106, 154, 477], "possibl": [1, 75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 306], "could": [1, 5, 75, 76, 77, 278], "nativ": [1, 477], "written": [1, 2, 3, 23, 179, 182, 216, 217], "someon": [1, 6], "familiar": [1, 6, 477], "debug": [1, 2, 3, 4, 23, 121], "core": [1, 2, 4, 477], "execut": [1, 2, 3, 5, 29, 75, 76, 77, 106, 111, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 404, 477], "link": [1, 2, 3, 4, 5, 6, 94, 190, 191, 192, 196, 197, 198, 295, 359, 474, 477], "print": [1, 2, 130, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "log": [1, 2, 6, 23, 37, 202, 222, 223, 404, 471], "navig": [1, 2], "consol": [1, 2, 5, 23, 37], "fine": [1, 2], "grain": [1, 2], "respons": [2, 42], "sampl": [2, 3, 4, 5, 75, 76, 77, 185, 186, 187, 190, 191, 193, 194, 197, 198, 199, 201, 273, 293, 350, 355, 357, 375, 376, 465, 474, 477], "subgraph": [2, 3, 6, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 258, 337, 340, 464, 476, 477], "sampler": [2, 3, 6, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 337, 464, 476, 477], "At": [2, 5, 471, 477], "high": [2, 6, 279, 477], "level": [2, 3, 4, 6, 23, 258, 474, 477], "work": [2, 4, 5, 61, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 404, 460, 474, 475], "appli": [2, 5, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 367, 464], "embarrassingli": 2, "parallel": [2, 5, 85], "persist": [2, 5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 426, 477], "embed": [2, 5, 17, 18, 19, 163, 164, 179, 180, 226, 227, 278, 284, 289, 291, 293, 295, 301, 337, 433, 476, 477], "predict": [2, 3, 4, 5, 6, 165, 179, 181, 190, 191, 192, 228, 295, 359, 474, 476, 477], "implement": [2, 3, 4, 5, 6, 11, 15, 53, 70, 72, 73, 75, 76, 77, 79, 113, 252, 254, 256, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 323, 324, 326, 333, 339, 340, 341, 404, 418, 477], "baseinferenc": 2, "protocol": [2, 70, 254], "inferencerclspath": 2, "inferencerconfig": 2, "dictat": [2, 3, 477], "batch": [2, 5, 6, 18, 258, 273], "infer_batch": 2, "taskmetadata": [2, 3, 357, 359, 465], "inferencerarg": 2, "sever": [2, 3, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "standard": [2, 3, 5, 6, 43, 464], "configur": [2, 3, 4, 5, 42, 122, 123, 146, 153, 367, 464, 465, 473, 477], "alreadi": [2, 3, 35, 90, 93, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 464, 477], "platform": [2, 3, 6, 472, 477], "nodeanchorbasedlinkpredictionmodelingtaskspec": [2, 5], "minim": [2, 473, 477], "chang": [2, 5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 477], "anchor": [2, 3, 4, 5, 190, 191, 192, 359, 474], "base": [2, 3, 4, 5, 11, 15, 18, 23, 26, 28, 32, 35, 37, 38, 40, 42, 43, 46, 49, 51, 53, 55, 57, 60, 61, 63, 70, 72, 73, 75, 76, 77, 79, 85, 87, 89, 98, 108, 113, 117, 135, 136, 167, 190, 191, 192, 196, 197, 198, 252, 254, 256, 258, 262, 264, 266, 272, 275, 276, 278, 279, 284, 285, 289, 291, 293, 295, 298, 299, 301, 303, 309, 311, 314, 316, 319, 321, 323, 324, 325, 326, 328, 329, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 361, 364, 367, 370, 378, 380, 391, 393, 394, 407, 418, 419, 426, 444, 445, 474, 477], "initi": [2, 5, 18, 23, 40, 49, 85, 111, 120, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 473], "instanti": 2, "flattenedgraphmetadata": [2, 3, 4, 335], "depend": [2, 3, 4, 6, 472, 474], "under": [2, 3, 5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 473], "baseinferenceblueprint": 2, "decod": [2, 75, 76, 77, 275, 276], "collat": 2, "individu": [2, 6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 473], "classif": [2, 3, 6, 199, 200, 201, 477], "scenario": [2, 474, 477], "bigqueri": [2, 6, 17, 19, 337, 367, 471], "final": [2, 4, 5, 75, 76, 77, 272, 301, 350, 477], "un": [2, 258], "revert": 2, "conduct": [2, 3], "preprocessor": [2, 4, 5, 6, 173, 174, 175, 203, 205, 207, 209, 210, 217, 337, 464, 474, 475, 476, 477], "v1": [2, 23], "gnn_inferenc": 2, "inferencerv1": 2, "specif": [2, 5, 6, 23, 35, 254, 258, 350, 391, 454, 464, 473, 474, 477], "have": [2, 3, 4, 5, 18, 87, 254, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 350, 454, 464, 465, 472, 473, 474, 477], "config": [2, 3, 4, 5, 6, 130, 131, 149, 172, 178, 337, 454, 473, 476, 477], "bq": [2, 163, 164, 165, 367, 433], "tabl": [2, 19, 163, 164, 165, 272, 337, 367, 433, 435], "embeddingsbqpath": 2, "inferencemetadata": 2, "none": [2, 11, 15, 18, 19, 23, 29, 30, 35, 37, 38, 40, 42, 43, 46, 49, 51, 53, 60, 61, 63, 72, 75, 76, 77, 83, 85, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 106, 108, 111, 113, 117, 130, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 153, 203, 210, 252, 256, 258, 266, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 309, 314, 323, 326, 328, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 367, 373, 378, 382, 383, 388, 389, 393, 404, 407, 418, 419, 429, 432, 444, 452, 453, 454, 455, 456, 457, 459, 460], "should": [2, 4, 5, 11, 15, 17, 18, 42, 53, 70, 73, 79, 111, 115, 122, 149, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 474], "requir": [2, 6, 75, 76, 77, 153, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 367, 426, 464, 473, 474, 477], "current": [2, 3, 4, 5, 11, 15, 42, 55, 136, 149, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 340, 350, 397, 398, 404, 433, 464, 465, 472, 473], "support": [2, 3, 4, 5, 6, 55, 132, 258, 295, 301, 464, 465, 471, 472, 473, 474, 477], "fairli": 2, "howev": [2, 17, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 404, 465, 472, 477], "overrid": [2, 11, 15, 23, 53, 70, 73, 79, 254, 258, 264, 314, 373], "happen": 2, "cpu": [2, 5, 21, 136, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 387, 472, 473], "becaus": [2, 254, 258, 273], "easili": [2, 6, 477], "machin": [2, 5, 6, 42, 121, 464, 474, 477], "comput": [2, 4, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 375, 376, 464, 471, 477], "cheap": 2, "gpu": [2, 5, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 464, 473, 477], "seem": 2, "care": [2, 5, 276, 279, 285, 299], "attent": [2, 284, 285, 289, 293, 295, 301], "monitor": [2, 3, 4, 471], "util": [2, 3, 5, 6, 7, 17, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 459, 460, 477], "cost": [2, 4, 6, 278, 279, 337, 464, 477], "implic": [2, 4], "limit": [2, 18, 433, 464, 477], "benefit": [2, 477], "local": [3, 4, 5, 23, 53, 55, 85, 93, 95, 96, 97, 98, 99, 100, 101, 115, 121, 221, 222, 223, 224, 226, 227, 228, 229, 233, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 337, 464, 476], "valid": [3, 5, 6, 49, 51, 53, 55, 258, 350, 357, 400, 454, 476, 477], "semant": 3, "particular": [3, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "strategi": [3, 4, 5, 355, 477], "develop": [3, 4, 6], "arg": [3, 4, 11, 15, 23, 43, 70, 72, 73, 79, 87, 252, 254, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 434], "cluster_nam": [3, 4, 35, 37, 393, 394], "str": [3, 4, 11, 18, 19, 23, 30, 35, 37, 40, 42, 43, 46, 49, 51, 53, 55, 57, 60, 75, 76, 77, 79, 85, 87, 90, 92, 98, 102, 104, 106, 108, 113, 115, 117, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 149, 151, 158, 163, 164, 165, 176, 177, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 306, 314, 318, 325, 328, 337, 350, 359, 364, 367, 372, 373, 378, 383, 384, 387, 393, 394, 397, 398, 399, 400, 401, 404, 418, 429, 430, 432, 433, 435, 447, 459, 460, 473], "param": [3, 4, 19, 23, 30, 85, 117, 136, 146, 149, 151, 182, 183, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 367, 378], "re": [3, 4, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 477], "cluster": [3, 4, 35, 40, 473, 477], "skip_cluster_delet": [3, 4], "bool": [3, 4, 11, 15, 23, 35, 42, 43, 49, 51, 53, 55, 83, 85, 91, 94, 97, 98, 101, 111, 115, 117, 120, 121, 122, 131, 149, 252, 254, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 339, 340, 341, 350, 359, 367, 378, 393, 400, 444], "skip": [3, 4, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "automat": [3, 4, 118, 119, 258, 289, 291, 293, 295, 301, 471], "cleanup": [3, 4], "dataproc": [3, 4, 6, 35, 471, 474], "debug_cluster_own_alia": [3, 4], "alia": [3, 4, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 418], "splitstrategi": 3, "splitstrategyclspath": 3, "splitgeneratorconfig": 3, "assignerclspath": 3, "construct": [3, 4, 75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "object": [3, 11, 15, 18, 23, 26, 32, 35, 37, 38, 40, 42, 43, 46, 49, 51, 53, 55, 57, 60, 61, 63, 70, 72, 73, 75, 76, 77, 79, 85, 87, 104, 108, 113, 130, 135, 136, 158, 252, 254, 256, 258, 262, 264, 266, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 309, 311, 314, 323, 325, 326, 328, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 364, 367, 370, 378, 380, 391, 393, 394, 407, 419, 426, 444, 473], "accordingli": 3, "scala": [3, 4, 6, 35], "splitgener": [3, 4, 5, 333, 335], "main": [3, 4, 5, 35, 42, 154, 185], "lib": [3, 474], "split_strategi": 3, "splitstrategyarg": 3, "assignerarg": 3, "": [3, 4, 5, 6, 11, 15, 23, 42, 72, 75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 398, 399, 401, 464, 471, 473, 474], "transduct": [3, 474, 477], "induct": [3, 477], "routin": [3, 477], "detail": [3, 4, 5, 6, 35, 40, 113, 178, 189, 213, 272, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 471, 474, 475, 476, 477], "kick": [3, 6, 473, 474], "off": [3, 6, 473, 474], "spark": [3, 4, 35, 337, 464], "given": [3, 5, 11, 15, 35, 40, 49, 53, 55, 57, 72, 75, 76, 77, 85, 92, 95, 98, 104, 111, 169, 170, 171, 172, 173, 174, 175, 252, 256, 258, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 350, 357, 378], "find": [3, 5, 473, 477], "nodeanchorbasedlinkpredictionoutput": [3, 4, 335], "appropri": [3, 454], "meant": 3, "visibl": 3, "firstli": [3, 4], "adjust": [3, 4], "paramet": [3, 4, 11, 13, 15, 18, 35, 37, 40, 42, 49, 51, 53, 55, 57, 75, 76, 77, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 111, 115, 130, 153, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 252, 254, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 306, 309, 314, 337, 343, 350, 357, 359, 367, 373, 375, 376, 378, 400, 404, 435, 454, 459, 460, 473], "seed": [3, 67, 444], "42": [3, 67, 444], "test_split": 3, "0": [3, 5, 18, 42, 43, 87, 158, 254, 258, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 350, 357, 418, 444, 472], "2": [3, 4, 13, 72, 87, 111, 254, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 340, 464, 472, 473, 475], "train_split": 3, "7": 3, "val_split": 3, "1": [3, 13, 43, 87, 254, 258, 272, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 340, 350, 373, 375, 376, 418, 434, 464, 472, 475], "transductiveedgetolinksplithashingassign": 3, "transductivenodeanchorbasedlinkpredictionsplitstrategi": 3, "split_gener": [3, 4, 5], "entri": [3, 4, 75, 76, 77, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "py": [3, 4, 5, 87, 293], "perform": [3, 4, 5, 6, 17, 30, 75, 76, 77, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 474, 477], "creat": [3, 4, 6, 18, 23, 35, 42, 55, 57, 61, 72, 93, 94, 95, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 367, 418, 471, 472, 473, 474], "suitabl": [3, 4, 75, 76, 77, 474, 477], "hand": [3, 4], "instal": [3, 4, 475], "delet": [3, 4, 11, 35, 72, 95, 96, 258, 378, 471], "after": [3, 4, 18, 23, 29, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 426, 473], "finish": [3, 4, 5], "name": [3, 4, 5, 18, 23, 30, 35, 40, 53, 60, 72, 85, 87, 98, 104, 113, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 222, 223, 224, 227, 228, 233, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 323, 324, 326, 328, 333, 337, 339, 340, 341, 350, 367, 372, 418, 459, 460, 472, 473], "so": [3, 4, 6, 18, 23, 42, 111, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 400, 433, 471, 473], "instead": [3, 4, 6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 367, 391], "new": [3, 4, 5, 6, 18, 49, 53, 55, 72, 95, 252, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 367, 418, 472, 473], "one": [3, 4, 6, 23, 42, 75, 76, 77, 85, 95, 276, 279, 285, 299, 314, 357, 367, 474], "everi": [3, 4, 5, 6, 18, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "time": [3, 4, 5, 40, 111, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 396, 397, 398, 399, 400, 401, 404, 477], "unique_name_for_the_clust": [3, 4], "ensur": [3, 4, 6, 37, 42, 111, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "But": [3, 4, 254, 258], "clean": [3, 4, 252, 256, 404], "manual": [3, 4, 350, 474], "prevent": [3, 4], "wast": [3, 4], "mark": [3, 4], "usernam": [3, 4], "some_us": [3, 4], "debug_cluster_owner_alia": [3, 4, 393], "your_alia": [3, 4], "when": [3, 4, 5, 6, 11, 15, 18, 61, 70, 73, 79, 252, 254, 256, 258, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 340, 367, 404, 473, 477], "would": [3, 4, 5, 75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 473, 474], "whoami": [3, 4], "belong": 3, "datasetmetadata": [3, 333], "within": [3, 5, 6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 359, 435, 477], "nodeanchorbasedlinkpredictiondataset": [3, 333, 335], "To": [3, 5, 6, 87, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 465, 472], "desir": [3, 13, 23, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "manipul": [3, 23], "even": [3, 5, 258], "own": [3, 4, 6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 474], "reflect": 3, "techniqu": 3, "ml": [3, 5, 6, 474, 477], "literatur": 3, "tricki": 3, "caution": 3, "advis": 3, "try": [3, 5, 111, 130], "variant": 3, "avoid": [3, 5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 433], "leak": 3, "between": [3, 4, 94, 111, 146, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367], "leverag": [3, 6], "hashingassign": 3, "special": 3, "randomli": 3, "random": [3, 4, 5, 67, 75, 76, 77, 187, 190, 273], "futur": [3, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 433, 474], "consid": [3, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 340, 477], "introduc": [3, 4, 477], "polici": [3, 367], "tempor": 3, "good": [3, 272, 477], "academ": [3, 158, 159, 477], "refer": [3, 11, 15, 18, 23, 26, 32, 35, 37, 38, 40, 42, 43, 46, 49, 51, 53, 55, 57, 60, 61, 63, 70, 72, 73, 75, 76, 77, 79, 85, 87, 108, 113, 135, 136, 252, 254, 256, 258, 262, 264, 266, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 309, 311, 314, 323, 325, 326, 328, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 364, 367, 370, 378, 380, 391, 393, 394, 404, 407, 419, 426, 444, 471, 474], "standardli": 3, "leakag": 3, "chose": 3, "abstract": [3, 5, 11, 15, 53, 70, 73, 79, 252, 254, 258, 289, 291, 293, 295, 301, 477], "around": [3, 61, 111, 279, 350], "dure": [3, 101, 254, 258, 418], "becom": 3, "determinist": [3, 75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "some": [3, 4, 5, 6, 37, 111, 258, 264, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 474, 477], "info": [3, 4, 23], "list": [3, 4, 5, 11, 13, 15, 18, 23, 26, 32, 35, 37, 38, 40, 42, 43, 46, 49, 51, 53, 55, 57, 60, 61, 63, 70, 72, 73, 75, 76, 77, 79, 85, 87, 98, 108, 113, 135, 136, 252, 254, 256, 258, 262, 264, 266, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 306, 309, 311, 314, 323, 325, 326, 328, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 364, 367, 370, 378, 380, 391, 393, 394, 407, 418, 419, 426, 444], "avail": [3, 4, 21, 120, 435, 474], "ui": [3, 4, 5, 87, 151, 473], "overal": [3, 4], "status": [3, 4], "while": [3, 4, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 477], "access": [3, 4, 6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 345, 454, 473], "web": [3, 4], "interfac": [3, 4, 53, 85, 473, 477], "tab": [3, 4, 5], "stage": [3, 4, 42, 175, 176], "receiv": [4, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350], "mainli": 4, "k": [4, 11, 15, 72, 279, 340, 350, 375, 476], "hop": [4, 340, 350, 357, 476], "basic": [4, 6], "u": [4, 61, 278, 279, 337, 418], "independ": 4, "without": [4, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 474, 477], "worri": [4, 5], "maintain": [4, 6, 254, 258, 477], "huge": [4, 477], "down": 4, "stream": [4, 5, 85, 106, 258, 272, 314, 404], "predefin": 4, "serial": [4, 87, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "save": [4, 5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "format": [4, 6, 75, 76, 77, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367, 398, 400, 418], "neighborhood": [4, 193, 194], "homogen": [4, 258, 306, 474], "heterogen": [4, 258, 284, 285, 293, 306, 477], "where": [4, 17, 18, 35, 75, 76, 77, 163, 164, 165, 217, 254, 258, 273, 278, 279, 289, 291, 293, 295, 301, 340, 350, 465, 473, 477], "uniform": [4, 53], "top": 4, "weight": [4, 5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 391], "custom": [4, 6, 11, 15, 23, 53, 70, 73, 79, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 337, 464, 473, 474, 477], "get": [4, 6, 11, 15, 21, 23, 37, 42, 72, 258, 289, 291, 293, 295, 301, 435, 474], "obtain": [4, 258, 301, 314, 473], "subgraphsamplerconfig": [4, 5], "convert": [4, 75, 76, 77, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 306], "datafram": [4, 432, 433, 434], "neighbor": [4, 289, 291, 293, 295, 301], "accord": [4, 6, 258, 340, 464, 477], "subgraphsamplingstrategi": [4, 357], "hydrat": [4, 340], "nodeanchorbasedlinkpredict": 4, "posit": [4, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 375, 376, 465, 477], "root": [4, 6, 23, 225, 232, 350, 357, 359], "messagepassingpath": [4, 355], "through": [4, 6, 473], "samplingop": [4, 350], "ha": [4, 23, 72, 75, 76, 77, 131, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 460], "inputopnam": 4, "parent": [4, 231, 350, 357], "essenti": 4, "form": [4, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "dag": [4, 350, 355, 357], "our": [4, 6, 293, 474, 477], "messag": [4, 23, 37, 289, 291, 293, 295, 301, 318, 350, 355, 357, 404, 459, 460, 477], "onli": [4, 18, 23, 42, 75, 76, 77, 98, 121, 258, 272, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367, 460, 465], "supervision_edge_typ": 4, "need": [4, 6, 23, 53, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 391, 433, 464, 473, 474, 476, 477], "task_config_guid": [4, 474], "randomuniform": [4, 347], "topk": [4, 351], "edgefeatnam": 4, "weightedrandom": 4, "addit": [4, 35, 49, 51, 53, 55, 136, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314], "messagepassingpathstrategi": [4, 356], "globalrandomuniformstrategi": [4, 354], "pixi": 4, "walk": 4, "stori": [4, 465], "rootnodetyp": 4, "edgetyp": [4, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 237, 238, 239, 252, 254, 256, 258, 284, 285, 323, 359], "dstnodetyp": [4, 465], "srcnodetyp": [4, 465], "opnam": 4, "sample_stories_from_us": 4, "numnodestosampl": 4, "10": [4, 258, 272, 404, 472], "sample_users_from_stori": 4, "is_friends_with": [4, 465], "sample_first_hop_friend": 4, "sample_friend": 4, "sample_second_hop_friend": 4, "2024": 4, "aug": 4, "two": [4, 5, 6, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 465, 471, 474], "backend": [4, 5, 117, 149], "graphdb": 4, "pure": 4, "solut": [4, 6, 477], "applic": [4, 6, 85, 272, 289, 291, 293, 295, 301, 477], "As": [4, 350], "must": [4, 87, 252, 256, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 357, 454, 464], "both": [4, 6, 23, 252, 254, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 464, 477], "pariti": 4, "progress": [4, 5], "nebula": 4, "db": 4, "graphdbconfig": 4, "graphdbarg": 4, "port": [4, 42], "9669": 4, "host": [4, 6, 40, 42, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 473], "xxx": 4, "graph_spac": 4, "my_graph_spac": 4, "numneighborstosampl": 4, "numpositivesampl": 4, "3": [4, 13, 111, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 404, 472], "subgraph_sampl": 4, "subgraphsampl": [4, 335], "split": [4, 5, 6, 185, 186, 187, 188, 337, 343, 464, 476, 477], "tfrecorduriprefix": 4, "nodeanchorbasedlinkpredictionsampl": [4, 333, 335], "randomnegativetfrecorduriprefix": 4, "neg": [4, 5, 18, 187, 190, 273, 278, 279, 285, 295, 375, 376, 477], "rootednodeneighborhood": [4, 333, 335], "subgraph_sampling_strategi": [4, 354, 355, 356, 357], "queri": [4, 37, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 433], "translat": 4, "gnn": [5, 6, 19, 473, 477], "earli": [5, 11, 15, 53, 70, 73, 79, 121, 254, 258], "stop": [5, 111, 324, 418], "evalu": [5, 151, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 375, 376, 433], "pytorch": [5, 254, 258, 293, 472, 477], "ddp": 5, "multipl": [5, 19, 42, 49, 51, 53, 55, 254, 258, 278, 314, 404, 477], "card": 5, "whole": [5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367], "environ": [5, 6, 121, 123, 130, 136, 404, 464, 472, 473, 477], "ii": 5, "basetrain": 5, "actual": [5, 111, 252, 256, 272], "loop": [5, 258], "w": [5, 272, 278, 279], "r": [5, 278], "t": [5, 11, 13, 15, 53, 70, 90, 93, 111, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 340, 433, 464], "involv": [5, 118, 119], "wa": [5, 258, 289, 291, 293, 295, 301, 477], "trainerclspath": 5, "trainerconfig": 5, "trainerarg": 5, "start": [5, 6, 289, 291, 293, 295, 301, 314, 324, 418, 473], "someth": [5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 373], "dataload": [5, 258], "nodeanchorbasedlinkpredictiondatasetdataload": 5, "dataset_metadata_util": 5, "scheme": [5, 17, 301, 464], "load": [5, 19, 61, 130, 131, 136, 473], "forward": [5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "backward": [5, 75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "wai": [5, 6, 254, 258, 404, 472, 473, 474], "fix": [5, 75, 76, 77], "number": [5, 21, 42, 92, 111, 119, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 367, 418, 464], "val_every_num_batch": 5, "num_val_batch": 5, "offlin": 5, "metric": [5, 151, 182, 183, 211, 216, 330, 375, 426], "patienc": 5, "early_stop_pati": [5, 262], "earlystopp": 5, "early_stop": [5, 262], "trigger": 5, "process": [5, 6, 23, 42, 75, 76, 77, 118, 119, 122, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 472, 474, 476, 477], "reload": 5, "best": [5, 6], "num_test_batch": 5, "return": [5, 11, 13, 15, 21, 23, 29, 30, 35, 37, 40, 42, 43, 46, 49, 51, 53, 55, 57, 60, 70, 72, 73, 75, 76, 77, 79, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 113, 115, 117, 118, 119, 120, 121, 122, 130, 131, 135, 146, 149, 151, 153, 158, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 252, 254, 256, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 306, 309, 314, 323, 324, 326, 328, 330, 333, 335, 337, 339, 340, 341, 343, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 367, 373, 375, 376, 378, 393, 397, 398, 400, 418, 433, 434, 444, 454], "its": [5, 6, 35, 40, 75, 76, 77, 254, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 472, 474], "back": [5, 6, 75, 76, 77, 258], "vertexai": [5, 23, 471, 473, 474], "either": [5, 18, 23, 72, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 476], "cuda_docker_uri": 5, "cpu_docker_uri": 5, "ater": 5, "state_dict": [5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "locat": [5, 35, 42], "traininglogsuri": 5, "view": [5, 11, 15, 72, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314], "tensorboard": [5, 202], "logdir": 5, "tensorboard_logs_uri_her": 5, "agnost": 5, "architectur": [5, 6], "below": [5, 6, 18, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 340, 433, 472, 474], "profilerconfig": 5, "should_enable_profil": 5, "profiler_log_dir": 5, "path_to_my_bucket": 5, "dir": [5, 85, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314], "profiler_arg": 5, "wait": [5, 35, 40, 136], "with_stack": 5, "onc": [5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 474, 477], "via": [5, 6, 18, 258, 474], "gcloud": 5, "vertex": [5, 6, 42, 337, 464], "ai": [5, 6, 42, 337, 464], "http": [5, 35, 37, 51, 55, 87, 272, 273, 278, 284, 285, 293, 295, 301, 314, 404, 473], "cloud": [5, 17, 18, 23, 35, 37, 49, 85, 337, 464, 473, 475, 476, 477], "googl": [5, 17, 18, 35, 37, 49, 85], "com": [5, 35, 37, 55, 404, 473], "project_name_her": 5, "statu": 5, "jobspec": 5, "On": 5, "acceleratior": 5, "utili": 5, "open": [5, 6, 85, 477], "stackdriv": 5, "everyth": [5, 111], "real": 5, "region": [5, 35, 171, 337, 393, 394, 464], "along": [5, 6], "short": [5, 314], "explan": [5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "train_main_sample_num_work": 5, "train_random_sample_num_work": 5, "val_main_sample_num_work": 5, "val_random_sample_num_work": 5, "test_main_sample_num_work": 5, "test_random_sample_num_work": 5, "simultan": 5, "overburden": 5, "recommend": [5, 6, 258, 278], "num_cpu": 5, "stall": 5, "content": [5, 18, 85], "margin": [5, 477], "loss": 5, "loss_funct": 5, "choic": 5, "softmax": 5, "softmax_temperatur": 5, "temperatur": 5, "optim_lr": 5, "rate": [5, 273, 285, 295, 375], "optim": [5, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 391, 474], "optim_weight_decai": 5, "decai": [5, 391], "frequenc": [5, 272, 273], "per": [5, 42, 258, 295, 398], "earlystop": 5, "main_sample_batch_s": 5, "size": [5, 13, 18, 72, 75, 76, 77, 258, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 464], "random_negative_sample_batch_s": 5, "random_negative_sample_batch_size_for_evalu": 5, "should_l2_normalize_output": 5, "whether": [5, 35, 42, 49, 51, 53, 55, 75, 76, 77, 85, 115, 117, 122, 149, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 357, 359, 367], "l2": 5, "num_lay": [5, 279, 284, 285, 301], "layer": [5, 284, 285, 295, 301], "numhop": 5, "in_dim": [5, 278, 279, 299], "dimens": [5, 258, 278, 279, 284, 285, 295, 301], "hid_dim": [5, 284, 301], "hidden": [5, 284, 285, 295, 301], "out_dim": [5, 284, 301], "init_model": 5, "modelingtaskspec": 5, "declar": 5, "done": [5, 85, 473], "cannot": 5, "default": [5, 11, 15, 18, 23, 35, 40, 49, 53, 70, 72, 73, 75, 76, 77, 79, 85, 91, 92, 94, 98, 101, 111, 136, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 252, 254, 256, 258, 264, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 337, 367, 373, 404, 459, 473], "multi": [5, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "terminologi": 5, "world": 5, "group": [5, 473], "world_siz": 5, "rank": [5, 42, 278, 279, 376], "usual": [5, 278, 473], "index": [5, 6, 118, 158, 258, 289, 291, 293, 295, 301, 324, 418], "loader": [5, 258, 464], "thread": [5, 272, 404], "incur": 5, "block": [5, 30], "result": [5, 29, 30, 75, 76, 77, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 340, 433, 477], "slowdown": 5, "paral": 5, "speed": [5, 340], "trai": 5, "packag": [5, 472], "tool": [5, 6, 7, 472], "gloo": [5, 117], "nccl": [5, 117], "practition": [5, 477], "know": [5, 42], "devic": [5, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 387], "collect": [5, 258], "broadcast": 5, "all_gath": 5, "et": [5, 278], "al": [5, 278], "tensor": [5, 18, 252, 254, 256, 258, 272, 273, 276, 278, 279, 281, 284, 285, 289, 291, 293, 295, 299, 301, 306, 309, 387], "gigant": [6, 477], "librari": [6, 254, 258, 404, 475, 477], "neural": [6, 477], "veri": [6, 273, 477], "billion": [6, 477], "versatil": 6, "easi": [6, 23, 473, 474], "supervis": [6, 196, 197, 198, 199, 200, 201, 357, 359, 465, 477], "unsupervis": [6, 477], "scalabl": [6, 477], "built": [6, 252, 254, 256, 258, 474, 477], "horizont": [6, 477], "mind": [6, 477], "effect": [6, 23, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 475], "throughout": [6, 7], "simplifi": [6, 345, 472], "make": [6, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 472, 474, 477], "manag": [6, 18, 123, 464, 473], "six": 6, "facilit": [6, 477], "popul": [6, 172, 314, 350, 407, 474, 476, 477], "figur": 6, "illustr": 6, "how": [6, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 474, 475], "togeth": [6, 49, 53, 254, 258], "There": [6, 272, 472, 477], "variou": [6, 375, 472, 474], "conda": [6, 472], "handi": 6, "initialize_environ": 6, "activ": [6, 35, 285, 299, 472], "9": [6, 472], "next": [6, 474], "install_dep": 6, "extra": [6, 23, 111, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 433], "install_dev_dep": 6, "setup": [6, 464, 473, 475, 477], "guid": [6, 473], "guidelin": 6, "todo": [6, 471], "befor": [6, 29, 111, 252, 256, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 404, 472, 474], "run": [6, 35, 40, 42, 113, 115, 136, 149, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 404, 426, 473, 476, 477], "necessari": [6, 121, 471], "alloc": [6, 295, 474], "environment": 6, "encompass": 6, "share": [6, 18, 146, 254, 258, 276, 278, 279, 284, 289, 291, 293, 295, 299, 301, 464], "well": [6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 474], "behavior": [6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 340], "offer": [6, 477], "primiari": 6, "incorpor": 6, "workflow": [6, 61, 473, 477], "simpli": [6, 258], "call": [6, 11, 15, 18, 23, 42, 70, 73, 79, 87, 130, 252, 254, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 477], "standalon": 6, "modul": [6, 7, 8, 9, 16, 24, 33, 44, 47, 58, 64, 65, 68, 123, 132, 133, 147, 154, 155, 156, 160, 161, 250, 259, 260, 267, 268, 270, 276, 278, 279, 282, 284, 285, 286, 287, 289, 291, 293, 295, 296, 299, 301, 304, 307, 312, 331, 365, 368, 386, 388, 389, 405, 408, 409, 410, 412, 413, 414, 415, 416, 421, 422, 423, 424, 427, 436, 437, 438, 439, 440, 441, 442, 448, 449, 450], "shell": 6, "script": [6, 215, 289, 291, 293, 295, 301], "your_job_nam": 6, "your_project_bucket": 6, "resource_conifg": 6, "littl": 6, "go": [6, 350], "reliabl": 6, "robust": 6, "three": [6, 473], "focu": [6, 477], "check": [6, 11, 15, 35, 42, 49, 51, 53, 55, 97, 111, 131, 136, 149, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 357, 378, 426, 454, 477], "proper": [6, 57], "lint": 6, "No": 6, "extern": 6, "gcp": [6, 19, 37, 40, 85, 337, 464, 474], "commit": 6, "pull": [6, 474], "request": [6, 375], "github": 6, "unit_test": 6, "just": [6, 464], "unit_test_pi": 6, "unit_test_scala": 6, "simul": 6, "crucial": 6, "verifi": [6, 350], "correctli": [6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 474], "sequenc": [6, 340, 378], "output": [6, 87, 106, 151, 180, 181, 183, 185, 186, 187, 189, 190, 191, 194, 197, 198, 199, 201, 211, 212, 213, 215, 227, 228, 247, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 333, 335, 337, 359, 407, 418, 426, 476, 477], "handl": [6, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 404, 477], "mock": [6, 474], "synthet": 6, "publicli": 6, "public": 6, "servic": [6, 7, 337, 464, 471, 473, 474], "merg": [6, 258], "pr": 6, "yur": 6, "integration_test": 6, "full": [6, 164, 272, 278, 279], "restrict": [6, 37], "author": [6, 258], "engin": [6, 471, 477], "secur": 6, "failur": 6, "report": 6, "contributor": 6, "replic": 6, "cora": [6, 158, 474], "welcom": [6, 475], "appreci": 6, "thing": 6, "do": [6, 254, 258, 289, 291, 293, 295, 301, 314, 433, 477], "bug": 6, "think": 6, "encount": 6, "feel": 6, "free": [6, 42], "team": [6, 284, 291, 477], "greatli": 6, "pick": [6, 75, 76, 77, 314], "issu": [6, 272, 433], "still": [6, 314], "unansw": 6, "question": [6, 475], "face": 6, "faq": [6, 475], "further": 6, "guidenc": 6, "mit": 6, "search": [6, 98, 435], "page": [6, 473, 474], "frozen_dict": 11, "kwarg": [11, 15, 23, 70, 72, 73, 79, 252, 254, 256, 258, 266, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 373], "kt": [11, 15], "vt": [11, 15], "dictionari": [11, 15, 35, 72, 85, 87, 91, 94, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 306, 314, 337, 367], "freez": [11, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "i": [11, 13, 15, 18, 23, 35, 40, 42, 49, 51, 53, 55, 70, 72, 73, 75, 76, 77, 79, 85, 111, 117, 118, 119, 120, 122, 158, 202, 252, 254, 256, 258, 272, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 324, 337, 340, 343, 350, 357, 367, 373, 391, 404, 418, 433, 454, 459, 460, 464, 465, 472, 473, 474, 475], "disallow": 11, "edit": 11, "classmethod": [11, 15, 49, 51, 53, 55, 70, 73, 75, 76, 77, 79, 136, 252, 254, 256, 258, 314], "__class_getitem__": [11, 15, 53, 72, 324, 418], "repres": [11, 15, 42, 49, 51, 53, 55, 89, 254, 258, 314, 459, 460], "pep": [11, 15, 53, 72, 324, 418], "585": [11, 15, 53, 72, 324, 418], "int": [11, 13, 15, 18, 21, 43, 49, 51, 53, 55, 67, 83, 92, 105, 106, 111, 118, 119, 258, 262, 272, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 339, 340, 341, 345, 350, 367, 393, 396, 404, 429, 433, 435, 444, 447], "__origin__": [11, 15, 53], "__args__": [11, 15, 53], "__eq__": [11, 15, 43, 46, 49, 51, 53, 55, 72, 75, 76, 77, 113, 135, 258, 323, 324, 326, 328, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 393, 418, 444], "other": [11, 15, 43, 46, 49, 51, 53, 55, 75, 76, 77, 113, 135, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 314, 323, 326, 328, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 393, 444, 474], "equal": [11, 15, 254, 258, 314, 340, 459], "against": [11, 15, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 375, 376], "anoth": [11, 15, 258, 404], "dict": [11, 15, 23, 35, 40, 43, 46, 60, 72, 85, 91, 94, 136, 254, 258, 276, 278, 279, 281, 284, 285, 289, 291, 293, 295, 299, 301, 303, 306, 314, 337, 340, 345, 357, 367, 393, 418, 429, 432, 444], "match": [11, 15, 37, 85, 92, 98, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367, 378], "__hash__": [11, 15, 43, 46, 49, 51, 53, 55, 72, 75, 76, 77, 113, 135, 258, 323, 324, 326, 328, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 393, 418, 444], "hash": [11, 49, 51, 53, 55, 75, 76, 77, 113, 272, 323, 324, 326, 333, 339, 341, 345, 350, 418], "self": [11, 15, 23, 43, 46, 49, 51, 53, 55, 72, 75, 76, 77, 113, 135, 252, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 323, 324, 326, 328, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 393, 418, 444, 477], "__init__": [11, 15, 18, 23, 26, 35, 37, 38, 40, 42, 43, 46, 49, 51, 53, 55, 60, 61, 63, 70, 72, 73, 75, 76, 77, 79, 85, 87, 108, 113, 135, 136, 254, 256, 258, 262, 266, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 323, 326, 328, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 367, 378, 391, 393, 394, 407, 419, 444], "__init_subclass__": [11, 15, 70, 73, 79, 252, 254, 256, 258], "subclass": [11, 15, 23, 53, 70, 73, 79, 252, 254, 256, 258, 276, 279, 285, 299, 314], "doe": [11, 15, 70, 72, 73, 79, 252, 254, 256, 258, 293, 404, 426, 475], "noth": [11, 15, 70, 73, 79, 252, 254, 256, 258], "overridden": [11, 15, 70, 73, 79, 252, 254, 256, 258, 276, 279, 285, 299], "extend": [11, 15, 53, 70, 73, 79, 252, 254, 256, 258], "__repr__": [11, 15, 23, 43, 46, 49, 51, 53, 55, 72, 75, 76, 77, 113, 135, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 323, 324, 326, 328, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 393, 418, 444], "repr": [11, 15, 23, 43, 46, 49, 51, 55, 72, 75, 76, 77, 113, 135, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 323, 324, 326, 328, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 393, 444], "__subclasshook__": [11, 15, 53, 70, 73, 79, 254, 258], "c": [11, 15, 472], "issubclass": [11, 15, 53, 70, 73, 79, 254, 258], "invok": [11, 15, 53, 70, 73, 79, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "abc": [11, 15, 32, 53, 55, 70, 73, 79, 254, 258, 264, 426], "abcmeta": [11, 15, 53, 70, 73, 79, 254, 258], "__subclasscheck__": [11, 15, 53, 70, 73, 79, 254, 258], "fals": [11, 15, 23, 35, 42, 49, 51, 53, 55, 67, 70, 72, 73, 79, 83, 91, 94, 97, 98, 111, 115, 120, 125, 127, 128, 131, 149, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 340, 367, 378, 400, 444], "notimpl": [11, 15, 53, 70, 73, 79, 254, 258], "algorithm": [11, 15, 53, 70, 73, 79, 254, 258], "otherwis": [11, 15, 35, 42, 49, 51, 53, 55, 70, 72, 73, 75, 76, 77, 79, 97, 117, 120, 131, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 350, 378], "outcom": [11, 15, 53, 70, 73, 79, 254, 258], "cach": [11, 15, 53, 70, 73, 79, 254, 258], "__weakref__": [11, 15, 18, 23, 26, 32, 35, 37, 38, 40, 42, 43, 46, 49, 51, 53, 55, 57, 60, 61, 63, 70, 72, 73, 75, 76, 77, 79, 85, 87, 108, 113, 135, 136, 252, 254, 256, 258, 262, 264, 266, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 309, 311, 314, 323, 325, 326, 328, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 364, 367, 370, 378, 380, 391, 393, 394, 407, 419, 426, 444], "weak": [11, 15, 18, 23, 26, 32, 35, 37, 38, 40, 42, 43, 46, 49, 51, 53, 55, 57, 60, 61, 63, 70, 72, 73, 75, 76, 77, 79, 85, 87, 108, 113, 135, 136, 252, 254, 256, 258, 262, 264, 266, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 309, 311, 314, 323, 325, 326, 328, 330, 333, 335, 337, 339, 340, 341, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 361, 364, 367, 370, 378, 380, 391, 393, 394, 407, 419, 426, 444], "d": [11, 15, 72, 272, 278, 279, 398, 399, 400, 401], "els": [11, 15, 72], "item": [11, 13, 15, 72, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303], "valu": [11, 15, 18, 28, 43, 46, 49, 51, 53, 55, 72, 75, 76, 77, 89, 111, 113, 135, 167, 258, 264, 275, 276, 278, 279, 284, 285, 289, 291, 293, 295, 298, 299, 301, 314, 316, 319, 321, 323, 324, 325, 326, 328, 329, 333, 335, 337, 339, 340, 341, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 361, 364, 375, 393, 418, 444, 445, 459, 474], "itertool": 13, "list_of_item": 13, "chunk_siz": 13, "chunk": 13, "4": [13, 43, 258, 278, 279, 464], "5": [13, 111, 258, 289, 291, 293, 295, 301, 434, 477], "sorted_dict": 15, "sort": [15, 258, 340], "iter": [15, 37, 72, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 314, 324, 418, 477], "over": [15, 72, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "avro": [17, 18, 19], "sinc": [17, 75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 340, 391], "quicker": 17, "upload": [17, 18, 40, 85, 136, 367, 404, 473], "compar": [17, 289, 477], "parquet": 17, "switch": [17, 340], "orc": 17, "modal": 17, "export": [18, 19, 87], "export_dir": 18, "gcsuri": [18, 19, 85, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 237, 238, 240, 241, 242, 244, 245, 337], "file_prefix": 18, "min_shard_size_threshold_byt": 18, "flush": [18, 29], "exit": [18, 121, 258, 404], "context": [18, 75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350], "flush_embed": 18, "buffer": [18, 85, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "reach": 18, "file_flush_threshold": 18, "add_embed": 18, "mean": [18, 42, 350, 376, 434], "been": [18, 131, 258, 350], "my_bucket": 18, "shard_00000000": 18, "shard_00000001": 18, "shard_00000002": 18, "fulli": [18, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350], "qualifi": [18, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "bucket_nam": 18, "prefix": [18, 92, 185, 186, 187, 190, 191, 194, 197, 198, 199, 201, 218, 222, 227, 228, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "file_prefix_shard_00000000": 18, "minimum": 18, "byte": [18, 72, 75, 76, 77], "entir": 18, "caus": [18, 258], "threshold": 18, "larger": [18, 272, 273], "than": [18, 75, 76, 77, 272, 273, 278, 279, 350, 433], "zero": [18, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "error": [18, 23, 75, 76, 77, 101, 258, 273, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 400, 404], "thrown": [18, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "smaller": [18, 278, 279, 477], "id_batch": 18, "embedding_batch": 18, "embedding_typ": 18, "torch": [18, 252, 254, 256, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 306, 309, 375, 376, 391], "tag": [18, 337], "reset": [18, 252, 256, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "empti": [18, 72, 93, 350, 459], "state": [18, 252, 256, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 477], "gcs_folder": 19, "project_id": [19, 35, 37, 367, 464], "dataset_id": [19, 367], "table_id": 19, "folder": [19, 100, 101, 223, 225, 232], "env_config": 21, "log_to_fil": 23, "loggeradapt": 23, "By": [23, 258, 289, 291, 293, 295, 301], "adapt": [23, 295], "contextu": 23, "constructor": [23, 75, 76, 77], "signatur": [23, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "stack": [23, 278], "keyword": [23, 40, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 404], "shown": [23, 472], "somelogg": 23, "p1": 23, "p2": 23, "v2": 23, "critic": 23, "msg": 23, "deleg": [23, 289, 291, 293, 295, 301], "underli": [23, 75, 76, 77, 254, 258, 289, 291, 293, 295, 301], "except": [23, 29, 49, 51, 53, 55, 109, 110, 111, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 318, 319, 402, 403, 404], "exc_info": 23, "geteffectivelevel": 23, "hashandl": 23, "handler": 23, "isenabledfor": 23, "mutablemap": 23, "insert": [23, 72, 258], "itself": [23, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "suit": 23, "ll": 23, "setlevel": 23, "warn": [23, 37], "base_metr": 26, "opsmetricpublish": [26, 29, 30, 382], "decor": [28, 29, 30, 75, 76, 77, 111, 146, 404], "enum": [28, 89, 167, 275, 298, 316, 319, 321, 325, 329, 349, 364, 445], "get_metrics_service_instance_fn": [29, 30], "callabl": [29, 30, 75, 76, 77, 83, 111, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 404], "f": [29, 30, 72, 105, 285], "catch": [29, 111], "rais": [29, 49, 51, 53, 55, 72, 75, 76, 77, 111, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 400, 404, 418], "rerais": 29, "wrap": [29, 30, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "metric_nam": 30, "record_granular": 30, "timerrecordgranular": 30, "second": [30, 40, 111, 278, 404], "profil": [30, 477], "being": [30, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 357], "metrics_interfac": 32, "interact": [35, 40, 85, 278, 474], "create_clust": 35, "cluster_spec": 35, "doc": [35, 87, 113, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 404, 472, 473, 474], "latest": [35, 40, 293, 435], "dataproc_v1": 35, "delete_clust": 35, "does_cluster_exist": 35, "get_running_job_ids_on_clust": 35, "retriev": [35, 40], "get_submitted_job_id": 35, "submit": 35, "submit_and_wait_scala_spark_job": 35, "max_job_dur": 35, "timedelta": 35, "main_jar_file_uri": 35, "runtime_arg": 35, "extra_jar_file_uri": 35, "properti": [35, 60, 158, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 333, 335, 337, 345, 350, 357, 359], "fail_if_job_already_running_on_clust": 35, "datetim": [35, 37, 397, 398, 399, 400, 401], "maximum": [35, 40, 111], "durat": [35, 404], "jar": [35, 123], "runtim": [35, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 464], "fail": [35, 106, 111, 367], "gcp_cloud_log": [37, 38], "get_logs_iterator_from_k8_contain": 37, "pod_nam": 37, "datetime_start": 37, "datetime_end": 37, "query_filt": 37, "kubernet": [37, 40, 473], "pod": 37, "filter": [37, 85, 98, 113, 303], "keep": [37, 258, 293, 303], "unless": [37, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367], "download": [37, 85], "list_log_entry_pag": 38, "listlogentriespag": 38, "kfp": [40, 60, 87, 136, 146, 149, 153, 337, 473], "kfp_host": [40, 135, 473], "k8_sa": [40, 135, 473], "kubeflow": [40, 87, 118, 119, 474], "url": [40, 314, 473], "account": [40, 42, 337, 464, 471, 473, 474], "associ": [40, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 340], "get_experiment_name_by_id": 40, "experiment_id": [40, 135, 473], "experi": [40, 473], "get_host_gcp_project_nam": 40, "get_host_k8_cluster_nam": 40, "get_latest_experiment_from_nam": 40, "experiment_nam": [40, 430, 473], "apilistexperimentsrespons": 40, "found": [40, 72, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 473, 477], "get_latest_run_with_nam": 40, "kfp_run_nam": [40, 430], "apirundetailwrapp": 40, "get_run": 40, "run_id": 40, "run_pipelin": 40, "pipeline_bundle_path": 40, "run_nam": 40, "run_keyword_arg": 40, "bundl": 40, "upload_pipeline_vers": 40, "pipeline_id": [40, 135, 473], "pipeline_version_nam": 40, "wait_for_run_complet": 40, "timeout": [40, 111, 403], "float": [40, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 328, 340, 432], "7200": 40, "vertex_ai": [42, 43], "service_account": [42, 393], "staging_bucket": 42, "authent": 42, "static": [42, 57, 75, 76, 77, 254, 258, 309, 314, 324, 340, 367, 418], "connect_worker_pool": 42, "connect": [42, 289, 291, 293, 295, 301], "pool": [42, 301], "leader": 42, "ip": 42, "address": [42, 477], "get_host_nam": 42, "hostnam": 42, "get_leader_hostnam": 42, "synchron": [42, 258], "get_leader_port": 42, "get_rank": 42, "vai": 42, "master": 42, "get_vertex_ai_job_id": 42, "get_world_s": 42, "total": [42, 111, 119, 272, 273], "is_currently_running_in_vertex_ai_job": 42, "job_config": [42, 367], "vertexaijobconfig": 42, "container_uri": 43, "environment_vari": 43, "machine_typ": [43, 393, 464], "n1": [43, 340, 464], "accelerator_typ": 43, "accelerator_type_unspecifi": 43, "accelerator_count": 43, "replica_count": 43, "timeout_": 43, "enable_web_access": 43, "cuda_container_imag": [46, 136], "cpu_container_imag": [46, 136], "dataflow_container_imag": [46, 136], "additional_job_arg": [46, 136], "giglcompon": [46, 125, 127, 128, 136, 337, 373], "factori": [46, 57], "constant": 46, "gcs_uri": 49, "string": [49, 53, 57, 75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 367, 398, 400, 418, 459, 460, 473], "is_valid": [49, 51, 53, 55], "raise_except": [49, 51, 53, 55], "union": [49, 53, 57, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 378, 444], "optiona": 49, "invalid": [49, 51, 53, 55, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "join": [49, 51, 53, 55], "token": [49, 51, 53, 55], "first": [49, 51, 53, 55, 72, 111, 158, 278, 289, 291, 293, 295, 301, 324, 418, 474], "http_uri": 51, "singl": [51, 111, 258, 272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367, 477], "local_uri": 53, "pathlik": 53, "resourc": [53, 123, 130, 131, 153, 337, 454, 473, 474, 475, 477], "o": [53, 75, 76, 77, 99, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 404, 472], "__fspath__": 53, "system": [53, 89], "represent": [53, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367, 418, 477], "absolut": 53, "get_file_nam": 53, "assert_is_fil": 53, "assert": [53, 459, 460], "foo": [55, 75, 76, 77, 85], "bar": 55, "xyz": 55, "uri_factori": 57, "concret": 57, "input": [57, 247, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 314], "argo_workflow_manifest": [60, 61], "workflow_manifest_json_str": 60, "component_status_by_component_display_nam": 60, "argoworkflownodestatu": 60, "displai": [60, 314], "io_argoproj_workflow_v1alpha1_node_statu": 61, "ioargoprojworkflowv1alpha1nodestatu": 61, "strictli": [61, 254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "cognit": 61, "argo": 61, "api": [61, 471], "kfp_api": 63, "api_run": 63, "apirundetail": 63, "should_consider_numpi": 67, "should_consider_torch": 67, "should_consider_tensorflow": 67, "coder": [70, 75, 76, 77], "serialize_np": [72, 73], "typeddict": 72, "__contains__": [72, 258, 324, 418], "__delitem__": [72, 258], "__ge__": [72, 324, 418], "__getattribute__": [72, 324, 418], "getattr": [72, 324, 418], "__getitem__": [72, 258, 324, 418], "y": [72, 273, 398, 399, 400, 401, 472], "__gt__": [72, 324, 326, 418], "__ior__": 72, "__iter__": [72, 324, 418], "__le__": [72, 324, 418], "__len__": [72, 258, 324, 418], "len": [72, 324, 418], "__lt__": [72, 324, 326, 418], "__ne__": [72, 324, 418], "__new__": [72, 324, 418], "__or__": 72, "__reversed__": 72, "revers": 72, "__ror__": 72, "__setitem__": [72, 258], "__sizeof__": 72, "clear": [72, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "copi": [72, 91, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 418], "shallow": [72, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "fromkei": 72, "pop": 72, "keyerror": [72, 258], "popitem": 72, "pair": [72, 258, 314], "tupl": [72, 75, 76, 77, 111, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303, 309, 324, 343, 345, 418, 435], "lifo": 72, "setdefault": 72, "updat": [72, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 367, 476], "present": [72, 258, 291, 324, 357, 418], "lack": 72, "case": [72, 258, 278, 289, 291, 293, 295, 301, 404], "coderprotocol": [73, 79], "ndarrai": [73, 258, 272], "serialize_proto": [75, 76, 77], "as_deterministic_cod": [75, 76, 77], "step_label": [75, 76, 77], "error_messag": [75, 76, 77, 404], "decode_nest": [75, 76, 77], "nest": [75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "edgepbwrapp": [75, 340, 343], "encode_nest": [75, 76, 77], "estimate_s": [75, 76, 77], "estim": [75, 76, 77, 272, 273], "pcollect": [75, 76, 77], "element": [75, 76, 77, 258], "fast": [75, 76, 77], "improv": [75, 76, 77, 278, 279], "whose": [75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "from_runner_api": [75, 76, 77], "coder_proto": [75, 76, 77], "codert": [75, 76, 77], "functionspec": [75, 76, 77], "fn": [75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "prefer": [75, 76, 77, 472], "regist": [75, 76, 77, 252, 256, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "urn": [75, 76, 77], "get_impl": [75, 76, 77], "compat": [75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "guarante": [75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "coderimpl": [75, 76, 77], "is_determinist": [75, 76, 77], "groupbykei": [75, 76, 77], "consist": [75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 477], "picklecod": [75, 76, 77], "vari": [75, 76, 77], "register_structured_urn": [75, 76, 77], "cl": [75, 76, 77, 314], "register_urn": [75, 76, 77], "parameter_typ": [75, 76, 77], "beam": [75, 76, 77, 337, 367, 418], "had": [75, 76, 77], "foopayload": [75, 76, 77], "runnerapifn": [75, 76, 77], "bean": [75, 76, 77], "foo_from_proto": [75, 76, 77], "took": [75, 76, 77], "pipelinecontext": [75, 76, 77], "rather": [75, 76, 77], "to_runner_api_paramet": [75, 76, 77], "expect": [75, 76, 77, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 367], "graphpbwrapp": 76, "nodepbwrapp": [77, 340, 343], "serialize_str": 79, "utf": 79, "8": [79, 258, 464, 472], "pipeline_result": 81, "dataflowpipelineresult": 81, "httpuri": 81, "func_tool": 83, "maxsiz": 83, "rt": 83, "download_files_from_gcs_paths_to_local_path": 85, "file_map": 85, "localuri": [85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 115, 125, 126, 127, 128, 136, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "list_uris_with_gcs_path_pattern": 85, "gcs_path": 85, "suffix": [85, 92, 337], "pattern": [85, 113, 115, 378], "ex": [85, 400, 426], "file1": 85, "txt": [85, 98], "json": [85, 87, 183, 211, 474], "regex": [85, 98, 367, 378], "upload_files_to_gc": 85, "local_file_path_to_gcs_path_map": 85, "upload_from_filelik": 85, "filelik": 85, "content_typ": 85, "octet": 85, "satisfi": 85, "prototyp": 85, "bytesio": 85, "anystr": 85, "visual": [87, 208], "mlpipeline_ui_metadata": 87, "what": [87, 350, 475], "render": 87, "some_script": 87, "mlpipeline_ui_metadata_path": 87, "outputpath": 87, "__name__": 87, "__main__": 87, "parser": [87, 314], "argpars": [87, 314], "argumentpars": 87, "add_argu": [87, 314], "parse_arg": [87, 113], "add_confusion_matrix": 87, "confusion_matrix": 87, "arrai": 87, "write_to_output_viewer_path": 87, "www": [87, 273, 278, 404], "org": [87, 273, 278, 284, 285, 295, 301, 314, 404], "sdk": 87, "viewer": 87, "local_f": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "entiti": [89, 98, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218], "file_path": [90, 102], "append": [90, 289, 291, 293, 295, 301], "doesn": [90, 93], "local_source_to_local_dst_path_map": 91, "should_overwrit": [91, 94], "destin": [91, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 343, 350, 359], "uri_prefix": 92, "count": [92, 258, 272, 273, 324, 418, 434], "local_path": [93, 95, 96, 97, 98, 99, 100, 101], "local_source_to_link_path_map": 94, "symlink": 94, "file_system_ent": 98, "filesystement": 98, "names_onli": 98, "children": [98, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 357, 378], "ignore_error": 101, "ignor": [101, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "os_util": [104, 105, 106], "obj_path": 104, "module_a": 104, "module_b": 104, "object_c": 104, "textiowrapp": 105, "cmd": 106, "stdout": 106, "proto_util": 108, "retri": [110, 367], "exception_to_check": 111, "tri": [111, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "delay_": 111, "backoff": 111, "max_delay_": 111, "fn_execution_timeout_": 111, "deadline_": 111, "should_throw_original_except": 111, "incas": 111, "throw": [111, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 459, 460], "descript": [111, 252, 256], "give": [111, 471], "delai": 111, "multipli": 111, "doubl": [111, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "spend": 111, "exce": [111, 404, 433], "lot": 111, "room": 111, "place": [111, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "occur": [111, 258], "timedoutexcept": [111, 404], "test_util": [113, 114, 115], "test_file_pattern": 113, "cli": [113, 114], "arguement": [113, 114, 136], "glob": 113, "comment": [113, 433], "__delattr__": [113, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 323, 326, 333, 339, 340, 341], "delattr": [113, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 323, 326, 333, 339, 340, 341], "__setattr__": [113, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 323, 326, 333, 339, 340, 341], "setattr": [113, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 323, 326, 333, 339, 340, 341], "testarg": 114, "exclus": 114, "start_dir": 115, "use_sequential_execut": 115, "text": [115, 426], "sequenti": [115, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "exect": 115, "successfulli": 115, "torch_train": [117, 118, 119, 120, 121, 122], "use_cuda": 117, "cuda": [117, 136, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 472], "pytorchjob": [118, 119], "launcher": [118, 119], "rtype": [118, 119, 121, 122, 434], "purpos": [121, 272, 340], "variabl": [121, 130, 289, 291, 293, 295, 301, 473], "should_distribut": 121, "dep_const": [125, 126, 127, 128], "use_spark35": [125, 127, 128], "pipelines_config": [130, 131], "giglresourceconfigwrapp": 130, "wrapper": [130, 350], "trainer_config": [130, 337, 464], "resource_config_path": 130, "kfp_orchestr": [135, 136, 473], "kfp_metadata": [136, 473], "kfpenvmetadata": [136, 473], "env_path": [136, 473], "compil": [136, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "wait_for_complet": 136, "dockerfil": 136, "kfp_pipelin": [138, 139, 140, 141, 142, 143, 144, 145, 146], "common_pipeline_component_config": [138, 139, 140, 141, 142, 143, 144, 145, 146, 153], "commonpipelinecomponentconfig": [138, 139, 140, 141, 142, 143, 144, 145, 146, 153], "should_use_glt_runtime_param": [138, 139], "pipelineparam": [138, 139], "stop_aft": [138, 139, 140, 141, 142, 143, 144, 145], "containerop": [138, 139, 140, 141, 142, 143, 144, 145, 153], "start_at": [145, 473], "definit": [146, 464], "dsl": 146, "glt_backend": 149, "glt": 149, "log_metr": 151, "parsabl": 151, "_description_": 151, "_type_": 151, "store_at": 158, "tmp": [158, 177, 224], "planetoid": [158, 159], "subscript": 158, "mask": 158, "train_mask": 158, "test_mask": 158, "torch_geometr": [158, 258, 284, 293], "node_typ": [164, 165, 187, 190, 241, 242, 243, 258], "nodetyp": [164, 165, 187, 190, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 241, 242, 243, 281, 284, 285, 306, 324, 326, 350, 357, 359, 444], "perm": [169, 172, 173, 179, 182, 216, 471], "temp_asset": 170, "gbml": [172, 178, 189, 213, 221, 254, 258, 333, 335, 337, 340, 345, 354, 355, 356, 357, 359, 361], "temporari": [174, 188, 337, 471], "snapchat": [178, 189, 213, 333, 335, 337, 340, 345, 354, 355, 356, 357, 359, 361], "research": [178, 189, 213, 333, 335, 337, 340, 345, 354, 355, 356, 357, 359, 361, 477], "gbml_config": 178, "post": [182, 183, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 426], "processor": [182, 183, 426], "eval": [182, 183, 211, 216, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "post_processor_metr": 183, "dataset_split": [185, 186, 187, 316], "datasetsplit": [185, 186, 187], "flatten": 189, "flattened_graph_metadata": [189, 335], "unlabel": [198, 201], "feature_typ": [203, 204, 205, 206, 207, 208, 209, 210, 217, 218], "featuretyp": [203, 204, 205, 206, 207, 208, 209, 210, 217, 218], "entity_typ": [203, 204, 205, 206, 207, 208, 209, 210, 217, 218], "custom_identifi": [203, 204, 205, 206, 207, 208, 209, 210, 217, 218], "tft": [203, 205, 207], "raw": 204, "stat": [205, 206], "tft_temp_dir": 207, "facet": 208, "overview": 208, "html": [208, 293, 404], "pbtxt": 209, "transform_fn": 210, "eval_metr": [211, 375, 376, 447], "pt": [212, 215], "trained_model_metadata": [213, 361], "scripted_model": 215, "train_val_nodes_info": 233, "csv": 233, "test_asset": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 474], "task_nam": [237, 238, 239, 240, 241, 242, 243, 244, 245], "edge_typ": [237, 238, 239, 252, 256, 258, 295, 323, 350], "edge_usage_typ": [237, 238, 239], "edgeusagetyp": [237, 238, 239], "bq_tabl": [246, 367], "uri_str": 247, "replac": [247, 337], "some_bucket_nam": 247, "task_identifi": 247, "data_preprocess": 247, "preprocessed_metadata": 247, "test_data_gcs_bucket": 247, "mocked_asset": 247, "abstract_graph_build": 252, "tgraph": [252, 256], "add_edg": [252, 256], "feature_valu": [252, 256], "skip_if_exist": [252, 256], "add_graph_data": [252, 256], "graph_data": [252, 256, 285, 323, 324, 325, 326], "add_nod": [252, 256], "Will": [252, 256, 258], "unregist": [252, 256], "again": [252, 256], "register_edge_typ": [252, 256], "reiniti": [252, 256], "gbml_graph_protocol": 254, "are_disjoint": [254, 258], "b": [254, 258], "are_same_graph": [254, 258], "global": [254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 477], "loos": [254, 258], "pyggraphdata": [254, 256], "realli": [254, 258], "fill": [254, 258, 464], "gap": [254, 258], "edge_types_to_be_regist": [254, 258], "conjunct": [254, 258], "graphbuild": [254, 256, 258], "preserv": [254, 258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "combin": [254, 258, 289, 291, 293, 295, 301, 477], "get_global_edge_features_dict": [254, 258], "frozendict": [254, 258], "fetch": [254, 258], "get_global_node_features_dict": [254, 258], "global_node_to_subgraph_node_map": [254, 258], "origin": [254, 258, 278], "creation": [254, 258, 474], "dgl": [254, 258, 477], "geometr": [254, 258, 293], "occas": [254, 258], "remap": [254, 258], "contigu": [254, 258], "simpler": [254, 258], "formul": [254, 258], "subgraph_node_to_global_node_map": [254, 258], "invers": [254, 258], "pyg_graph_build": 256, "pyg_graph_data": 258, "heterodata": [258, 284, 285, 293], "gbmlgraphdataprotocol": 258, "__cat_dim__": 258, "nodestorag": 258, "edgestorag": 258, "attribut": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "concaten": [258, 301], "mini": 258, "corrupt": 258, "del": 258, "tensor_attr": 258, "featurestor": 258, "rule": [258, 471], "partial": [258, 477], "attrview": 258, "__inc__": 258, "increment": 258, "cumul": 258, "increas": [258, 278, 279, 433], "weird": 258, "setter": 258, "usabl": 258, "func": [258, 404], "ones": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 477], "apply_": 258, "clone": 258, "coalesc": 258, "duplic": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "edge_index": [258, 289, 291, 293, 295, 301], "allow_empti": 258, "paper": [258, 272, 284, 285, 293, 295, 301, 477], "equival": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "x_dict": [258, 293], "eg": 258, "concat": 258, "shape": [258, 278, 289, 291, 293, 295, 301], "non": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 460, 477], "layout": 258, "coo": 258, "graphstor": 258, "csc": 258, "csr": 258, "non_block": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "detach": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "detach_": 258, "edge_attr": [258, 289, 291, 293], "edge_item": 258, "edge_stor": 258, "edge_subgraph": 258, "subset_dict": 258, "induc": 258, "certain": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 303], "isol": 258, "longtensor": [258, 272, 273, 295, 306, 375], "booltensor": 258, "hold": [258, 273, 289, 291, 293, 295, 301], "edge_type_subgraph": 258, "from_dict": 258, "generate_id": 258, "n_id": 258, "e_id": 258, "continu": 258, "ascend": 258, "get_all_edge_attr": 258, "edgeattr": 258, "get_all_tensor_attr": 258, "tensorattr": 258, "get_edge_index": 258, "get_edge_stor": 258, "rel": 258, "yet": [258, 471, 472, 474], "edge_storag": 258, "get_node_stor": 258, "node_storag": 258, "get_tensor": 258, "convert_typ": 258, "valueerror": [258, 324, 418], "get_tensor_s": 258, "has_isolated_nod": 258, "has_self_loop": 258, "is_coalesc": 258, "is_cuda": 258, "is_direct": 258, "direct": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314, 350, 474], "is_sort": 258, "sort_by_row": 258, "column": [258, 433, 434], "wise": [258, 301], "is_sorted_by_tim": 258, "is_undirect": 258, "undirect": 258, "meta": 258, "multi_get_tensor": 258, "attr": 258, "implementor": 258, "node_attr": 258, "node_item": 258, "node_stor": 258, "node_type_subgraph": 258, "num_edge_featur": 258, "num_edg": [258, 293], "bi": [258, 301], "amount": 258, "num_featur": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "num_node_featur": 258, "num_nod": 258, "pin_memori": [258, 444], "pin": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "put_edge_index": 258, "success": 258, "put_tensor": 258, "np": 258, "record_stream": 258, "reus": 258, "until": 258, "queu": 258, "remove_edge_index": 258, "remove_tensor": 258, "renam": 258, "new_nam": 258, "requires_grad_": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "requires_grad": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "track": [258, 418], "gradient": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "set_value_dict": 258, "value_dict": 258, "randn": 258, "16": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 464, 472], "32": [258, 373, 444, 464], "share_memory_": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "move": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350], "dim": 258, "adjac": [258, 289, 291, 293, 295, 301], "matrix": [258, 278, 279, 289, 291, 293, 295, 301], "snapshot": 258, "start_tim": 258, "end_tim": 258, "event": 258, "period": 258, "sort_by_tim": 258, "basestorag": 258, "remain": [258, 303], "confer": 258, "cite": 258, "50": [258, 434], "30": 258, "25": [258, 434], "6": 258, "24": 258, "convers": 258, "to_dict": 258, "to_hetero_data": 258, "pyg": [258, 477], "to_homogen": 258, "add_node_typ": 258, "add_edge_typ": 258, "dummy_valu": 258, "dimension": [258, 278], "furthermor": [258, 289, 291, 293, 295, 301], "denot": [258, 272], "vector": 258, "dummi": 258, "nan": 258, "boolean": 258, "to_namedtupl": 258, "namedtupl": [258, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 418], "up_to": 258, "inclus": 258, "edge_tim": 258, "update_tensor": 258, "succes": 258, "choos": 258, "effici": [258, 278, 279, 340, 477], "raise_on_error": 258, "correct": [258, 357], "early_stop_criterion": 262, "evalmetrictyp": 262, "parameter_load": 264, "default_param": 264, "profiler_wrapp": 266, "count_min_sketch": [272, 273], "width": 272, "2000": 272, "depth": 272, "probabl": [272, 273], "structur": 272, "dsf": 272, "berkelei": 272, "edu": 272, "cs286": 272, "countmin": 272, "latin2004": 272, "pdf": [272, 273, 278, 284, 285, 295], "blog": [272, 404, 477], "redi": 272, "talk": 272, "min": [272, 434], "sketch": 272, "art": [272, 477], "scienc": 272, "stuff": 272, "accur": [272, 273], "n": [272, 276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 433], "row": [272, 289, 291, 293, 295, 301, 306], "atleast": 272, "less": [272, 273], "2n": 272, "Then": 272, "might": [272, 314, 477], "delta": 272, "add_torch_long_tensor": 272, "long": [272, 289, 291, 293, 295, 301], "estimate_torch_long_tensor": 272, "get_tabl": 272, "far": [272, 477], "frequency_tensor": 273, "total_cnt": 273, "batch_siz": [273, 278, 444], "calcul": [273, 295, 434], "candidate_sampl": 273, "q": 273, "p": 273, "candid": 273, "approxim": 273, "begin": 273, "cap": 273, "most": 273, "hard": 273, "decoder_typ": 276, "decodertyp": 276, "inner_product": 276, "decoder_channel_list": 276, "act": 276, "relu": [276, 299], "act_first": 276, "bia": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "plain_last": 276, "norm": 276, "__call__": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "__dir__": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314], "nn": [276, 278, 279, 284, 285], "scriptmodul": [276, 278, 279, 284, 289, 291, 293, 295, 299, 301], "add_modul": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "child": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 357, 404], "recurs": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 350, 378], "submodul": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "typic": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 473], "init": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "no_grad": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "def": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "init_weight": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "linear": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "fill_": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "net": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "in_featur": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "out_featur": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "bfloat16": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "datatyp": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "yield": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "member": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 477], "xdoctest": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "undefin": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "var": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "buf": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "20l": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "1l": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "5l": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "immedi": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "live": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "mode": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "affect": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "dropout": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "batchnorm": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "disabl": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "grad": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "comparison": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "similar": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 433, 434], "mechan": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "confus": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "extra_repr": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "accept": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "query_embed": 276, "candidate_embed": 276, "recip": [276, 279, 285, 299], "afterward": [276, 279, 285, 299], "former": [276, 279, 285, 299], "hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "latter": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "silent": [276, 279, 285, 299], "get_buff": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "target": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "docstr": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "get_submodul": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "attributeerror": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "resolv": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "get_extra_st": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "set_extra_st": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "picklabl": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "break": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "pickl": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 324, 350, 418], "get_paramet": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "let": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "sai": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "net_b": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "net_c": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "conv": [276, 278, 279, 284, 285, 299, 301], "conv2d": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "33": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "kernel_s": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "stride": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "100": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 464], "200": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "diagram": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "show": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "bound": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "degre": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "named_modul": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "transit": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "simpl": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 473, 474], "half": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "ipu": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "load_state_dict": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "strict": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "descend": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "exactli": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "enforc": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "inplac": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "missing_kei": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "miss": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "unexpected_kei": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "unexpect": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "runtimeerror": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "l": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "idx": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "named_buff": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "remove_dupl": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "prepend": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "running_var": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "named_children": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "conv4": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "conv5": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "memo": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "named_paramet": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_backward_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "removablehandl": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "deprec": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "favor": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_full_backward_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_buff": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "running_mean": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "part": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314], "alongsid": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_forward_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "with_kwarg": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "always_cal": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "won": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "possibli": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "fire": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_module_forward_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "regardless": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_forward_pre_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "And": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "forward_pr": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_module_forward_pre_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "grad_input": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "grad_output": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "technic": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "reason": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "similarli": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "caller": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_module_full_backward_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_full_backward_pre_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "backward_pr": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_module_full_backward_pre_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_load_state_dict_post_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "incompatible_kei": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "modif": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 314], "register_modul": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_paramet": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "register_state_dict_pre_hook": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "keep_var": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "made": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "autograd": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "record": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "finetun": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "gan": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "share_memori": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "averag": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 391], "releas": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 474], "ordereddict": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 387], "compos": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "dtype": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 434], "memory_format": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "channels_last": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "Its": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "complex": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 474], "integr": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 473], "unchang": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "asynchron": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "4d": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "ignore_w": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "1913": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "3420": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "5113": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "2325": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "float64": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "env": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301, 473], "torch_doctest_cuda1": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "gpu1": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "1914": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "5112": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "2324": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "float16": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "cdoubl": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "3741": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "j": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "2382": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "5593": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "4443": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "complex128": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "6122": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "1150": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "to_empti": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "dst_type": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "xpu": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "zero_grad": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "set_to_non": [276, 278, 279, 284, 285, 289, 291, 293, 295, 299, 301], "feature_interact": [278, 279, 298, 299], "projection_dim": [278, 279], "diag_scal": [278, 279], "use_bia": [278, 279], "deriv": [278, 293], "tensorflow_recommend": 278, "api_doc": 278, "tfr": 278, "dcn": 278, "cross": [278, 279], "deep": 278, "explicit": 278, "x0": 278, "xi": 278, "previou": 278, "th": 278, "x_": 278, "elementwis": 278, "low": [278, 279, 477], "diagon": [278, 279], "stabil": 278, "especi": [278, 404, 477], "wang": 278, "arxiv": [278, 284, 285, 295, 301], "2008": 278, "13535": 278, "eq": [278, 295], "1708": 278, "05123": 278, "practic": [278, 279, 477], "ve": [278, 279], "observ": [278, 279], "accuraci": [278, 279], "kernel": [278, 279], "ident": [278, 279], "term": [278, 279], "dcncross": 279, "node_typed_embed": 281, "node_type_to_feat_dim_map": [284, 285], "edge_type_to_feat_dim_map": [284, 285], "128": [284, 285], "num_head": [284, 285, 295], "should_l2_normalize_embedding_layer_output": [284, 285], "2003": 284, "01332": 284, "pytorch_geometr": [284, 291], "head": [284, 285, 293, 295], "output_node_typ": [284, 285], "hetero_data": 284, "node_hid_dim": 285, "edge_hid_dim": 285, "edge_type_dim": [285, 295], "node_out_dim": 285, "should_use_node_residu": [285, 295], "negative_slop": [285, 295], "elu": 285, "2112": [285, 295], "14936": [285, 295], "residu": [285, 295], "slope": [285, 295], "leakyrelu": [285, 295], "edge_attr_gat_conv": 289, "share_edge_att_message_weight": 289, "gatconv": 289, "aggreg": [289, 291, 293, 295, 301], "ptr": [289, 291, 293, 295, 301], "dim_siz": [289, 291, 293, 295, 301], "bigoplus_": [289, 291, 293, 295, 301], "mathcal": [289, 291, 293, 295, 301], "propag": [289, 291, 293, 295, 301], "aggr": [289, 291, 293, 295, 301], "edge_upd": [289, 291, 293, 295, 301], "alpha_j": 289, "alpha_i": 289, "edge_updat": [289, 291, 293, 295, 301], "_i": [289, 291, 293, 295, 301], "_j": [289, 291, 293, 295, 301], "x_i": [289, 291, 293, 295, 301], "x_j": [289, 291, 293, 295, 301], "sparsetensor": [289, 291, 293, 295, 301], "torch_spars": [289, 291, 293, 295, 301], "spars": [289, 291, 293, 295, 301], "flow": [289, 291, 293, 295, 301, 477], "assum": [289, 291, 293, 295, 301, 473], "quadrat": [289, 291, 293, 295, 301], "return_attention_weight": 289, "addition": 289, "attention_weight": 289, "jittabl": [289, 291, 293, 295, 301], "messagepass": [289, 291, 293, 295, 301], "analyz": [289, 291, 293, 295, 301], "jit": [289, 291, 293, 295, 301], "op": [289, 291, 293, 295, 301, 350, 357], "onward": [289, 291, 293, 295, 301], "alpha": [289, 295], "message_and_aggreg": [289, 291, 293, 295, 301], "adj_t": [289, 291, 293, 295, 301], "fuse": [289, 291, 293, 295, 301], "explicitli": [289, 291, 293, 295, 301], "materi": [289, 291, 293, 295, 301], "num_messag": [289, 291, 293, 295, 301], "sent": [289, 291, 293, 295, 301], "source_to_target": [289, 291, 293, 295, 301], "col": [289, 291, 293, 295, 301], "major": [289, 291, 293, 295, 301], "transpos": [289, 291, 293, 295, 301], "register_aggregate_forward_hook": [289, 291, 293, 295, 301], "register_propagate_forward_hook": [289, 291, 293, 295, 301], "register_aggregate_forward_pre_hook": [289, 291, 293, 295, 301], "register_propagate_forward_pre_hook": [289, 291, 293, 295, 301], "register_edge_update_forward_hook": [289, 291, 293, 295, 301], "register_edge_update_forward_pre_hook": [289, 291, 293, 295, 301], "register_message_and_aggregate_forward_hook": [289, 291, 293, 295, 301], "register_message_and_aggregate_forward_pre_hook": [289, 291, 293, 295, 301], "register_message_forward_hook": [289, 291, 293, 295, 301], "register_message_forward_pre_hook": [289, 291, 293, 295, 301], "reset_paramet": [289, 291, 293, 295, 301], "learnabl": [289, 291, 293, 295, 301], "analogi": [289, 291, 293, 295, 301], "gamma_": [289, 291, 293, 295, 301], "mathbf": [289, 291, 293, 295, 301], "theta": [289, 291, 293, 295, 301], "gin_conv": 291, "ep": 291, "train_ep": 291, "edge_dim": 291, "gine": 291, "hgt_conv": 293, "in_channel": [293, 295], "out_channel": [293, 295], "readthedoc": 293, "en": 293, "_modul": 293, "drop": [293, 295], "incom": [293, 350], "208": 293, "those": 293, "hgt": 293, "hetero": 293, "hgt_dblp": 293, "triplet": 293, "edge_index_dict": 293, "k_j": 293, "q_i": 293, "v_j": 293, "size_i": 293, "phi_": [293, 295, 301], "simplehgn_conv": 295, "num_edge_typ": 295, "edge_in_channel": 295, "simplehgn": 295, "convolut": [295, 301], "adopt": [295, 477], "14": 295, "node_feat": 295, "floattensor": [295, 375, 376], "edge_feat": 295, "node_emb_j": 295, "use_dcnv2_feats_interact": 299, "dcnv2_kwarg": 299, "use_mlp_feats_interact": 299, "mlp_feats_kwarg": 299, "combination_mod": 299, "jumping_knowledg": 301, "lstm_dim": 301, "jump": 301, "knowledg": 301, "ab": 301, "1806": 301, "03536": 301, "cat": 301, "max": [301, 434], "summat": 301, "score": [301, 375, 376], "lstm": 301, "_v": 301, "vert": 301, "ldot": 301, "left": 301, "right": 301, "With": 301, "alpha_v": 301, "sum_": 301, "rubric": 301, "autosummari": 301, "nosignatur": 301, "explain_messag": 301, "input_dict": 303, "keys_to_keep": 303, "discard": [303, 314], "discarded_kwarg": 303, "remaining_kwarg": 303, "h": [306, 398, 399, 401], "type_indic": 306, "gbml_protos_transl": 309, "node_from_nodepb": 309, "graph_metadata_pb_wrapp": 309, "graphmetadatapbwrapp": [309, 343], "node_pb": 309, "graph_metadata": [309, 345], "graph_schema_pb2": [309, 339, 340, 341, 345], "model_eval_metrics_transl": 311, "dataflow_job_opt": 314, "pipelineopt": [314, 373], "travers": [314, 350, 355, 357], "sy": 314, "argv": 314, "redefin": 314, "dest": 314, "no_use_public_ip": 314, "use_public_ip": 314, "__str__": 314, "display_data": 314, "reimplement": 314, "wish": [314, 433], "displaydataitem": 314, "hasdisplaydata": 314, "key1": 314, "string_valu": 314, "key2": 314, "1234": 314, "key3": 314, "14159265": 314, "key4": 314, "apach": 314, "key5": 314, "subcompon": 314, "from_dictionari": 314, "get_all_opt": 314, "drop_default": 314, "add_extra_args_fn": 314, "_beamargumentpars": 314, "retain_unknown_opt": 314, "callback": 314, "runner": [314, 337, 474], "suppli": 314, "unknown": 314, "recogn": 314, "known": 314, "view_a": 314, "pipelineoptionst": 314, "standard_opt": 314, "standardopt": 314, "error_typ": 318, "subgraphsamplingvalidationerrortyp": 318, "src_node_id": [323, 340], "nodeid": [323, 326], "dst_node_id": [323, 340], "src_node_typ": [324, 350], "dst_node_typ": [324, 350], "__add__": [324, 418], "__getnewargs__": [324, 418], "plain": [324, 418], "__mul__": [324, 418], "_cl": [324, 418], "__rmul__": [324, 418], "occurr": [324, 418], "9223372036854775807": [324, 418], "model_eval_metr": [328, 329, 330], "evalmetr": 330, "dataset_metadata": 333, "dataset_metadata_pb": 333, "dataset_metadata_pb2": 333, "get_output_path": [333, 335], "output_metadata": [333, 335], "supervisednodeclassificationdataset": [333, 335], "supervisedlinkbasedtasksplitdataset": [333, 335], "splitsampl": 333, "output_metadata_typ": [333, 335], "supervisednodeclassificationsplitdataset": 333, "training_sample_typ": [333, 335], "supervisednodeclassificationsampl": [333, 335], "supervisedlinkbasedtasksampl": [333, 335], "trainingsampl": 333, "flattened_graph_metadata_pb": 335, "flattened_graph_metadata_pb2": 335, "dataset_typ": 335, "supervisednodeclassificationsplitoutput": 335, "supervisednodeclassificationoutput": 335, "supervisedlinkbasedtaskoutput": 335, "flattenedgraphmetadataoutputpb": 335, "trainingsamplepb": 335, "gigl_resource_config": 337, "gigl_resource_config_pb2": [337, 454], "_loaded_shared_resource_config": 337, "sharedresourceconfig": [337, 454], "_trainer_config": 337, "vertexairesourceconfig": 337, "kfpresourceconfig": 337, "localresourceconfig": 337, "nonetyp": 337, "_inference_config": 337, "dataflowresourceconfig": 337, "_split_gen_config": 337, "sparkresourceconfig": 337, "dataflow_runn": [337, 464], "directrunn": [337, 464], "embedding_bq_dataset_nam": [337, 464], "get_resource_label": 337, "replacement_kei": 337, "value_compon": 337, "value_pr": 337, "shorten": 337, "inferencer_config": [337, 464], "perm_assets_bucket_path": 337, "perman": [337, 464, 471], "preprocessor_config": [337, 464], "central1": 337, "service_account_email": 337, "email": [337, 464], "split_generator_config": [337, 464], "subgraph_sampler_config": [337, 464], "temp_assets_bq_dataset_nam": [337, 464], "temp_assets_bucket_path": 337, "temp_assets_regional_bucket_path": 337, "graph_data_typ": [339, 340, 341], "pb": [339, 340, 341, 350, 357], "aren": 340, "repeat": 340, "node_id": 340, "n2": 340, "e12": 340, "e21": 340, "g1": 340, "g2": 340, "g3": 340, "hydrate_subgraph_featur": 340, "dry_graph_proto": 340, "node_features_dict": 340, "edge_features_dict": 340, "graphflat": 340, "featureless": 340, "graph_data_types_util": 343, "edge_pb_wrapp": 343, "graph_metadata_wrapp": 343, "nodepb": 343, "edgepb": 343, "graph_metadata_pb": [345, 357], "condensed_edge_type_to_condensed_node_typ": 345, "condensededgetyp": 345, "condensednodetyp": 345, "sampling_op": [347, 348, 349, 350, 351, 352], "random_uniform_pb": 347, "random_weighted_pb": 348, "randomweight": 348, "sampling_op_pb": 350, "__reduce__": 350, "helper": 350, "add_child_sampling_op_pb_wrapp": 350, "child_sampling_op_pb_wrapp": 350, "add_parent_sampling_op_pb_wrapp": 350, "parent_sampling_op_pb_wrapp": 350, "check_if_dag_contains_cycl": 350, "visited_sampling_op_nam": 350, "recursing_sampling_op_nam": 350, "cycle_sampling_op_nam": 350, "cycl": [350, 357], "visit": 350, "explor": [350, 474, 477], "df": 350, "check_sampling_op_edge_type_valid": 350, "root_node_typ": 350, "center": 350, "closer": 350, "earlier": 350, "input_op_nam": 350, "toward": 350, "distanc": 350, "likewis": 350, "come": 350, "later": 350, "farther": 350, "awai": [350, 477], "outgo": 350, "align": [350, 357], "child_sampling_op": 350, "parent_sampling_op": 350, "top_k_pb": 351, "user_defined_pb": 352, "userdefin": 352, "global_random_uniform_strategy_pb": 354, "subgraph_sampling_strategy_pb2": [354, 355, 356, 357], "message_passing_path_pb": 355, "__post_init__": 355, "message_passing_path_strategy_pb": 356, "subgraph_sampling_strategy_pb": 357, "root_node_type_to_message_passing_path_pb_wrapp": 357, "messagepassingpathpbwrapp": 357, "validate_dag": 357, "task_metadata_pb": [357, 359], "gbml_config_pb": 357, "least": 357, "properli": 357, "task_metadata": [359, 364], "gbml_config_pb2": 359, "get_supervision_edge_node_typ": 359, "should_include_src_nod": 359, "should_include_dst_nod": 359, "get_supervision_edge_typ": 359, "get_supervision_node_typ": 359, "get_task_root_node_typ": 359, "nodebasedtaskmetadata": [359, 465], "nodeanchorbasedlinkpredictiontaskmetadata": [359, 465], "linkbasedtaskmetadata": [359, 465], "taskmetadatapb": 359, "nodeclassificationtaskmetadata": 359, "task_metadata_typ": 359, "taskmetadatatyp": 359, "trained_model_metadata_pb": 361, "trained_model_metadata_pb2": 361, "delete_bq_table_if_exist": 367, "bq_table_path": 367, "not_found_ok": 367, "your_dataset": 367, "your_tabl": 367, "fetch_bq_table_schema": 367, "schemafield": 367, "format_bq_path": 367, "bq_path": 367, "format_for_table_refer": 367, "seper": [367, 472], "table_refer": 367, "get_table_names_within_date_rang": 367, "bq_dataset_path": 367, "table_match_str": 367, "start_dat": 367, "end_dat": 367, "yyyymmdd": [367, 400], "load_file_to_bq": 367, "source_path": 367, "loadjobconfig": 367, "_asyncjob": 367, "biqqueri": 367, "update_bq_dataset_retent": 367, "retention_in_dai": 367, "apply_retroact": 367, "retent": 367, "dai": [367, 396, 435], "retain": 367, "retroact": 367, "update_bq_table_retent": 367, "client": 367, "feature_seri": 370, "job_name_suffix": 373, "num_work": [373, 393, 444, 464], "max_num_work": [373, 464], "pos_scor": [375, 376], "neg_scor": [375, 376], "hit": 375, "reciproc": 376, "mrr": 376, "file_load": 378, "delete_fil": 378, "does_uri_exist": 378, "list_children": 378, "gbml_proto": 380, "metrics_service_provid": [382, 383, 384], "service_nam": [383, 384], "load_from_uri": [386, 387], "save_to_path_uri": [388, 389], "schedul": 391, "max_val": 391, "warmup_step": 391, "total_step": 391, "cosin": [391, 433, 434], "lr_schedul": 391, "cosineannealinglr": 391, "ema": 391, "momentum": 391, "nerdslab": 391, "bgrl": 391, "spark_job_manag": [393, 394], "temp_assets_bucket": [393, 464], "num_local_ssd": [393, 464], "is_debug_mod": 393, "timezon": [397, 398], "awar": [397, 398], "utc": [397, 398], "fmt": [398, 399, 401], "z": [398, 399, 401], "date": 398, "dt": 399, "datetime_str": 400, "datetime_format": 400, "decid": 400, "reformat": 400, "stringified_d": 401, "ioctl": 404, "timeout_action_func": 404, "exception_thrown_on_timeout": 404, "timeout_action_func_param": 404, "program": 404, "rai": 404, "shutdown": 404, "multiprocess": 404, "signal": 404, "saltycran": 404, "2010": 404, "04": 404, "s3": 404, "strerror": 404, "errno": 404, "etim": 404, "arbitrari": 404, "inference_output_schema": [418, 419], "node_field": 418, "thin": 418, "fed": 418, "writetobigqueri": 418, "assist": 418, "de": 418, "nice": 418, "base_post_processor": 426, "component_runtim": [429, 430], "runtime_manifest": 429, "argoworkflowmanifestwrapp": [429, 430], "component_name_runtime_hr": 429, "kfp_servic": 430, "kfpservic": 430, "cosine_similar": [432, 433, 434, 435], "cosine_similarity_stat": 432, "expected_cosine_similar": 432, "bq_util": [433, 435], "bqutil": [433, 435], "table_1": 433, "table_2": 433, "pd": [433, 434], "default_node_id_field": [433, 434], "_emb_1": [433, 434], "_emb_2": [433, 434], "cosine_sim_field": [433, 434], "17min": 433, "100m": 433, "now": [433, 473, 474], "don": [433, 464], "henc": 433, "cosine_sim_df": 434, "statist": 434, "std": 434, "75": 434, "95": 434, "99": 434, "reference_t": 435, "lookback_dai": 435, "gbml_embed": 435, "embeddings_gigl_2024_01_01": 435, "should_loop": 444, "hit_rate_at": 447, "resource_config_check": [452, 453, 454, 455, 456, 457], "resource_config_pb": [452, 453, 454, 455, 456, 457], "commoncomputeconfig": 454, "field_nam": [459, 460], "assertionerror": [459, 460], "singular": 460, "shared_resource_config": [464, 474], "resource_label": 464, "cost_resource_group_tag": 464, "cost_resource_group": 464, "common_compute_config": [464, 474], "gcp_region_her": 464, "temp_regional_assets_bucket": 464, "perm_assets_bucket": 464, "bq_dataset_name_her": 464, "gcp_service_account_email": 464, "service_account_email_her": 464, "k8_service_account": 464, "service_account_name_her": 464, "dataflow_worker_harness_imag": 464, "dataflowrunn": 464, "edge_preprocessor_config": 464, "highmem": 464, "disk_size_gb": 464, "node_preprocessor_config": 464, "64": 464, "num_replica": 464, "vertex_ai_trainer_config": 464, "gpu_typ": 464, "nvidia": [464, 472], "tesla": 464, "p100": 464, "gpu_limit": 464, "organzi": 464, "fit": [464, 477], "disk": 464, "ssd": 464, "replica": 464, "t4": 464, "local_trainer_config": 464, "256": 464, "c2": 464, "story_to_us": 465, "supervisionedgetyp": 465, "user_to_stori": 465, "user_to_us": 465, "bill": 471, "cloudprofil": 471, "admin": 471, "editor": 471, "logwrit": 471, "metricwrit": 471, "notebook": 471, "legacyview": 471, "aiplatform": 471, "alot": 471, "lifecycl": 471, "objectadmin": 471, "instruct": 471, "meet": 471, "prerequisit": [471, 472], "Not": [471, 472, 474], "mac": 472, "arm64": 472, "linux": 472, "11": 472, "12": 472, "easiest": 472, "pip": 472, "torchvis": 472, "torchaudio": 472, "enviorn": 472, "arm": 472, "forc": 472, "any_nam": 472, "newli": 472, "torch21": 472, "cpuonli": 472, "forg": 472, "118": 472, "outlin": [473, 474], "quick": [473, 475], "template_task_config_uri": [473, 474], "custom_cuda_docker_uri": 473, "custom_cpu_docker_uri": 473, "dataflow_docker_uri": 473, "pipelineconfig": [473, 474], "demo": 473, "my_task_config": 473, "my_resource_config": 473, "pipeline_config": [473, 474], "run_data_preprocessor": 473, "kfporchestr": 473, "deploi": [473, 477], "endpoint": 473, "easier": [473, 474, 477], "identif": 473, "quickstart": 473, "k8": 473, "kfp_demo": 473, "framework": 474, "proceed": 474, "stai": 474, "tune": [474, 477], "template_resource_config": 474, "remaind": 474, "configu": 474, "cora_homogeneous_node_anchor_edge_featur": 474, "dataset_mock": 474, "mocked_dataset_artifact_metadata": 474, "pipeline_test_asset": 474, "e2e_node_anchor_based_link_prediction_template_gbml_config": 474, "orchestr": [474, 475, 477], "idea": 474, "behind": [474, 477], "scene": [474, 477], "better": 474, "understand": [474, 477], "walkthrough": [474, 475], "why": 475, "frequent": [475, 477], "ask": 475, "downstream": 476, "compoennt": 476, "capabl": 477, "rich": 477, "gracefulli": 477, "modern": 477, "commonli": 477, "particularli": 477, "deploy": 477, "recurr": 477, "complic": 477, "background": 477, "strai": 477, "wide": 477, "immens": 477, "advanc": 477, "extrem": 477, "beyond": 477, "million": 477, "challeng": 477, "trivial": 477, "cleanli": 477, "moreov": 477, "expens": 477, "hyperparamet": 477, "experiment": 477, "amort": 477, "potenti": 477, "product": 477, "enthusiast": 477, "who": 477, "interest": 477, "benchmark": 477, "ram": 477, "directli": 477, "proport": 477, "outsiz": 477, "small": 477, "vertic": 477, "feasibl": 477, "thank": 477, "capac": 477, "quickli": 477, "satur": 477, "revis": 477, "resili": 477, "ideologi": 477, "principl": 477, "elast": 477, "appeal": 477, "rapidli": 477, "growth": 477, "compris": 477, "vocabulari": 477, "consum": 477, "artifact": 477, "auto": 477, "precursor": 477, "intermedi": 477}, "objects": {"": [[7, 0, 0, "-", "common"], [123, 0, 0, "-", "env"], [132, 0, 0, "-", "orchestration"], [154, 0, 0, "-", "src"]], "common": [[8, 0, 0, "-", "beam"], [9, 0, 0, "-", "collections"], [16, 0, 0, "-", "data"], [20, 0, 0, "-", "env_config"], [22, 0, 0, "-", "logger"], [24, 0, 0, "-", "metrics"], [33, 0, 0, "-", "services"], [44, 0, 0, "-", "types"], [64, 0, 0, "-", "utils"]], "common.collections": [[10, 0, 0, "-", "frozen_dict"], [12, 0, 0, "-", "itertools"], [14, 0, 0, "-", "sorted_dict"]], "common.collections.frozen_dict": [[11, 1, 1, "", "FrozenDict"]], "common.collections.frozen_dict.FrozenDict": [[11, 2, 1, "", "__class_getitem__"], [11, 2, 1, "", "__eq__"], [11, 2, 1, "", "__hash__"], [11, 2, 1, "", "__init__"], [11, 2, 1, "", "__init_subclass__"], [11, 2, 1, "", "__repr__"], [11, 2, 1, "", "__subclasshook__"], [11, 3, 1, "", "__weakref__"], [11, 2, 1, "", "get"], [11, 2, 1, "", "items"], [11, 2, 1, "", "keys"], [11, 2, 1, "", "values"]], "common.collections.itertools": [[13, 4, 1, "", "batch"]], "common.collections.sorted_dict": [[15, 1, 1, "", "SortedDict"]], "common.collections.sorted_dict.SortedDict": [[15, 2, 1, "", "__class_getitem__"], [15, 2, 1, "", "__eq__"], [15, 3, 1, "", "__hash__"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "__init_subclass__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__subclasshook__"], [15, 3, 1, "", "__weakref__"], [15, 2, 1, "", "get"], [15, 2, 1, "", "items"], [15, 2, 1, "", "keys"], [15, 2, 1, "", "values"]], "common.data": [[17, 0, 0, "-", "export"]], "common.data.export": [[18, 1, 1, "", "EmbeddingExporter"], [19, 4, 1, "", "load_embeddings_to_bigquery"]], "common.data.export.EmbeddingExporter": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "__weakref__"], [18, 2, 1, "", "add_embedding"], [18, 2, 1, "", "flush_embeddings"]], "common.env_config": [[21, 4, 1, "", "get_available_cpus"]], "common.logger": [[23, 1, 1, "", "Logger"]], "common.logger.Logger": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "__repr__"], [23, 3, 1, "", "__weakref__"], [23, 2, 1, "", "critical"], [23, 2, 1, "", "debug"], [23, 2, 1, "", "error"], [23, 2, 1, "", "exception"], [23, 2, 1, "", "getEffectiveLevel"], [23, 2, 1, "", "hasHandlers"], [23, 2, 1, "", "info"], [23, 2, 1, "", "isEnabledFor"], [23, 2, 1, "", "log"], [23, 2, 1, "", "process"], [23, 2, 1, "", "setLevel"], [23, 2, 1, "", "warning"]], "common.metrics": [[25, 0, 0, "-", "base_metrics"], [27, 0, 0, "-", "decorators"], [31, 0, 0, "-", "metrics_interface"]], "common.metrics.base_metrics": [[26, 1, 1, "", "NopMetricsPublisher"]], "common.metrics.base_metrics.NopMetricsPublisher": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "__weakref__"]], "common.metrics.decorators": [[28, 1, 1, "", "TimerRecordGranularity"], [29, 4, 1, "", "flushes_metrics"], [30, 4, 1, "", "profileit"]], "common.metrics.metrics_interface": [[32, 1, 1, "", "OpsMetricPublisher"]], "common.metrics.metrics_interface.OpsMetricPublisher": [[32, 3, 1, "", "__weakref__"]], "common.services": [[34, 0, 0, "-", "dataproc"], [36, 0, 0, "-", "gcp_cloud_logging"], [39, 0, 0, "-", "kfp"], [41, 0, 0, "-", "vertex_ai"]], "common.services.dataproc": [[35, 1, 1, "", "DataprocService"]], "common.services.dataproc.DataprocService": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "__weakref__"], [35, 2, 1, "", "create_cluster"], [35, 2, 1, "", "delete_cluster"], [35, 2, 1, "", "does_cluster_exist"], [35, 2, 1, "", "get_running_job_ids_on_cluster"], [35, 2, 1, "", "get_submitted_job_ids"], [35, 2, 1, "", "submit_and_wait_scala_spark_job"]], "common.services.gcp_cloud_logging": [[37, 1, 1, "", "GCPCloudLoggingService"], [38, 1, 1, "", "LogEntries"]], "common.services.gcp_cloud_logging.GCPCloudLoggingService": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "__weakref__"], [37, 2, 1, "", "get_logs_iterator_from_k8_container"]], "common.services.gcp_cloud_logging.LogEntries": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "__weakref__"]], "common.services.kfp": [[40, 1, 1, "", "KFPService"]], "common.services.kfp.KFPService": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "__weakref__"], [40, 2, 1, "", "get_experiment_name_by_id"], [40, 2, 1, "", "get_host_gcp_project_name"], [40, 2, 1, "", "get_host_k8_cluster_name"], [40, 2, 1, "", "get_latest_experiment_from_name"], [40, 2, 1, "", "get_latest_run_with_name"], [40, 2, 1, "", "get_run"], [40, 2, 1, "", "run_pipeline"], [40, 2, 1, "", "upload_pipeline_version"], [40, 2, 1, "", "wait_for_run_completion"]], "common.services.vertex_ai": [[42, 1, 1, "", "VertexAIService"], [43, 1, 1, "", "VertexAiJobConfig"]], "common.services.vertex_ai.VertexAIService": [[42, 2, 1, "", "__init__"], [42, 3, 1, "", "__weakref__"], [42, 2, 1, "", "connect_worker_pool"], [42, 2, 1, "", "get_host_name"], [42, 2, 1, "", "get_leader_hostname"], [42, 2, 1, "", "get_leader_port"], [42, 2, 1, "", "get_rank"], [42, 2, 1, "", "get_vertex_ai_job_id"], [42, 2, 1, "", "get_world_size"], [42, 2, 1, "", "is_currently_running_in_vertex_ai_job"], [42, 2, 1, "", "run"]], "common.services.vertex_ai.VertexAiJobConfig": [[43, 2, 1, "", "__eq__"], [43, 3, 1, "", "__hash__"], [43, 2, 1, "", "__init__"], [43, 2, 1, "", "__repr__"], [43, 3, 1, "", "__weakref__"]], "common.types": [[45, 0, 0, "-", "resource_config"], [47, 0, 0, "-", "uri"], [58, 0, 0, "-", "wrappers"]], "common.types.resource_config": [[46, 1, 1, "", "CommonPipelineComponentConfigs"]], "common.types.resource_config.CommonPipelineComponentConfigs": [[46, 2, 1, "", "__eq__"], [46, 3, 1, "", "__hash__"], [46, 2, 1, "", "__init__"], [46, 2, 1, "", "__repr__"], [46, 3, 1, "", "__weakref__"]], "common.types.uri": [[48, 0, 0, "-", "gcs_uri"], [50, 0, 0, "-", "http_uri"], [52, 0, 0, "-", "local_uri"], [54, 0, 0, "-", "uri"], [56, 0, 0, "-", "uri_factory"]], "common.types.uri.gcs_uri": [[49, 1, 1, "", "GcsUri"]], "common.types.uri.gcs_uri.GcsUri": [[49, 2, 1, "", "__eq__"], [49, 2, 1, "", "__hash__"], [49, 2, 1, "", "__init__"], [49, 2, 1, "", "__repr__"], [49, 3, 1, "", "__weakref__"], [49, 2, 1, "", "is_valid"], [49, 2, 1, "", "join"]], "common.types.uri.http_uri": [[51, 1, 1, "", "HttpUri"]], "common.types.uri.http_uri.HttpUri": [[51, 2, 1, "", "__eq__"], [51, 2, 1, "", "__hash__"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "__repr__"], [51, 3, 1, "", "__weakref__"], [51, 2, 1, "", "is_valid"], [51, 2, 1, "", "join"]], "common.types.uri.local_uri": [[53, 1, 1, "", "LocalUri"]], "common.types.uri.local_uri.LocalUri": [[53, 2, 1, "", "__class_getitem__"], [53, 2, 1, "", "__eq__"], [53, 2, 1, "", "__fspath__"], [53, 2, 1, "", "__hash__"], [53, 2, 1, "", "__init__"], [53, 2, 1, "", "__repr__"], [53, 2, 1, "", "__subclasshook__"], [53, 3, 1, "", "__weakref__"], [53, 2, 1, "", "absolute"], [53, 2, 1, "", "get_file_name"], [53, 2, 1, "", "is_valid"], [53, 2, 1, "", "join"]], "common.types.uri.uri": [[55, 1, 1, "", "Uri"]], "common.types.uri.uri.Uri": [[55, 2, 1, "", "__eq__"], [55, 2, 1, "", "__hash__"], [55, 2, 1, "", "__init__"], [55, 2, 1, "", "__repr__"], [55, 3, 1, "", "__weakref__"], [55, 2, 1, "", "is_valid"], [55, 2, 1, "", "join"]], "common.types.uri.uri_factory": [[57, 1, 1, "", "UriFactory"]], "common.types.uri.uri_factory.UriFactory": [[57, 3, 1, "", "__weakref__"], [57, 2, 1, "", "create_uri"]], "common.types.wrappers": [[59, 0, 0, "-", "argo_workflow_manifest"], [62, 0, 0, "-", "kfp_api"]], "common.types.wrappers.argo_workflow_manifest": [[60, 1, 1, "", "ArgoWorkflowManifestWrapper"], [61, 1, 1, "", "ArgoWorkflowNodeStatus"]], "common.types.wrappers.argo_workflow_manifest.ArgoWorkflowManifestWrapper": [[60, 2, 1, "", "__init__"], [60, 3, 1, "", "__weakref__"], [60, 5, 1, "", "component_status_by_component_display_name"]], "common.types.wrappers.argo_workflow_manifest.ArgoWorkflowNodeStatus": [[61, 2, 1, "", "__init__"], [61, 3, 1, "", "__weakref__"]], "common.types.wrappers.kfp_api": [[63, 1, 1, "", "ApiRunDetailWrapper"]], "common.types.wrappers.kfp_api.ApiRunDetailWrapper": [[63, 2, 1, "", "__init__"], [63, 3, 1, "", "__weakref__"]], "common.utils": [[65, 0, 0, "-", "compute"], [80, 0, 0, "-", "dataflow"], [82, 0, 0, "-", "func_tools"], [84, 0, 0, "-", "gcs"], [86, 0, 0, "-", "kfp"], [88, 0, 0, "-", "local_fs"], [103, 0, 0, "-", "os_utils"], [107, 0, 0, "-", "proto_utils"], [109, 0, 0, "-", "retry"], [112, 0, 0, "-", "test_utils"], [116, 0, 0, "-", "torch_training"]], "common.utils.compute": [[66, 0, 0, "-", "random"], [68, 0, 0, "-", "serialization"]], "common.utils.compute.random": [[67, 4, 1, "", "make_compute_deterministic_and_set_seed"]], "common.utils.compute.serialization": [[69, 0, 0, "-", "coder"], [71, 0, 0, "-", "serialize_np"], [74, 0, 0, "-", "serialize_protos"], [78, 0, 0, "-", "serialize_string"]], "common.utils.compute.serialization.coder": [[70, 1, 1, "", "CoderProtocol"]], "common.utils.compute.serialization.coder.CoderProtocol": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__init_subclass__"], [70, 2, 1, "", "__subclasshook__"], [70, 3, 1, "", "__weakref__"]], "common.utils.compute.serialization.serialize_np": [[72, 1, 1, "", "EncodedNdArray"], [73, 1, 1, "", "NumpyCoder"]], "common.utils.compute.serialization.serialize_np.EncodedNdArray": [[72, 2, 1, "", "__class_getitem__"], [72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__eq__"], [72, 2, 1, "", "__ge__"], [72, 2, 1, "", "__getattribute__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__gt__"], [72, 3, 1, "", "__hash__"], [72, 2, 1, "", "__init__"], [72, 2, 1, "", "__ior__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__le__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__lt__"], [72, 2, 1, "", "__ne__"], [72, 2, 1, "", "__new__"], [72, 2, 1, "", "__or__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__reversed__"], [72, 2, 1, "", "__ror__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "__sizeof__"], [72, 3, 1, "", "__weakref__"], [72, 2, 1, "", "clear"], [72, 2, 1, "", "copy"], [72, 2, 1, "", "fromkeys"], [72, 2, 1, "", "get"], [72, 2, 1, "", "items"], [72, 2, 1, "", "keys"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "popitem"], [72, 2, 1, "", "setdefault"], [72, 2, 1, "", "update"], [72, 2, 1, "", "values"]], "common.utils.compute.serialization.serialize_np.NumpyCoder": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__init_subclass__"], [73, 2, 1, "", "__subclasshook__"], [73, 3, 1, "", "__weakref__"]], "common.utils.compute.serialization.serialize_protos": [[75, 1, 1, "", "EdgePbWrapperCoder"], [76, 1, 1, "", "GraphPbWrapperCoder"], [77, 1, 1, "", "NodePbWrapperCoder"]], "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder": [[75, 2, 1, "", "__eq__"], [75, 2, 1, "", "__hash__"], [75, 2, 1, "", "__init__"], [75, 2, 1, "", "__repr__"], [75, 3, 1, "", "__weakref__"], [75, 2, 1, "", "as_deterministic_coder"], [75, 2, 1, "", "decode"], [75, 2, 1, "", "decode_nested"], [75, 2, 1, "", "encode"], [75, 2, 1, "", "encode_nested"], [75, 2, 1, "", "estimate_size"], [75, 2, 1, "", "from_runner_api"], [75, 2, 1, "", "get_impl"], [75, 2, 1, "", "is_deterministic"], [75, 2, 1, "", "register_structured_urn"], [75, 2, 1, "", "register_urn"]], "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder": [[76, 2, 1, "", "__eq__"], [76, 2, 1, "", "__hash__"], [76, 2, 1, "", "__init__"], [76, 2, 1, "", "__repr__"], [76, 3, 1, "", "__weakref__"], [76, 2, 1, "", "as_deterministic_coder"], [76, 2, 1, "", "decode"], [76, 2, 1, "", "decode_nested"], [76, 2, 1, "", "encode"], [76, 2, 1, "", "encode_nested"], [76, 2, 1, "", "estimate_size"], [76, 2, 1, "", "from_runner_api"], [76, 2, 1, "", "get_impl"], [76, 2, 1, "", "is_deterministic"], [76, 2, 1, "", "register_structured_urn"], [76, 2, 1, "", "register_urn"]], "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder": [[77, 2, 1, "", "__eq__"], [77, 2, 1, "", "__hash__"], [77, 2, 1, "", "__init__"], [77, 2, 1, "", "__repr__"], [77, 3, 1, "", "__weakref__"], [77, 2, 1, "", "as_deterministic_coder"], [77, 2, 1, "", "decode"], [77, 2, 1, "", "decode_nested"], [77, 2, 1, "", "encode"], [77, 2, 1, "", "encode_nested"], [77, 2, 1, "", "estimate_size"], [77, 2, 1, "", "from_runner_api"], [77, 2, 1, "", "get_impl"], [77, 2, 1, "", "is_deterministic"], [77, 2, 1, "", "register_structured_urn"], [77, 2, 1, "", "register_urn"]], "common.utils.compute.serialization.serialize_string": [[79, 1, 1, "", "StringCoder"]], "common.utils.compute.serialization.serialize_string.StringCoder": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__init_subclass__"], [79, 2, 1, "", "__subclasshook__"], [79, 3, 1, "", "__weakref__"]], "common.utils.dataflow": [[81, 4, 1, "", "get_console_uri_from_pipeline_result"]], "common.utils.func_tools": [[83, 4, 1, "", "lru_cache"]], "common.utils.gcs": [[85, 1, 1, "", "GcsUtils"]], "common.utils.gcs.GcsUtils": [[85, 2, 1, "", "__init__"], [85, 3, 1, "", "__weakref__"], [85, 2, 1, "", "download_files_from_gcs_paths_to_local_paths"], [85, 2, 1, "", "list_uris_with_gcs_path_pattern"], [85, 2, 1, "", "upload_files_to_gcs"], [85, 2, 1, "", "upload_from_filelike"]], "common.utils.kfp": [[87, 1, 1, "", "KfpOutputViewers"]], "common.utils.kfp.KfpOutputViewers": [[87, 2, 1, "", "__init__"], [87, 3, 1, "", "__weakref__"]], "common.utils.local_fs": [[89, 1, 1, "", "FileSystemEntity"], [90, 4, 1, "", "append_line_to_file"], [91, 4, 1, "", "copy_files"], [92, 4, 1, "", "count_files_with_uri_prefix"], [93, 4, 1, "", "create_empty_file_if_none_exists"], [94, 4, 1, "", "create_file_symlinks"], [95, 4, 1, "", "delete_and_create_local_path"], [96, 4, 1, "", "delete_local_directory"], [97, 4, 1, "", "does_path_exist"], [98, 4, 1, "", "list_at_path"], [99, 4, 1, "", "remove_file_if_exist"], [100, 4, 1, "", "remove_file_or_folder_if_exist"], [101, 4, 1, "", "remove_folder_if_exist"], [102, 4, 1, "", "remove_line_from_file"]], "common.utils.os_utils": [[104, 4, 1, "", "import_obj"], [105, 4, 1, "", "num_lines_in_file"], [106, 4, 1, "", "run_command_and_stream_stdout"]], "common.utils.proto_utils": [[108, 1, 1, "", "ProtoUtils"]], "common.utils.proto_utils.ProtoUtils": [[108, 2, 1, "", "__init__"], [108, 3, 1, "", "__weakref__"]], "common.utils.retry": [[110, 6, 1, "", "RetriesFailedException"], [111, 4, 1, "", "retry"]], "common.utils.test_utils": [[113, 1, 1, "", "TestArgs"], [114, 4, 1, "", "parse_args"], [115, 4, 1, "", "run_tests"]], "common.utils.test_utils.TestArgs": [[113, 2, 1, "", "__delattr__"], [113, 2, 1, "", "__eq__"], [113, 2, 1, "", "__hash__"], [113, 2, 1, "", "__init__"], [113, 2, 1, "", "__repr__"], [113, 2, 1, "", "__setattr__"], [113, 3, 1, "", "__weakref__"], [113, 3, 1, "", "test_file_pattern"]], "common.utils.torch_training": [[117, 4, 1, "", "get_distributed_backend"], [118, 4, 1, "", "get_rank"], [119, 4, 1, "", "get_world_size"], [120, 4, 1, "", "is_distributed_available_and_initialized"], [121, 4, 1, "", "is_distributed_local_debug"], [122, 4, 1, "", "should_distribute"]], "env": [[124, 0, 0, "-", "dep_constants"], [129, 0, 0, "-", "pipelines_config"]], "env.dep_constants": [[125, 4, 1, "", "get_compiled_jar_path"], [126, 4, 1, "", "get_current_jar_file"], [127, 4, 1, "", "get_jar_file_uri"], [128, 4, 1, "", "get_local_jar_directory"]], "env.pipelines_config": [[130, 4, 1, "", "get_resource_config"], [131, 4, 1, "", "is_resource_config_loaded"]], "orchestration": [[133, 0, 0, "-", "kubeflow"]], "orchestration.kubeflow": [[134, 0, 0, "-", "kfp_orchestrator"], [137, 0, 0, "-", "kfp_pipeline"], [147, 0, 0, "-", "utils"]], "orchestration.kubeflow.kfp_orchestrator": [[135, 1, 1, "", "KfpEnvMetadata"], [136, 1, 1, "", "KfpOrchestrator"]], "orchestration.kubeflow.kfp_orchestrator.KfpEnvMetadata": [[135, 2, 1, "", "__eq__"], [135, 3, 1, "", "__hash__"], [135, 2, 1, "", "__init__"], [135, 2, 1, "", "__repr__"], [135, 3, 1, "", "__weakref__"]], "orchestration.kubeflow.kfp_orchestrator.KfpOrchestrator": [[136, 2, 1, "", "__init__"], [136, 3, 1, "", "__weakref__"], [136, 2, 1, "id0", "compile"], [136, 2, 1, "", "run"], [136, 2, 1, "", "upload"], [136, 2, 1, "", "wait_for_completion"]], "orchestration.kubeflow.kfp_pipeline": [[138, 4, 1, "", "create_config_populator_task_op"], [139, 4, 1, "", "create_data_preprocessor_task_op"], [140, 4, 1, "", "create_inferencer_task_op"], [141, 4, 1, "", "create_post_processor_task_op"], [142, 4, 1, "", "create_split_generator_task_op"], [143, 4, 1, "", "create_subgraph_sampler_task_op"], [144, 4, 1, "", "create_trainer_task_op"], [145, 4, 1, "", "generate_component_task"], [146, 4, 1, "", "generate_pipeline"]], "orchestration.kubeflow.utils": [[148, 0, 0, "-", "glt_backend"], [150, 0, 0, "-", "log_metrics"], [152, 0, 0, "-", "resource"]], "orchestration.kubeflow.utils.glt_backend": [[149, 4, 1, "", "check_glt_backend_eligibility_component"]], "orchestration.kubeflow.utils.log_metrics": [[151, 4, 1, "", "log_eval_metrics_to_ui"]], "orchestration.kubeflow.utils.resource": [[153, 4, 1, "", "add_task_resource_requirements"]], "src": [[155, 0, 0, "-", "applied_tasks"], [160, 0, 0, "-", "common"], [405, 0, 0, "-", "config_populator"], [408, 0, 0, "-", "data_preprocessor"], [414, 0, 0, "-", "inference"], [423, 0, 0, "-", "post_process"], [436, 0, 0, "-", "split_generator"], [437, 0, 0, "-", "subgraph_sampler"], [439, 0, 0, "-", "training"], [449, 0, 0, "-", "validation_check"]], "src.applied_tasks": [[156, 0, 0, "-", "test_tasks"]], "src.applied_tasks.test_tasks": [[157, 0, 0, "-", "academic"]], "src.applied_tasks.test_tasks.academic": [[158, 4, 1, "", "get_pyg_cora_dataset"], [159, 4, 1, "", "log_stats_for_pyg_planetoid_dataset"]], "src.common": [[161, 0, 0, "-", "constants"], [250, 0, 0, "-", "graph_builder"], [259, 0, 0, "-", "modeling_task_specs"], [267, 0, 0, "-", "models"], [307, 0, 0, "-", "translators"], [312, 0, 0, "-", "types"], [365, 0, 0, "-", "utils"]], "src.common.constants": [[162, 0, 0, "-", "bq"], [166, 0, 0, "-", "components"], [168, 0, 0, "-", "gcs"], [219, 0, 0, "-", "graph_metadata"], [220, 0, 0, "-", "local_fs"], [234, 0, 0, "-", "metrics"], [235, 0, 0, "-", "resource_config"], [236, 0, 0, "-", "test_assets"], [248, 0, 0, "-", "time"], [249, 0, 0, "-", "training"]], "src.common.constants.bq": [[163, 4, 1, "", "get_embeddings_dataset_bq_path"], [164, 4, 1, "", "get_embeddings_table"], [165, 4, 1, "", "get_predictions_table"]], "src.common.constants.components": [[167, 1, 1, "", "GiGLComponents"]], "src.common.constants.gcs": [[169, 4, 1, "", "get_applied_task_perm_gcs_path"], [170, 4, 1, "", "get_applied_task_temp_gcs_path"], [171, 4, 1, "", "get_applied_task_temp_regional_gcs_path"], [172, 4, 1, "", "get_config_populator_assets_perm_gcs_path"], [173, 4, 1, "", "get_data_preprocessor_assets_perm_gcs_path"], [174, 4, 1, "", "get_data_preprocessor_assets_temp_gcs_path"], [175, 4, 1, "", "get_data_preprocessor_staging_gcs_path"], [176, 4, 1, "", "get_dataflow_staging_gcs_path"], [177, 4, 1, "", "get_dataflow_temp_gcs_path"], [178, 4, 1, "", "get_frozen_gbml_config_proto_gcs_path"], [179, 4, 1, "", "get_inferencer_asset_dir_gcs_path"], [180, 4, 1, "", "get_inferencer_embeddings_gcs_prefix"], [181, 4, 1, "", "get_inferencer_predictions_gcs_prefix"], [182, 4, 1, "", "get_post_processor_asset_dir_gcs_path"], [183, 4, 1, "", "get_post_processor_metrics_gcs_path"], [184, 4, 1, "", "get_preprocessed_metadata_proto_gcs_path"], [185, 4, 1, "", "get_split_dataset_main_samples_gcs_file_prefix"], [186, 4, 1, "", "get_split_dataset_output_gcs_file_prefix"], [187, 4, 1, "", "get_split_dataset_random_negatives_gcs_file_prefix"], [188, 4, 1, "", "get_split_generator_assets_temp_gcs_path"], [189, 4, 1, "", "get_subgraph_sampler_flattened_graph_metadata_output_gcs_path"], [190, 4, 1, "", "get_subgraph_sampler_node_anchor_based_link_prediction_random_negatives_samples_prefix"], [191, 4, 1, "", "get_subgraph_sampler_node_anchor_based_link_prediction_samples_prefix"], [192, 4, 1, "", "get_subgraph_sampler_node_anchor_based_link_prediction_task_dir"], [193, 4, 1, "", "get_subgraph_sampler_node_neighborhood_samples_dir"], [194, 4, 1, "", "get_subgraph_sampler_node_neighborhood_samples_path_prefix"], [195, 4, 1, "", "get_subgraph_sampler_root_dir"], [196, 4, 1, "", "get_subgraph_sampler_supervised_link_based_task_dir"], [197, 4, 1, "", "get_subgraph_sampler_supervised_link_based_task_labeled_samples_prefix"], [198, 4, 1, "", "get_subgraph_sampler_supervised_link_based_task_unlabeled_samples_prefix"], [199, 4, 1, "", "get_subgraph_sampler_supervised_node_classification_labeled_samples_prefix"], [200, 4, 1, "", "get_subgraph_sampler_supervised_node_classification_task_dir"], [201, 4, 1, "", "get_subgraph_sampler_supervised_node_classification_unlabeled_samples_prefix"], [202, 4, 1, "", "get_tensorboard_logs_gcs_path"], [203, 4, 1, "", "get_tf_transform_directory_path"], [204, 4, 1, "", "get_tf_transform_raw_data_schema_file_path"], [205, 4, 1, "", "get_tf_transform_stats_directory_path"], [206, 4, 1, "", "get_tf_transform_stats_file_path"], [207, 4, 1, "", "get_tf_transform_temp_directory_path"], [208, 4, 1, "", "get_tf_transform_visualized_facets_file_path"], [209, 4, 1, "", "get_tf_transformed_features_schema_path"], [210, 4, 1, "", "get_tf_transformed_features_transform_fn_assets_directory_path"], [211, 4, 1, "", "get_trained_model_eval_metrics_gcs_path"], [212, 4, 1, "", "get_trained_model_gcs_path"], [213, 4, 1, "", "get_trained_model_metadata_proto_gcs_path"], [214, 4, 1, "", "get_trained_models_dir_gcs_path"], [215, 4, 1, "", "get_trained_scripted_model_gcs_path"], [216, 4, 1, "", "get_trainer_asset_dir_gcs_path"], [217, 4, 1, "", "get_transformed_features_directory_path"], [218, 4, 1, "", "get_transformed_features_file_prefix"]], "src.common.constants.local_fs": [[221, 4, 1, "", "get_gbml_assets_tmp_path"], [222, 4, 1, "", "get_gbml_log_file_prefix_tmp_path"], [223, 4, 1, "", "get_gbml_logs_folder_local_tmp_path"], [224, 4, 1, "", "get_gbml_task_local_tmp_path"], [225, 4, 1, "", "get_gigl_root_directory"], [226, 4, 1, "", "get_inference_embeddings_local_tmp_dir_path"], [227, 4, 1, "", "get_inference_embeddings_local_tmp_file_prefix"], [228, 4, 1, "", "get_inference_predictions_local_tmp_file_prefix"], [229, 4, 1, "", "get_path_to_manifest_file"], [230, 4, 1, "", "get_preprocess_local_staging_dir_path"], [231, 4, 1, "", "get_project_root_directory"], [232, 4, 1, "", "get_python_project_root_path"], [233, 4, 1, "", "get_train_val_info_local_tmp_file_path"]], "src.common.constants.test_assets": [[237, 4, 1, "", "get_example_task_edge_features_gcs_dir"], [238, 4, 1, "", "get_example_task_edge_features_schema_gcs_path"], [239, 4, 1, "", "get_example_task_edges_bq_table_path"], [240, 4, 1, "", "get_example_task_frozen_gbml_config_gcs_path"], [241, 4, 1, "", "get_example_task_node_features_gcs_dir"], [242, 4, 1, "", "get_example_task_node_features_schema_gcs_path"], [243, 4, 1, "", "get_example_task_nodes_bq_table_path"], [244, 4, 1, "", "get_example_task_preprocess_gcs_prefix"], [245, 4, 1, "", "get_example_task_static_assets_gcs_dir"], [246, 4, 1, "", "update_bq_table_with_test_assets_and_version"], [247, 4, 1, "", "update_gcs_uri_with_test_assets_and_version"]], "src.common.graph_builder": [[251, 0, 0, "-", "abstract_graph_builder"], [253, 0, 0, "-", "gbml_graph_protocol"], [255, 0, 0, "-", "pyg_graph_builder"], [257, 0, 0, "-", "pyg_graph_data"]], "src.common.graph_builder.abstract_graph_builder": [[252, 1, 1, "", "GraphBuilder"]], "src.common.graph_builder.abstract_graph_builder.GraphBuilder": [[252, 2, 1, "", "__init_subclass__"], [252, 3, 1, "", "__weakref__"], [252, 2, 1, "", "add_edge"], [252, 2, 1, "", "add_graph_data"], [252, 2, 1, "", "add_node"], [252, 2, 1, "", "build"], [252, 2, 1, "", "register_edge_types"], [252, 2, 1, "", "reset"]], "src.common.graph_builder.gbml_graph_protocol": [[254, 1, 1, "", "GbmlGraphDataProtocol"]], "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol": [[254, 2, 1, "", "__init__"], [254, 2, 1, "", "__init_subclass__"], [254, 2, 1, "", "__subclasshook__"], [254, 3, 1, "", "__weakref__"], [254, 2, 1, "", "are_disjoint"], [254, 2, 1, "", "are_same_graph"], [254, 5, 1, "", "edge_types_to_be_registered"], [254, 2, 1, "", "get_global_edge_features_dict"], [254, 2, 1, "", "get_global_node_features_dict"], [254, 5, 1, "", "global_node_to_subgraph_node_mapping"], [254, 5, 1, "", "subgraph_node_to_global_node_mapping"]], "src.common.graph_builder.pyg_graph_builder": [[256, 1, 1, "", "PygGraphBuilder"]], "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder": [[256, 2, 1, "", "__init__"], [256, 2, 1, "", "__init_subclass__"], [256, 3, 1, "", "__weakref__"], [256, 2, 1, "", "add_edge"], [256, 2, 1, "", "add_graph_data"], [256, 2, 1, "", "add_node"], [256, 2, 1, "", "build"], [256, 2, 1, "", "register_edge_types"], [256, 2, 1, "", "reset"]], "src.common.graph_builder.pyg_graph_data": [[258, 1, 1, "", "PygGraphData"]], "src.common.graph_builder.pyg_graph_data.PygGraphData": [[258, 2, 1, "", "__cat_dim__"], [258, 2, 1, "", "__contains__"], [258, 2, 1, "", "__delattr__"], [258, 2, 1, "", "__delitem__"], [258, 2, 1, "", "__eq__"], [258, 2, 1, "", "__getitem__"], [258, 3, 1, "", "__hash__"], [258, 2, 1, "", "__inc__"], [258, 2, 1, "", "__init__"], [258, 2, 1, "", "__init_subclass__"], [258, 2, 1, "", "__len__"], [258, 2, 1, "", "__repr__"], [258, 2, 1, "", "__setattr__"], [258, 2, 1, "", "__setitem__"], [258, 2, 1, "", "__subclasshook__"], [258, 3, 1, "", "__weakref__"], [258, 2, 1, "", "apply"], [258, 2, 1, "", "apply_"], [258, 2, 1, "", "are_disjoint"], [258, 2, 1, "", "are_same_graph"], [258, 2, 1, "", "clone"], [258, 2, 1, "", "coalesce"], [258, 2, 1, "", "collect"], [258, 2, 1, "", "concat"], [258, 2, 1, "", "contiguous"], [258, 2, 1, "", "coo"], [258, 2, 1, "", "cpu"], [258, 2, 1, "", "csc"], [258, 2, 1, "", "csr"], [258, 2, 1, "", "cuda"], [258, 2, 1, "", "detach"], [258, 2, 1, "", "detach_"], [258, 2, 1, "", "edge_attrs"], [258, 2, 1, "", "edge_items"], [258, 5, 1, "", "edge_stores"], [258, 2, 1, "", "edge_subgraph"], [258, 2, 1, "", "edge_type_subgraph"], [258, 5, 1, "", "edge_types"], [258, 5, 1, "", "edge_types_to_be_registered"], [258, 2, 1, "", "from_dict"], [258, 2, 1, "", "generate_ids"], [258, 2, 1, "", "get_all_edge_attrs"], [258, 2, 1, "", "get_all_tensor_attrs"], [258, 2, 1, "", "get_edge_index"], [258, 2, 1, "", "get_edge_store"], [258, 2, 1, "", "get_global_edge_features_dict"], [258, 2, 1, "", "get_global_node_features_dict"], [258, 2, 1, "", "get_node_store"], [258, 2, 1, "", "get_tensor"], [258, 2, 1, "", "get_tensor_size"], [258, 5, 1, "", "global_node_to_subgraph_node_mapping"], [258, 2, 1, "", "has_isolated_nodes"], [258, 2, 1, "", "has_self_loops"], [258, 2, 1, "", "is_coalesced"], [258, 5, 1, "", "is_cuda"], [258, 2, 1, "", "is_directed"], [258, 2, 1, "", "is_sorted"], [258, 2, 1, "", "is_sorted_by_time"], [258, 2, 1, "", "is_undirected"], [258, 2, 1, "", "keys"], [258, 2, 1, "", "metadata"], [258, 2, 1, "", "multi_get_tensor"], [258, 2, 1, "", "node_attrs"], [258, 2, 1, "", "node_items"], [258, 5, 1, "", "node_stores"], [258, 2, 1, "", "node_type_subgraph"], [258, 5, 1, "", "node_types"], [258, 5, 1, "", "num_edge_features"], [258, 5, 1, "", "num_edges"], [258, 5, 1, "", "num_features"], [258, 5, 1, "", "num_node_features"], [258, 5, 1, "", "num_nodes"], [258, 2, 1, "", "pin_memory"], [258, 2, 1, "", "put_edge_index"], [258, 2, 1, "", "put_tensor"], [258, 2, 1, "", "record_stream"], [258, 2, 1, "", "remove_edge_index"], [258, 2, 1, "", "remove_tensor"], [258, 2, 1, "", "rename"], [258, 2, 1, "", "requires_grad_"], [258, 2, 1, "", "set_value_dict"], [258, 2, 1, "", "share_memory_"], [258, 2, 1, "", "size"], [258, 2, 1, "", "snapshot"], [258, 2, 1, "", "sort"], [258, 2, 1, "", "sort_by_time"], [258, 5, 1, "", "stores"], [258, 2, 1, "", "subgraph"], [258, 5, 1, "", "subgraph_node_to_global_node_mapping"], [258, 2, 1, "", "to"], [258, 2, 1, "", "to_dict"], [258, 2, 1, "", "to_hetero_data"], [258, 2, 1, "", "to_homogeneous"], [258, 2, 1, "", "to_namedtuple"], [258, 2, 1, "", "up_to"], [258, 2, 1, "", "update"], [258, 2, 1, "", "update_tensor"], [258, 2, 1, "", "validate"], [258, 2, 1, "", "view"]], "src.common.modeling_task_specs": [[260, 0, 0, "-", "utils"]], "src.common.modeling_task_specs.utils": [[261, 0, 0, "-", "early_stop"], [263, 0, 0, "-", "parameter_loading"], [265, 0, 0, "-", "profiler_wrapper"]], "src.common.modeling_task_specs.utils.early_stop": [[262, 1, 1, "", "EarlyStopper"]], "src.common.modeling_task_specs.utils.early_stop.EarlyStopper": [[262, 2, 1, "", "__init__"], [262, 3, 1, "", "__weakref__"]], "src.common.modeling_task_specs.utils.parameter_loading": [[264, 1, 1, "", "ArgumentReader"]], "src.common.modeling_task_specs.utils.parameter_loading.ArgumentReader": [[264, 3, 1, "", "__weakref__"]], "src.common.modeling_task_specs.utils.profiler_wrapper": [[266, 1, 1, "", "TorchProfiler"]], "src.common.modeling_task_specs.utils.profiler_wrapper.TorchProfiler": [[266, 2, 1, "", "__init__"], [266, 3, 1, "", "__weakref__"]], "src.common.models": [[268, 0, 0, "-", "dgl"], [270, 0, 0, "-", "layers"], [282, 0, 0, "-", "pyg"], [304, 0, 0, "-", "utils"]], "src.common.models.dgl": [[269, 0, 0, "-", "homogenous"]], "src.common.models.layers": [[271, 0, 0, "-", "count_min_sketch"], [274, 0, 0, "-", "decoder"], [277, 0, 0, "-", "feature_interaction"], [280, 0, 0, "-", "normalization"]], "src.common.models.layers.count_min_sketch": [[272, 1, 1, "", "CountMinSketch"], [273, 4, 1, "", "calculate_in_batch_candidate_sampling_probability"]], "src.common.models.layers.count_min_sketch.CountMinSketch": [[272, 2, 1, "", "__init__"], [272, 3, 1, "", "__weakref__"], [272, 2, 1, "", "add"], [272, 2, 1, "", "add_torch_long_tensor"], [272, 2, 1, "", "estimate"], [272, 2, 1, "", "estimate_torch_long_tensor"], [272, 2, 1, "", "get_table"], [272, 2, 1, "", "total"]], "src.common.models.layers.decoder": [[275, 1, 1, "", "DecoderType"], [276, 1, 1, "", "LinkPredictionDecoder"]], "src.common.models.layers.decoder.LinkPredictionDecoder": [[276, 2, 1, "", "__call__"], [276, 2, 1, "", "__delattr__"], [276, 2, 1, "", "__dir__"], [276, 2, 1, "", "__init__"], [276, 2, 1, "", "__repr__"], [276, 2, 1, "", "__setattr__"], [276, 3, 1, "", "__weakref__"], [276, 2, 1, "", "add_module"], [276, 2, 1, "", "apply"], [276, 2, 1, "", "bfloat16"], [276, 2, 1, "", "buffers"], [276, 2, 1, "", "children"], [276, 2, 1, "", "compile"], [276, 2, 1, "", "cpu"], [276, 2, 1, "", "cuda"], [276, 2, 1, "", "double"], [276, 2, 1, "", "eval"], [276, 2, 1, "", "extra_repr"], [276, 2, 1, "", "float"], [276, 2, 1, "", "forward"], [276, 2, 1, "", "get_buffer"], [276, 2, 1, "", "get_extra_state"], [276, 2, 1, "", "get_parameter"], [276, 2, 1, "", "get_submodule"], [276, 2, 1, "", "half"], [276, 2, 1, "", "ipu"], [276, 2, 1, "", "load_state_dict"], [276, 2, 1, "", "modules"], [276, 2, 1, "", "named_buffers"], [276, 2, 1, "", "named_children"], [276, 2, 1, "", "named_modules"], [276, 2, 1, "", "named_parameters"], [276, 2, 1, "", "parameters"], [276, 2, 1, "", "register_backward_hook"], [276, 2, 1, "", "register_buffer"], [276, 2, 1, "", "register_forward_hook"], [276, 2, 1, "", "register_forward_pre_hook"], [276, 2, 1, "", "register_full_backward_hook"], [276, 2, 1, "", "register_full_backward_pre_hook"], [276, 2, 1, "", "register_load_state_dict_post_hook"], [276, 2, 1, "", "register_module"], [276, 2, 1, "", "register_parameter"], [276, 2, 1, "", "register_state_dict_pre_hook"], [276, 2, 1, "", "requires_grad_"], [276, 2, 1, "", "set_extra_state"], [276, 2, 1, "", "share_memory"], [276, 2, 1, "", "state_dict"], [276, 2, 1, "", "to"], [276, 2, 1, "", "to_empty"], [276, 2, 1, "", "train"], [276, 2, 1, "", "type"], [276, 2, 1, "", "xpu"], [276, 2, 1, "", "zero_grad"]], "src.common.models.layers.feature_interaction": [[278, 1, 1, "", "DCNCross"], [279, 1, 1, "", "DCNv2"]], "src.common.models.layers.feature_interaction.DCNCross": [[278, 2, 1, "", "__call__"], [278, 2, 1, "", "__delattr__"], [278, 2, 1, "", "__dir__"], [278, 2, 1, "", "__init__"], [278, 2, 1, "", "__repr__"], [278, 2, 1, "", "__setattr__"], [278, 3, 1, "", "__weakref__"], [278, 2, 1, "", "add_module"], [278, 2, 1, "", "apply"], [278, 2, 1, "", "bfloat16"], [278, 2, 1, "", "buffers"], [278, 2, 1, "", "children"], [278, 2, 1, "", "compile"], [278, 2, 1, "", "cpu"], [278, 2, 1, "", "cuda"], [278, 2, 1, "", "double"], [278, 2, 1, "", "eval"], [278, 2, 1, "", "extra_repr"], [278, 2, 1, "", "float"], [278, 2, 1, "", "forward"], [278, 2, 1, "", "get_buffer"], [278, 2, 1, "", "get_extra_state"], [278, 2, 1, "", "get_parameter"], [278, 2, 1, "", "get_submodule"], [278, 2, 1, "", "half"], [278, 2, 1, "", "ipu"], [278, 2, 1, "", "load_state_dict"], [278, 2, 1, "", "modules"], [278, 2, 1, "", "named_buffers"], [278, 2, 1, "", "named_children"], [278, 2, 1, "", "named_modules"], [278, 2, 1, "", "named_parameters"], [278, 2, 1, "", "parameters"], [278, 2, 1, "", "register_backward_hook"], [278, 2, 1, "", "register_buffer"], [278, 2, 1, "", "register_forward_hook"], [278, 2, 1, "", "register_forward_pre_hook"], [278, 2, 1, "", "register_full_backward_hook"], [278, 2, 1, "", "register_full_backward_pre_hook"], [278, 2, 1, "", "register_load_state_dict_post_hook"], [278, 2, 1, "", "register_module"], [278, 2, 1, "", "register_parameter"], [278, 2, 1, "", "register_state_dict_pre_hook"], [278, 2, 1, "", "requires_grad_"], [278, 2, 1, "", "set_extra_state"], [278, 2, 1, "", "share_memory"], [278, 2, 1, "", "state_dict"], [278, 2, 1, "", "to"], [278, 2, 1, "", "to_empty"], [278, 2, 1, "", "train"], [278, 2, 1, "", "type"], [278, 2, 1, "", "xpu"], [278, 2, 1, "", "zero_grad"]], "src.common.models.layers.feature_interaction.DCNv2": [[279, 2, 1, "", "__call__"], [279, 2, 1, "", "__delattr__"], [279, 2, 1, "", "__dir__"], [279, 2, 1, "", "__init__"], [279, 2, 1, "", "__repr__"], [279, 2, 1, "", "__setattr__"], [279, 3, 1, "", "__weakref__"], [279, 2, 1, "", "add_module"], [279, 2, 1, "", "apply"], [279, 2, 1, "", "bfloat16"], [279, 2, 1, "", "buffers"], [279, 2, 1, "", "children"], [279, 2, 1, "", "compile"], [279, 2, 1, "", "cpu"], [279, 2, 1, "", "cuda"], [279, 2, 1, "", "double"], [279, 2, 1, "", "eval"], [279, 2, 1, "", "extra_repr"], [279, 2, 1, "", "float"], [279, 2, 1, "", "forward"], [279, 2, 1, "", "get_buffer"], [279, 2, 1, "", "get_extra_state"], [279, 2, 1, "", "get_parameter"], [279, 2, 1, "", "get_submodule"], [279, 2, 1, "", "half"], [279, 2, 1, "", "ipu"], [279, 2, 1, "", "load_state_dict"], [279, 2, 1, "", "modules"], [279, 2, 1, "", "named_buffers"], [279, 2, 1, "", "named_children"], [279, 2, 1, "", "named_modules"], [279, 2, 1, "", "named_parameters"], [279, 2, 1, "", "parameters"], [279, 2, 1, "", "register_backward_hook"], [279, 2, 1, "", "register_buffer"], [279, 2, 1, "", "register_forward_hook"], [279, 2, 1, "", "register_forward_pre_hook"], [279, 2, 1, "", "register_full_backward_hook"], [279, 2, 1, "", "register_full_backward_pre_hook"], [279, 2, 1, "", "register_load_state_dict_post_hook"], [279, 2, 1, "", "register_module"], [279, 2, 1, "", "register_parameter"], [279, 2, 1, "", "register_state_dict_pre_hook"], [279, 2, 1, "", "requires_grad_"], [279, 2, 1, "", "set_extra_state"], [279, 2, 1, "", "share_memory"], [279, 2, 1, "", "state_dict"], [279, 2, 1, "", "to"], [279, 2, 1, "", "to_empty"], [279, 2, 1, "", "train"], [279, 2, 1, "", "type"], [279, 2, 1, "", "xpu"], [279, 2, 1, "", "zero_grad"]], "src.common.models.layers.normalization": [[281, 4, 1, "", "l2_normalize_embeddings"]], "src.common.models.pyg": [[283, 0, 0, "-", "heterogeneous"], [286, 0, 0, "-", "nn"], [302, 0, 0, "-", "utils"]], "src.common.models.pyg.heterogeneous": [[284, 1, 1, "", "HGT"], [285, 1, 1, "", "SimpleHGN"]], "src.common.models.pyg.heterogeneous.HGT": [[284, 2, 1, "", "__call__"], [284, 2, 1, "", "__delattr__"], [284, 2, 1, "", "__dir__"], [284, 2, 1, "", "__init__"], [284, 2, 1, "", "__repr__"], [284, 2, 1, "", "__setattr__"], [284, 3, 1, "", "__weakref__"], [284, 2, 1, "", "add_module"], [284, 2, 1, "", "apply"], [284, 2, 1, "", "bfloat16"], [284, 2, 1, "", "buffers"], [284, 2, 1, "", "children"], [284, 2, 1, "", "compile"], [284, 2, 1, "", "cpu"], [284, 2, 1, "", "cuda"], [284, 2, 1, "", "double"], [284, 2, 1, "", "eval"], [284, 2, 1, "", "extra_repr"], [284, 2, 1, "", "float"], [284, 2, 1, "", "forward"], [284, 2, 1, "", "get_buffer"], [284, 2, 1, "", "get_extra_state"], [284, 2, 1, "", "get_parameter"], [284, 2, 1, "", "get_submodule"], [284, 2, 1, "", "half"], [284, 2, 1, "", "ipu"], [284, 2, 1, "", "load_state_dict"], [284, 2, 1, "", "modules"], [284, 2, 1, "", "named_buffers"], [284, 2, 1, "", "named_children"], [284, 2, 1, "", "named_modules"], [284, 2, 1, "", "named_parameters"], [284, 2, 1, "", "parameters"], [284, 2, 1, "", "register_backward_hook"], [284, 2, 1, "", "register_buffer"], [284, 2, 1, "", "register_forward_hook"], [284, 2, 1, "", "register_forward_pre_hook"], [284, 2, 1, "", "register_full_backward_hook"], [284, 2, 1, "", "register_full_backward_pre_hook"], [284, 2, 1, "", "register_load_state_dict_post_hook"], [284, 2, 1, "", "register_module"], [284, 2, 1, "", "register_parameter"], [284, 2, 1, "", "register_state_dict_pre_hook"], [284, 2, 1, "", "requires_grad_"], [284, 2, 1, "", "set_extra_state"], [284, 2, 1, "", "share_memory"], [284, 2, 1, "", "state_dict"], [284, 2, 1, "", "to"], [284, 2, 1, "", "to_empty"], [284, 2, 1, "", "train"], [284, 2, 1, "", "type"], [284, 2, 1, "", "xpu"], [284, 2, 1, "", "zero_grad"]], "src.common.models.pyg.heterogeneous.SimpleHGN": [[285, 2, 1, "", "__call__"], [285, 2, 1, "", "__delattr__"], [285, 2, 1, "", "__dir__"], [285, 2, 1, "", "__init__"], [285, 2, 1, "", "__repr__"], [285, 2, 1, "", "__setattr__"], [285, 3, 1, "", "__weakref__"], [285, 2, 1, "", "add_module"], [285, 2, 1, "", "apply"], [285, 2, 1, "", "bfloat16"], [285, 2, 1, "", "buffers"], [285, 2, 1, "", "children"], [285, 2, 1, "", "compile"], [285, 2, 1, "", "cpu"], [285, 2, 1, "", "cuda"], [285, 2, 1, "", "double"], [285, 2, 1, "", "eval"], [285, 2, 1, "", "extra_repr"], [285, 2, 1, "", "float"], [285, 2, 1, "", "forward"], [285, 2, 1, "", "get_buffer"], [285, 2, 1, "", "get_extra_state"], [285, 2, 1, "", "get_parameter"], [285, 2, 1, "", "get_submodule"], [285, 2, 1, "", "half"], [285, 2, 1, "", "ipu"], [285, 2, 1, "", "load_state_dict"], [285, 2, 1, "", "modules"], [285, 2, 1, "", "named_buffers"], [285, 2, 1, "", "named_children"], [285, 2, 1, "", "named_modules"], [285, 2, 1, "", "named_parameters"], [285, 2, 1, "", "parameters"], [285, 2, 1, "", "register_backward_hook"], [285, 2, 1, "", "register_buffer"], [285, 2, 1, "", "register_forward_hook"], [285, 2, 1, "", "register_forward_pre_hook"], [285, 2, 1, "", "register_full_backward_hook"], [285, 2, 1, "", "register_full_backward_pre_hook"], [285, 2, 1, "", "register_load_state_dict_post_hook"], [285, 2, 1, "", "register_module"], [285, 2, 1, "", "register_parameter"], [285, 2, 1, "", "register_state_dict_pre_hook"], [285, 2, 1, "", "requires_grad_"], [285, 2, 1, "", "set_extra_state"], [285, 2, 1, "", "share_memory"], [285, 2, 1, "", "state_dict"], [285, 2, 1, "", "to"], [285, 2, 1, "", "to_empty"], [285, 2, 1, "", "train"], [285, 2, 1, "", "type"], [285, 2, 1, "", "xpu"], [285, 2, 1, "", "zero_grad"]], "src.common.models.pyg.nn": [[287, 0, 0, "-", "conv"], [296, 0, 0, "-", "models"]], "src.common.models.pyg.nn.conv": [[288, 0, 0, "-", "edge_attr_gat_conv"], [290, 0, 0, "-", "gin_conv"], [292, 0, 0, "-", "hgt_conv"], [294, 0, 0, "-", "simplehgn_conv"]], "src.common.models.pyg.nn.conv.edge_attr_gat_conv": [[289, 1, 1, "", "EdgeAttrGATConv"]], "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv": [[289, 2, 1, "", "__call__"], [289, 2, 1, "", "__delattr__"], [289, 2, 1, "", "__dir__"], [289, 2, 1, "", "__init__"], [289, 2, 1, "", "__repr__"], [289, 2, 1, "", "__setattr__"], [289, 3, 1, "", "__weakref__"], [289, 2, 1, "", "add_module"], [289, 2, 1, "", "aggregate"], [289, 2, 1, "", "apply"], [289, 2, 1, "", "bfloat16"], [289, 2, 1, "", "buffers"], [289, 2, 1, "", "children"], [289, 2, 1, "", "compile"], [289, 2, 1, "", "cpu"], [289, 2, 1, "", "cuda"], [289, 2, 1, "", "double"], [289, 2, 1, "", "edge_update"], [289, 2, 1, "", "edge_updater"], [289, 2, 1, "", "eval"], [289, 2, 1, "", "extra_repr"], [289, 2, 1, "", "float"], [289, 2, 1, "", "forward"], [289, 2, 1, "", "get_buffer"], [289, 2, 1, "", "get_extra_state"], [289, 2, 1, "", "get_parameter"], [289, 2, 1, "", "get_submodule"], [289, 2, 1, "", "half"], [289, 2, 1, "", "ipu"], [289, 2, 1, "", "jittable"], [289, 2, 1, "", "load_state_dict"], [289, 2, 1, "", "message"], [289, 2, 1, "", "message_and_aggregate"], [289, 2, 1, "", "modules"], [289, 2, 1, "", "named_buffers"], [289, 2, 1, "", "named_children"], [289, 2, 1, "", "named_modules"], [289, 2, 1, "", "named_parameters"], [289, 2, 1, "", "parameters"], [289, 2, 1, "", "propagate"], [289, 2, 1, "", "register_aggregate_forward_hook"], [289, 2, 1, "", "register_aggregate_forward_pre_hook"], [289, 2, 1, "", "register_backward_hook"], [289, 2, 1, "", "register_buffer"], [289, 2, 1, "", "register_edge_update_forward_hook"], [289, 2, 1, "", "register_edge_update_forward_pre_hook"], [289, 2, 1, "", "register_forward_hook"], [289, 2, 1, "", "register_forward_pre_hook"], [289, 2, 1, "", "register_full_backward_hook"], [289, 2, 1, "", "register_full_backward_pre_hook"], [289, 2, 1, "", "register_load_state_dict_post_hook"], [289, 2, 1, "", "register_message_and_aggregate_forward_hook"], [289, 2, 1, "", "register_message_and_aggregate_forward_pre_hook"], [289, 2, 1, "", "register_message_forward_hook"], [289, 2, 1, "", "register_message_forward_pre_hook"], [289, 2, 1, "", "register_module"], [289, 2, 1, "", "register_parameter"], [289, 2, 1, "", "register_propagate_forward_hook"], [289, 2, 1, "", "register_propagate_forward_pre_hook"], [289, 2, 1, "", "register_state_dict_pre_hook"], [289, 2, 1, "", "requires_grad_"], [289, 2, 1, "", "reset_parameters"], [289, 2, 1, "", "set_extra_state"], [289, 2, 1, "", "share_memory"], [289, 2, 1, "", "state_dict"], [289, 2, 1, "", "to"], [289, 2, 1, "", "to_empty"], [289, 2, 1, "", "train"], [289, 2, 1, "", "type"], [289, 2, 1, "", "update"], [289, 2, 1, "", "xpu"], [289, 2, 1, "", "zero_grad"]], "src.common.models.pyg.nn.conv.gin_conv": [[291, 1, 1, "", "GINEConv"]], "src.common.models.pyg.nn.conv.gin_conv.GINEConv": [[291, 2, 1, "", "__call__"], [291, 2, 1, "", "__delattr__"], [291, 2, 1, "", "__dir__"], [291, 2, 1, "", "__init__"], [291, 2, 1, "", "__repr__"], [291, 2, 1, "", "__setattr__"], [291, 3, 1, "", "__weakref__"], [291, 2, 1, "", "add_module"], [291, 2, 1, "", "aggregate"], [291, 2, 1, "", "apply"], [291, 2, 1, "", "bfloat16"], [291, 2, 1, "", "buffers"], [291, 2, 1, "", "children"], [291, 2, 1, "", "compile"], [291, 2, 1, "", "cpu"], [291, 2, 1, "", "cuda"], [291, 2, 1, "", "double"], [291, 2, 1, "", "edge_update"], [291, 2, 1, "", "edge_updater"], [291, 2, 1, "", "eval"], [291, 2, 1, "", "extra_repr"], [291, 2, 1, "", "float"], [291, 2, 1, "", "get_buffer"], [291, 2, 1, "", "get_extra_state"], [291, 2, 1, "", "get_parameter"], [291, 2, 1, "", "get_submodule"], [291, 2, 1, "", "half"], [291, 2, 1, "", "ipu"], [291, 2, 1, "", "jittable"], [291, 2, 1, "", "load_state_dict"], [291, 2, 1, "", "message"], [291, 2, 1, "", "message_and_aggregate"], [291, 2, 1, "", "modules"], [291, 2, 1, "", "named_buffers"], [291, 2, 1, "", "named_children"], [291, 2, 1, "", "named_modules"], [291, 2, 1, "", "named_parameters"], [291, 2, 1, "", "parameters"], [291, 2, 1, "", "propagate"], [291, 2, 1, "", "register_aggregate_forward_hook"], [291, 2, 1, "", "register_aggregate_forward_pre_hook"], [291, 2, 1, "", "register_backward_hook"], [291, 2, 1, "", "register_buffer"], [291, 2, 1, "", "register_edge_update_forward_hook"], [291, 2, 1, "", "register_edge_update_forward_pre_hook"], [291, 2, 1, "", "register_forward_hook"], [291, 2, 1, "", "register_forward_pre_hook"], [291, 2, 1, "", "register_full_backward_hook"], [291, 2, 1, "", "register_full_backward_pre_hook"], [291, 2, 1, "", "register_load_state_dict_post_hook"], [291, 2, 1, "", "register_message_and_aggregate_forward_hook"], [291, 2, 1, "", "register_message_and_aggregate_forward_pre_hook"], [291, 2, 1, "", "register_message_forward_hook"], [291, 2, 1, "", "register_message_forward_pre_hook"], [291, 2, 1, "", "register_module"], [291, 2, 1, "", "register_parameter"], [291, 2, 1, "", "register_propagate_forward_hook"], [291, 2, 1, "", "register_propagate_forward_pre_hook"], [291, 2, 1, "", "register_state_dict_pre_hook"], [291, 2, 1, "", "requires_grad_"], [291, 2, 1, "", "reset_parameters"], [291, 2, 1, "", "set_extra_state"], [291, 2, 1, "", "share_memory"], [291, 2, 1, "", "state_dict"], [291, 2, 1, "", "to"], [291, 2, 1, "", "to_empty"], [291, 2, 1, "", "train"], [291, 2, 1, "", "type"], [291, 2, 1, "", "update"], [291, 2, 1, "", "xpu"], [291, 2, 1, "", "zero_grad"]], "src.common.models.pyg.nn.conv.hgt_conv": [[293, 1, 1, "", "HGTConv"]], "src.common.models.pyg.nn.conv.hgt_conv.HGTConv": [[293, 2, 1, "", "__call__"], [293, 2, 1, "", "__delattr__"], [293, 2, 1, "", "__dir__"], [293, 2, 1, "", "__init__"], [293, 2, 1, "", "__repr__"], [293, 2, 1, "", "__setattr__"], [293, 3, 1, "", "__weakref__"], [293, 2, 1, "", "add_module"], [293, 2, 1, "", "aggregate"], [293, 2, 1, "", "apply"], [293, 2, 1, "", "bfloat16"], [293, 2, 1, "", "buffers"], [293, 2, 1, "", "children"], [293, 2, 1, "", "compile"], [293, 2, 1, "", "cpu"], [293, 2, 1, "", "cuda"], [293, 2, 1, "", "double"], [293, 2, 1, "", "edge_update"], [293, 2, 1, "", "edge_updater"], [293, 2, 1, "", "eval"], [293, 2, 1, "", "extra_repr"], [293, 2, 1, "", "float"], [293, 2, 1, "", "forward"], [293, 2, 1, "", "get_buffer"], [293, 2, 1, "", "get_extra_state"], [293, 2, 1, "", "get_parameter"], [293, 2, 1, "", "get_submodule"], [293, 2, 1, "", "half"], [293, 2, 1, "", "ipu"], [293, 2, 1, "", "jittable"], [293, 2, 1, "", "load_state_dict"], [293, 2, 1, "", "message"], [293, 2, 1, "", "message_and_aggregate"], [293, 2, 1, "", "modules"], [293, 2, 1, "", "named_buffers"], [293, 2, 1, "", "named_children"], [293, 2, 1, "", "named_modules"], [293, 2, 1, "", "named_parameters"], [293, 2, 1, "", "parameters"], [293, 2, 1, "", "propagate"], [293, 2, 1, "", "register_aggregate_forward_hook"], [293, 2, 1, "", "register_aggregate_forward_pre_hook"], [293, 2, 1, "", "register_backward_hook"], [293, 2, 1, "", "register_buffer"], [293, 2, 1, "", "register_edge_update_forward_hook"], [293, 2, 1, "", "register_edge_update_forward_pre_hook"], [293, 2, 1, "", "register_forward_hook"], [293, 2, 1, "", "register_forward_pre_hook"], [293, 2, 1, "", "register_full_backward_hook"], [293, 2, 1, "", "register_full_backward_pre_hook"], [293, 2, 1, "", "register_load_state_dict_post_hook"], [293, 2, 1, "", "register_message_and_aggregate_forward_hook"], [293, 2, 1, "", "register_message_and_aggregate_forward_pre_hook"], [293, 2, 1, "", "register_message_forward_hook"], [293, 2, 1, "", "register_message_forward_pre_hook"], [293, 2, 1, "", "register_module"], [293, 2, 1, "", "register_parameter"], [293, 2, 1, "", "register_propagate_forward_hook"], [293, 2, 1, "", "register_propagate_forward_pre_hook"], [293, 2, 1, "", "register_state_dict_pre_hook"], [293, 2, 1, "", "requires_grad_"], [293, 2, 1, "", "reset_parameters"], [293, 2, 1, "", "set_extra_state"], [293, 2, 1, "", "share_memory"], [293, 2, 1, "", "state_dict"], [293, 2, 1, "", "to"], [293, 2, 1, "", "to_empty"], [293, 2, 1, "", "train"], [293, 2, 1, "", "type"], [293, 2, 1, "", "update"], [293, 2, 1, "", "xpu"], [293, 2, 1, "", "zero_grad"]], "src.common.models.pyg.nn.conv.simplehgn_conv": [[295, 1, 1, "", "SimpleHGNConv"]], "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv": [[295, 2, 1, "", "__call__"], [295, 2, 1, "", "__delattr__"], [295, 2, 1, "", "__dir__"], [295, 2, 1, "", "__init__"], [295, 2, 1, "", "__repr__"], [295, 2, 1, "", "__setattr__"], [295, 3, 1, "", "__weakref__"], [295, 2, 1, "", "add_module"], [295, 2, 1, "", "aggregate"], [295, 2, 1, "", "apply"], [295, 2, 1, "", "bfloat16"], [295, 2, 1, "", "buffers"], [295, 2, 1, "", "children"], [295, 2, 1, "", "compile"], [295, 2, 1, "", "cpu"], [295, 2, 1, "", "cuda"], [295, 2, 1, "", "double"], [295, 2, 1, "", "edge_update"], [295, 2, 1, "", "edge_updater"], [295, 2, 1, "", "eval"], [295, 2, 1, "", "extra_repr"], [295, 2, 1, "", "float"], [295, 2, 1, "", "forward"], [295, 2, 1, "", "get_buffer"], [295, 2, 1, "", "get_extra_state"], [295, 2, 1, "", "get_parameter"], [295, 2, 1, "", "get_submodule"], [295, 2, 1, "", "half"], [295, 2, 1, "", "ipu"], [295, 2, 1, "", "jittable"], [295, 2, 1, "", "load_state_dict"], [295, 2, 1, "", "message"], [295, 2, 1, "", "message_and_aggregate"], [295, 2, 1, "", "modules"], [295, 2, 1, "", "named_buffers"], [295, 2, 1, "", "named_children"], [295, 2, 1, "", "named_modules"], [295, 2, 1, "", "named_parameters"], [295, 2, 1, "", "parameters"], [295, 2, 1, "", "propagate"], [295, 2, 1, "", "register_aggregate_forward_hook"], [295, 2, 1, "", "register_aggregate_forward_pre_hook"], [295, 2, 1, "", "register_backward_hook"], [295, 2, 1, "", "register_buffer"], [295, 2, 1, "", "register_edge_update_forward_hook"], [295, 2, 1, "", "register_edge_update_forward_pre_hook"], [295, 2, 1, "", "register_forward_hook"], [295, 2, 1, "", "register_forward_pre_hook"], [295, 2, 1, "", "register_full_backward_hook"], [295, 2, 1, "", "register_full_backward_pre_hook"], [295, 2, 1, "", "register_load_state_dict_post_hook"], [295, 2, 1, "", "register_message_and_aggregate_forward_hook"], [295, 2, 1, "", "register_message_and_aggregate_forward_pre_hook"], [295, 2, 1, "", "register_message_forward_hook"], [295, 2, 1, "", "register_message_forward_pre_hook"], [295, 2, 1, "", "register_module"], [295, 2, 1, "", "register_parameter"], [295, 2, 1, "", "register_propagate_forward_hook"], [295, 2, 1, "", "register_propagate_forward_pre_hook"], [295, 2, 1, "", "register_state_dict_pre_hook"], [295, 2, 1, "", "requires_grad_"], [295, 2, 1, "", "reset_parameters"], [295, 2, 1, "", "set_extra_state"], [295, 2, 1, "", "share_memory"], [295, 2, 1, "", "state_dict"], [295, 2, 1, "", "to"], [295, 2, 1, "", "to_empty"], [295, 2, 1, "", "train"], [295, 2, 1, "", "type"], [295, 2, 1, "", "update"], [295, 2, 1, "", "xpu"], [295, 2, 1, "", "zero_grad"]], "src.common.models.pyg.nn.models": [[297, 0, 0, "-", "feature_interaction"], [300, 0, 0, "-", "jumping_knowledge"]], "src.common.models.pyg.nn.models.feature_interaction": [[298, 1, 1, "", "CombinationMode"], [299, 1, 1, "", "FeatureInteraction"]], "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction": [[299, 2, 1, "", "__call__"], [299, 2, 1, "", "__delattr__"], [299, 2, 1, "", "__dir__"], [299, 2, 1, "", "__init__"], [299, 2, 1, "", "__repr__"], [299, 2, 1, "", "__setattr__"], [299, 3, 1, "", "__weakref__"], [299, 2, 1, "", "add_module"], [299, 2, 1, "", "apply"], [299, 2, 1, "", "bfloat16"], [299, 2, 1, "", "buffers"], [299, 2, 1, "", "children"], [299, 2, 1, "", "compile"], [299, 2, 1, "", "cpu"], [299, 2, 1, "", "cuda"], [299, 2, 1, "", "double"], [299, 2, 1, "", "eval"], [299, 2, 1, "", "extra_repr"], [299, 2, 1, "", "float"], [299, 2, 1, "", "forward"], [299, 2, 1, "", "get_buffer"], [299, 2, 1, "", "get_extra_state"], [299, 2, 1, "", "get_parameter"], [299, 2, 1, "", "get_submodule"], [299, 2, 1, "", "half"], [299, 2, 1, "", "ipu"], [299, 2, 1, "", "load_state_dict"], [299, 2, 1, "", "modules"], [299, 2, 1, "", "named_buffers"], [299, 2, 1, "", "named_children"], [299, 2, 1, "", "named_modules"], [299, 2, 1, "", "named_parameters"], [299, 2, 1, "", "parameters"], [299, 2, 1, "", "register_backward_hook"], [299, 2, 1, "", "register_buffer"], [299, 2, 1, "", "register_forward_hook"], [299, 2, 1, "", "register_forward_pre_hook"], [299, 2, 1, "", "register_full_backward_hook"], [299, 2, 1, "", "register_full_backward_pre_hook"], [299, 2, 1, "", "register_load_state_dict_post_hook"], [299, 2, 1, "", "register_module"], [299, 2, 1, "", "register_parameter"], [299, 2, 1, "", "register_state_dict_pre_hook"], [299, 2, 1, "", "requires_grad_"], [299, 2, 1, "", "set_extra_state"], [299, 2, 1, "", "share_memory"], [299, 2, 1, "", "state_dict"], [299, 2, 1, "", "to"], [299, 2, 1, "", "to_empty"], [299, 2, 1, "", "train"], [299, 2, 1, "", "type"], [299, 2, 1, "", "xpu"], [299, 2, 1, "", "zero_grad"]], "src.common.models.pyg.nn.models.jumping_knowledge": [[301, 1, 1, "", "JumpingKnowledge"]], "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge": [[301, 2, 1, "", "__call__"], [301, 2, 1, "", "__delattr__"], [301, 2, 1, "", "__dir__"], [301, 2, 1, "", "__init__"], [301, 2, 1, "", "__repr__"], [301, 2, 1, "", "__setattr__"], [301, 3, 1, "", "__weakref__"], [301, 2, 1, "", "add_module"], [301, 2, 1, "", "aggregate"], [301, 2, 1, "", "apply"], [301, 2, 1, "", "bfloat16"], [301, 2, 1, "", "buffers"], [301, 2, 1, "", "children"], [301, 2, 1, "", "compile"], [301, 2, 1, "", "cpu"], [301, 2, 1, "", "cuda"], [301, 2, 1, "", "double"], [301, 2, 1, "", "edge_update"], [301, 2, 1, "", "edge_updater"], [301, 2, 1, "", "eval"], [301, 2, 1, "", "extra_repr"], [301, 2, 1, "", "float"], [301, 2, 1, "", "forward"], [301, 2, 1, "", "get_buffer"], [301, 2, 1, "", "get_extra_state"], [301, 2, 1, "", "get_parameter"], [301, 2, 1, "", "get_submodule"], [301, 2, 1, "", "half"], [301, 2, 1, "", "ipu"], [301, 2, 1, "", "jittable"], [301, 2, 1, "", "load_state_dict"], [301, 2, 1, "", "message"], [301, 2, 1, "", "message_and_aggregate"], [301, 2, 1, "", "modules"], [301, 2, 1, "", "named_buffers"], [301, 2, 1, "", "named_children"], [301, 2, 1, "", "named_modules"], [301, 2, 1, "", "named_parameters"], [301, 2, 1, "", "parameters"], [301, 2, 1, "", "propagate"], [301, 2, 1, "", "register_aggregate_forward_hook"], [301, 2, 1, "", "register_aggregate_forward_pre_hook"], [301, 2, 1, "", "register_backward_hook"], [301, 2, 1, "", "register_buffer"], [301, 2, 1, "", "register_edge_update_forward_hook"], [301, 2, 1, "", "register_edge_update_forward_pre_hook"], [301, 2, 1, "", "register_forward_hook"], [301, 2, 1, "", "register_forward_pre_hook"], [301, 2, 1, "", "register_full_backward_hook"], [301, 2, 1, "", "register_full_backward_pre_hook"], [301, 2, 1, "", "register_load_state_dict_post_hook"], [301, 2, 1, "", "register_message_and_aggregate_forward_hook"], [301, 2, 1, "", "register_message_and_aggregate_forward_pre_hook"], [301, 2, 1, "", "register_message_forward_hook"], [301, 2, 1, "", "register_message_forward_pre_hook"], [301, 2, 1, "", "register_module"], [301, 2, 1, "", "register_parameter"], [301, 2, 1, "", "register_propagate_forward_hook"], [301, 2, 1, "", "register_propagate_forward_pre_hook"], [301, 2, 1, "", "register_state_dict_pre_hook"], [301, 2, 1, "", "requires_grad_"], [301, 2, 1, "", "reset_parameters"], [301, 2, 1, "", "set_extra_state"], [301, 2, 1, "", "share_memory"], [301, 2, 1, "", "state_dict"], [301, 2, 1, "", "to"], [301, 2, 1, "", "to_empty"], [301, 2, 1, "", "train"], [301, 2, 1, "", "type"], [301, 2, 1, "", "update"], [301, 2, 1, "", "xpu"], [301, 2, 1, "", "zero_grad"]], "src.common.models.pyg.utils": [[303, 4, 1, "", "filter_dict"]], "src.common.models.utils": [[305, 0, 0, "-", "torch"]], "src.common.models.utils.torch": [[306, 4, 1, "", "to_hetero_feat"]], "src.common.translators": [[308, 0, 0, "-", "gbml_protos_translator"], [310, 0, 0, "-", "model_eval_metrics_translator"]], "src.common.translators.gbml_protos_translator": [[309, 1, 1, "", "GbmlProtosTranslator"]], "src.common.translators.gbml_protos_translator.GbmlProtosTranslator": [[309, 3, 1, "", "__weakref__"], [309, 2, 1, "", "node_from_NodePb"]], "src.common.translators.model_eval_metrics_translator": [[311, 1, 1, "", "EvalMetricsCollectionTranslator"]], "src.common.translators.model_eval_metrics_translator.EvalMetricsCollectionTranslator": [[311, 3, 1, "", "__weakref__"]], "src.common.types": [[313, 0, 0, "-", "dataflow_job_options"], [315, 0, 0, "-", "dataset_split"], [317, 0, 0, "-", "exception"], [320, 0, 0, "-", "features"], [322, 0, 0, "-", "graph_data"], [327, 0, 0, "-", "model_eval_metrics"], [331, 0, 0, "-", "pb_wrappers"], [363, 0, 0, "-", "task_metadata"]], "src.common.types.dataflow_job_options": [[314, 1, 1, "", "CommonOptions"]], "src.common.types.dataflow_job_options.CommonOptions": [[314, 2, 1, "", "__dir__"], [314, 2, 1, "", "__init__"], [314, 2, 1, "", "__setattr__"], [314, 2, 1, "", "__str__"], [314, 3, 1, "", "__weakref__"], [314, 2, 1, "", "display_data"], [314, 2, 1, "", "from_dictionary"], [314, 2, 1, "", "get_all_options"], [314, 2, 1, "", "view_as"]], "src.common.types.dataset_split": [[316, 1, 1, "", "DatasetSplit"]], "src.common.types.exception": [[318, 6, 1, "", "SubgraphSamplingValidationError"], [319, 1, 1, "", "SubgraphSamplingValidationErrorType"]], "src.common.types.features": [[321, 1, 1, "", "FeatureTypes"]], "src.common.types.graph_data": [[323, 1, 1, "", "Edge"], [324, 1, 1, "", "EdgeType"], [325, 1, 1, "", "EdgeUsageType"], [326, 1, 1, "", "Node"]], "src.common.types.graph_data.Edge": [[323, 2, 1, "", "__delattr__"], [323, 2, 1, "", "__eq__"], [323, 2, 1, "", "__hash__"], [323, 2, 1, "", "__init__"], [323, 2, 1, "", "__repr__"], [323, 2, 1, "", "__setattr__"], [323, 3, 1, "", "__weakref__"]], "src.common.types.graph_data.EdgeType": [[324, 2, 1, "", "__add__"], [324, 2, 1, "", "__class_getitem__"], [324, 2, 1, "", "__contains__"], [324, 2, 1, "", "__eq__"], [324, 2, 1, "", "__ge__"], [324, 2, 1, "", "__getattribute__"], [324, 2, 1, "", "__getitem__"], [324, 2, 1, "", "__getnewargs__"], [324, 2, 1, "", "__gt__"], [324, 2, 1, "", "__hash__"], [324, 2, 1, "", "__iter__"], [324, 2, 1, "", "__le__"], [324, 2, 1, "", "__len__"], [324, 2, 1, "", "__lt__"], [324, 2, 1, "", "__mul__"], [324, 2, 1, "", "__ne__"], [324, 2, 1, "", "__new__"], [324, 2, 1, "", "__repr__"], [324, 2, 1, "", "__rmul__"], [324, 2, 1, "", "count"], [324, 3, 1, "", "dst_node_type"], [324, 2, 1, "", "index"], [324, 3, 1, "", "relation"], [324, 3, 1, "", "src_node_type"]], "src.common.types.graph_data.EdgeUsageType": [[325, 3, 1, "", "__weakref__"]], "src.common.types.graph_data.Node": [[326, 2, 1, "", "__delattr__"], [326, 2, 1, "", "__eq__"], [326, 2, 1, "", "__gt__"], [326, 2, 1, "", "__hash__"], [326, 2, 1, "", "__init__"], [326, 2, 1, "", "__lt__"], [326, 2, 1, "", "__repr__"], [326, 2, 1, "", "__setattr__"], [326, 3, 1, "", "__weakref__"]], "src.common.types.model_eval_metrics": [[328, 1, 1, "", "EvalMetric"], [329, 1, 1, "", "EvalMetricType"], [330, 1, 1, "", "EvalMetricsCollection"]], "src.common.types.model_eval_metrics.EvalMetric": [[328, 2, 1, "", "__eq__"], [328, 3, 1, "", "__hash__"], [328, 2, 1, "", "__init__"], [328, 2, 1, "", "__repr__"], [328, 3, 1, "", "__weakref__"]], "src.common.types.model_eval_metrics.EvalMetricsCollection": [[330, 2, 1, "", "__init__"], [330, 2, 1, "", "__repr__"], [330, 3, 1, "", "__weakref__"]], "src.common.types.pb_wrappers": [[332, 0, 0, "-", "dataset_metadata"], [334, 0, 0, "-", "flattened_graph_metadata"], [336, 0, 0, "-", "gigl_resource_config"], [338, 0, 0, "-", "graph_data_types"], [342, 0, 0, "-", "graph_data_types_utils"], [344, 0, 0, "-", "graph_metadata"], [346, 0, 0, "-", "sampling_op"], [353, 0, 0, "-", "subgraph_sampling_strategy"], [358, 0, 0, "-", "task_metadata"], [360, 0, 0, "-", "trained_model_metadata"], [362, 0, 0, "-", "types"]], "src.common.types.pb_wrappers.dataset_metadata": [[333, 1, 1, "", "DatasetMetadataPbWrapper"]], "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper": [[333, 2, 1, "", "__delattr__"], [333, 2, 1, "", "__eq__"], [333, 2, 1, "", "__hash__"], [333, 2, 1, "", "__init__"], [333, 2, 1, "", "__repr__"], [333, 2, 1, "", "__setattr__"], [333, 3, 1, "", "__weakref__"], [333, 2, 1, "", "get_output_paths"], [333, 5, 1, "", "output_metadata"], [333, 5, 1, "", "output_metadata_type"], [333, 5, 1, "", "training_sample_type"]], "src.common.types.pb_wrappers.flattened_graph_metadata": [[335, 1, 1, "", "FlattenedGraphMetadataPbWrapper"]], "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper": [[335, 2, 1, "", "__eq__"], [335, 3, 1, "", "__hash__"], [335, 2, 1, "", "__init__"], [335, 2, 1, "", "__repr__"], [335, 3, 1, "", "__weakref__"], [335, 5, 1, "", "dataset_type"], [335, 2, 1, "", "get_output_paths"], [335, 5, 1, "", "output_metadata"], [335, 5, 1, "", "output_metadata_type"], [335, 5, 1, "", "training_sample_type"]], "src.common.types.pb_wrappers.gigl_resource_config": [[337, 1, 1, "", "GiglResourceConfigWrapper"]], "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper": [[337, 2, 1, "", "__eq__"], [337, 3, 1, "", "__hash__"], [337, 2, 1, "", "__init__"], [337, 2, 1, "", "__repr__"], [337, 3, 1, "", "__weakref__"], [337, 5, 1, "", "dataflow_runner"], [337, 5, 1, "", "embedding_bq_dataset_name"], [337, 2, 1, "", "get_resource_labels"], [337, 5, 1, "", "inferencer_config"], [337, 5, 1, "", "perm_assets_bucket_path"], [337, 5, 1, "", "preprocessor_config"], [337, 5, 1, "", "project"], [337, 5, 1, "", "region"], [337, 5, 1, "", "service_account_email"], [337, 5, 1, "", "split_generator_config"], [337, 5, 1, "", "subgraph_sampler_config"], [337, 5, 1, "", "temp_assets_bq_dataset_name"], [337, 5, 1, "", "temp_assets_bucket_path"], [337, 5, 1, "", "temp_assets_regional_bucket_path"], [337, 5, 1, "", "trainer_config"]], "src.common.types.pb_wrappers.graph_data_types": [[339, 1, 1, "", "EdgePbWrapper"], [340, 1, 1, "", "GraphPbWrapper"], [341, 1, 1, "", "NodePbWrapper"]], "src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper": [[339, 2, 1, "", "__delattr__"], [339, 2, 1, "", "__eq__"], [339, 2, 1, "", "__hash__"], [339, 2, 1, "", "__init__"], [339, 2, 1, "", "__repr__"], [339, 2, 1, "", "__setattr__"], [339, 3, 1, "", "__weakref__"]], "src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper": [[340, 2, 1, "", "__delattr__"], [340, 2, 1, "", "__eq__"], [340, 2, 1, "", "__hash__"], [340, 2, 1, "", "__init__"], [340, 2, 1, "", "__repr__"], [340, 2, 1, "", "__setattr__"], [340, 3, 1, "", "__weakref__"], [340, 2, 1, "", "hydrate_subgraph_features"]], "src.common.types.pb_wrappers.graph_data_types.NodePbWrapper": [[341, 2, 1, "", "__delattr__"], [341, 2, 1, "", "__eq__"], [341, 2, 1, "", "__hash__"], [341, 2, 1, "", "__init__"], [341, 2, 1, "", "__repr__"], [341, 2, 1, "", "__setattr__"], [341, 3, 1, "", "__weakref__"]], "src.common.types.pb_wrappers.graph_data_types_utils": [[343, 4, 1, "", "get_dehydrated_node_pb_wrappers_from_edge_wrapper"]], "src.common.types.pb_wrappers.graph_metadata": [[345, 1, 1, "", "GraphMetadataPbWrapper"]], "src.common.types.pb_wrappers.graph_metadata.GraphMetadataPbWrapper": [[345, 2, 1, "", "__eq__"], [345, 2, 1, "", "__hash__"], [345, 2, 1, "", "__init__"], [345, 2, 1, "", "__repr__"], [345, 3, 1, "", "__weakref__"], [345, 5, 1, "", "condensed_edge_type_to_condensed_node_types"]], "src.common.types.pb_wrappers.sampling_op": [[347, 1, 1, "", "RandomUniformPbWrapper"], [348, 1, 1, "", "RandomWeightedPbWrapper"], [349, 1, 1, "", "SamplingDirectionEnumType"], [350, 1, 1, "", "SamplingOpPbWrapper"], [351, 1, 1, "", "TopKPbWrapper"], [352, 1, 1, "", "UserDefinedPbWrapper"]], "src.common.types.pb_wrappers.sampling_op.RandomUniformPbWrapper": [[347, 2, 1, "", "__eq__"], [347, 3, 1, "", "__hash__"], [347, 2, 1, "", "__init__"], [347, 2, 1, "", "__repr__"], [347, 3, 1, "", "__weakref__"]], "src.common.types.pb_wrappers.sampling_op.RandomWeightedPbWrapper": [[348, 2, 1, "", "__eq__"], [348, 3, 1, "", "__hash__"], [348, 2, 1, "", "__init__"], [348, 2, 1, "", "__repr__"], [348, 3, 1, "", "__weakref__"]], "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper": [[350, 2, 1, "", "__eq__"], [350, 2, 1, "", "__hash__"], [350, 2, 1, "", "__init__"], [350, 2, 1, "", "__reduce__"], [350, 2, 1, "", "__repr__"], [350, 3, 1, "", "__weakref__"], [350, 2, 1, "", "add_child_sampling_op_pb_wrapper"], [350, 2, 1, "", "add_parent_sampling_op_pb_wrapper"], [350, 2, 1, "", "check_if_dag_contains_cycles"], [350, 2, 1, "", "check_sampling_op_edge_type_validity"], [350, 5, 1, "", "child_sampling_op_pb_wrappers"], [350, 5, 1, "", "parent_sampling_op_pb_wrappers"]], "src.common.types.pb_wrappers.sampling_op.TopKPbWrapper": [[351, 2, 1, "", "__eq__"], [351, 3, 1, "", "__hash__"], [351, 2, 1, "", "__init__"], [351, 2, 1, "", "__repr__"], [351, 3, 1, "", "__weakref__"]], "src.common.types.pb_wrappers.sampling_op.UserDefinedPbWrapper": [[352, 2, 1, "", "__eq__"], [352, 3, 1, "", "__hash__"], [352, 2, 1, "", "__init__"], [352, 2, 1, "", "__repr__"], [352, 3, 1, "", "__weakref__"]], "src.common.types.pb_wrappers.subgraph_sampling_strategy": [[354, 1, 1, "", "GlobalRandomUniformStrategyPbWrapper"], [355, 1, 1, "", "MessagePassingPathPbWrapper"], [356, 1, 1, "", "MessagePassingPathStrategyPbWrapper"], [357, 1, 1, "", "SubgraphSamplingStrategyPbWrapper"]], "src.common.types.pb_wrappers.subgraph_sampling_strategy.GlobalRandomUniformStrategyPbWrapper": [[354, 2, 1, "", "__eq__"], [354, 3, 1, "", "__hash__"], [354, 2, 1, "", "__init__"], [354, 2, 1, "", "__repr__"], [354, 3, 1, "", "__weakref__"]], "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathPbWrapper": [[355, 2, 1, "", "__eq__"], [355, 3, 1, "", "__hash__"], [355, 2, 1, "", "__init__"], [355, 2, 1, "", "__post_init__"], [355, 2, 1, "", "__repr__"], [355, 3, 1, "", "__weakref__"]], "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathStrategyPbWrapper": [[356, 2, 1, "", "__eq__"], [356, 3, 1, "", "__hash__"], [356, 2, 1, "", "__init__"], [356, 2, 1, "", "__repr__"], [356, 3, 1, "", "__weakref__"]], "src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper": [[357, 2, 1, "", "__eq__"], [357, 3, 1, "", "__hash__"], [357, 2, 1, "", "__init__"], [357, 2, 1, "", "__repr__"], [357, 3, 1, "", "__weakref__"], [357, 5, 1, "", "root_node_type_to_message_passing_path_pb_wrapper"], [357, 2, 1, "", "validate_dags"]], "src.common.types.pb_wrappers.task_metadata": [[359, 1, 1, "", "TaskMetadataPbWrapper"]], "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper": [[359, 2, 1, "", "__eq__"], [359, 3, 1, "", "__hash__"], [359, 2, 1, "", "__init__"], [359, 2, 1, "", "__repr__"], [359, 3, 1, "", "__weakref__"], [359, 2, 1, "", "get_supervision_edge_node_types"], [359, 2, 1, "", "get_supervision_edge_types"], [359, 2, 1, "", "get_supervision_node_types"], [359, 2, 1, "", "get_task_root_node_types"], [359, 5, 1, "", "task_metadata"], [359, 5, 1, "", "task_metadata_type"]], "src.common.types.pb_wrappers.trained_model_metadata": [[361, 1, 1, "", "TrainedModelMetadataPbWrapper"]], "src.common.types.pb_wrappers.trained_model_metadata.TrainedModelMetadataPbWrapper": [[361, 2, 1, "", "__eq__"], [361, 3, 1, "", "__hash__"], [361, 2, 1, "", "__init__"], [361, 2, 1, "", "__repr__"], [361, 3, 1, "", "__weakref__"]], "src.common.types.task_metadata": [[364, 1, 1, "", "TaskMetadataType"]], "src.common.types.task_metadata.TaskMetadataType": [[364, 3, 1, "", "__weakref__"]], "src.common.utils": [[366, 0, 0, "-", "bq"], [368, 0, 0, "-", "data"], [371, 0, 0, "-", "dataflow"], [374, 0, 0, "-", "eval_metrics"], [377, 0, 0, "-", "file_loader"], [379, 0, 0, "-", "gbml_protos"], [381, 0, 0, "-", "metrics_service_provider"], [385, 0, 0, "-", "model"], [390, 0, 0, "-", "scheduler"], [392, 0, 0, "-", "spark_job_manager"], [395, 0, 0, "-", "time"], [402, 0, 0, "-", "timeout"]], "src.common.utils.bq": [[367, 1, 1, "", "BqUtils"]], "src.common.utils.bq.BqUtils": [[367, 2, 1, "", "__init__"], [367, 3, 1, "", "__weakref__"], [367, 2, 1, "", "delete_bq_table_if_exist"], [367, 2, 1, "", "fetch_bq_table_schema"], [367, 2, 1, "", "format_bq_path"], [367, 2, 1, "", "get_table_names_within_date_range"], [367, 2, 1, "", "load_file_to_bq"], [367, 2, 1, "", "update_bq_dataset_retention"], [367, 2, 1, "", "update_bq_table_retention"]], "src.common.utils.data": [[369, 0, 0, "-", "feature_serialization"]], "src.common.utils.data.feature_serialization": [[370, 1, 1, "", "FeatureSerializationUtils"]], "src.common.utils.data.feature_serialization.FeatureSerializationUtils": [[370, 3, 1, "", "__weakref__"]], "src.common.utils.dataflow": [[372, 4, 1, "", "get_sanitized_dataflow_job_name"], [373, 4, 1, "", "init_beam_pipeline_options"]], "src.common.utils.eval_metrics": [[375, 4, 1, "", "hit_rate_at_k"], [376, 4, 1, "", "mean_reciprocal_rank"]], "src.common.utils.file_loader": [[378, 1, 1, "", "FileLoader"]], "src.common.utils.file_loader.FileLoader": [[378, 2, 1, "", "__init__"], [378, 3, 1, "", "__weakref__"], [378, 2, 1, "", "delete_files"], [378, 2, 1, "", "does_uri_exist"], [378, 2, 1, "", "list_children"]], "src.common.utils.gbml_protos": [[380, 1, 1, "", "TrainingSamplesSchemaProtoUtils"]], "src.common.utils.gbml_protos.TrainingSamplesSchemaProtoUtils": [[380, 3, 1, "", "__weakref__"]], "src.common.utils.metrics_service_provider": [[382, 4, 1, "", "get_metrics_service_instance"], [383, 4, 1, "", "init_metrics_publisher_grouping_for_job"], [384, 4, 1, "", "initialize_metrics"]], "src.common.utils.model": [[386, 4, 1, "", "load_scripted_model_from_uri"], [387, 4, 1, "", "load_state_dict_from_uri"], [388, 4, 1, "", "save_scripted_model"], [389, 4, 1, "", "save_state_dict"]], "src.common.utils.scheduler": [[391, 1, 1, "", "CosineDecayScheduler"]], "src.common.utils.scheduler.CosineDecayScheduler": [[391, 2, 1, "", "__init__"], [391, 3, 1, "", "__weakref__"]], "src.common.utils.spark_job_manager": [[393, 1, 1, "", "DataprocClusterInitData"], [394, 1, 1, "", "SparkJobManager"]], "src.common.utils.spark_job_manager.DataprocClusterInitData": [[393, 2, 1, "", "__eq__"], [393, 3, 1, "", "__hash__"], [393, 2, 1, "", "__init__"], [393, 2, 1, "", "__repr__"], [393, 3, 1, "", "__weakref__"]], "src.common.utils.spark_job_manager.SparkJobManager": [[394, 2, 1, "", "__init__"], [394, 3, 1, "", "__weakref__"]], "src.common.utils.time": [[396, 4, 1, "", "convert_days_to_ms"], [397, 4, 1, "", "current_datetime"], [398, 4, 1, "", "current_formatted_datetime"], [399, 4, 1, "", "format_datetime"], [400, 4, 1, "", "is_datetime_str_format_valid"], [401, 4, 1, "", "parse_formatted_datetime"]], "src.common.utils.timeout": [[403, 6, 1, "", "TimedOutException"], [404, 4, 1, "", "timeout"]], "src.config_populator": [[406, 0, 0, "-", "config_populator"]], "src.config_populator.config_populator": [[407, 1, 1, "", "ConfigPopulator"]], "src.config_populator.config_populator.ConfigPopulator": [[407, 2, 1, "", "__init__"], [407, 3, 1, "", "__weakref__"]], "src.data_preprocessor": [[409, 0, 0, "-", "lib"]], "src.data_preprocessor.lib": [[410, 0, 0, "-", "enumerate"], [412, 0, 0, "-", "ingest"], [413, 0, 0, "-", "transform"]], "src.data_preprocessor.lib.enumerate": [[411, 0, 0, "-", "queries"]], "src.inference": [[415, 0, 0, "-", "v1"], [422, 0, 0, "-", "v2"]], "src.inference.v1": [[416, 0, 0, "-", "lib"]], "src.inference.v1.lib": [[417, 0, 0, "-", "inference_output_schema"], [420, 0, 0, "-", "queries"], [421, 0, 0, "-", "transforms"]], "src.inference.v1.lib.inference_output_schema": [[418, 1, 1, "", "InferenceOutputBigqueryTableSchema"], [419, 1, 1, "", "InferenceOutputBigqueryTableSchemaBuilder"]], "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema": [[418, 2, 1, "", "__add__"], [418, 2, 1, "", "__class_getitem__"], [418, 2, 1, "", "__contains__"], [418, 2, 1, "", "__eq__"], [418, 2, 1, "", "__ge__"], [418, 2, 1, "", "__getattribute__"], [418, 2, 1, "", "__getitem__"], [418, 2, 1, "", "__getnewargs__"], [418, 2, 1, "", "__gt__"], [418, 2, 1, "", "__hash__"], [418, 2, 1, "", "__iter__"], [418, 2, 1, "", "__le__"], [418, 2, 1, "", "__len__"], [418, 2, 1, "", "__lt__"], [418, 2, 1, "", "__mul__"], [418, 2, 1, "", "__ne__"], [418, 2, 1, "", "__new__"], [418, 2, 1, "", "__repr__"], [418, 2, 1, "", "__rmul__"], [418, 2, 1, "", "count"], [418, 2, 1, "", "index"], [418, 3, 1, "", "node_field"], [418, 3, 1, "", "schema"]], "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchemaBuilder": [[419, 2, 1, "", "__init__"], [419, 3, 1, "", "__weakref__"]], "src.post_process": [[424, 0, 0, "-", "lib"], [427, 0, 0, "-", "utils"]], "src.post_process.lib": [[425, 0, 0, "-", "base_post_processor"]], "src.post_process.lib.base_post_processor": [[426, 1, 1, "", "BasePostProcessor"]], "src.post_process.lib.base_post_processor.BasePostProcessor": [[426, 3, 1, "", "__weakref__"]], "src.post_process.utils": [[428, 0, 0, "-", "component_runtime"], [431, 0, 0, "-", "cosine_similarity"]], "src.post_process.utils.component_runtime": [[429, 4, 1, "", "assert_component_runtimes_match_expected_parameters"], [430, 4, 1, "", "get_runtime_manifest_from_kfp_pipeline"]], "src.post_process.utils.cosine_similarity": [[432, 4, 1, "", "assert_cosine_similarity_stats"], [433, 4, 1, "", "calculate_cosine_sim_between_embedding_tables"], [434, 4, 1, "", "calculate_cosine_similarity_stats"], [435, 4, 1, "", "get_table_paths_via_timedelta"]], "src.subgraph_sampler": [[438, 0, 0, "-", "lib"]], "src.training": [[440, 0, 0, "-", "v1"], [448, 0, 0, "-", "v2"]], "src.training.v1": [[441, 0, 0, "-", "lib"]], "src.training.v1.lib": [[442, 0, 0, "-", "data_loaders"], [446, 0, 0, "-", "eval_metrics"]], "src.training.v1.lib.data_loaders": [[443, 0, 0, "-", "common"]], "src.training.v1.lib.data_loaders.common": [[444, 1, 1, "", "DataloaderConfig"], [445, 1, 1, "", "DataloaderTypes"]], "src.training.v1.lib.data_loaders.common.DataloaderConfig": [[444, 2, 1, "", "__eq__"], [444, 3, 1, "", "__hash__"], [444, 2, 1, "", "__init__"], [444, 2, 1, "", "__repr__"], [444, 3, 1, "", "__weakref__"]], "src.training.v1.lib.eval_metrics": [[447, 4, 1, "", "get_metric_name_for_gauge_model_metrics_hit_rate_at"]], "src.validation_check": [[450, 0, 0, "-", "libs"]], "src.validation_check.libs": [[451, 0, 0, "-", "resource_config_checks"], [458, 0, 0, "-", "utils"]], "src.validation_check.libs.resource_config_checks": [[452, 4, 1, "", "check_if_inferencer_resource_config_valid"], [453, 4, 1, "", "check_if_preprocessor_resource_config_valid"], [454, 4, 1, "", "check_if_shared_resource_config_valid"], [455, 4, 1, "", "check_if_split_generator_resource_config_valid"], [456, 4, 1, "", "check_if_subgraph_sampler_resource_config_valid"], [457, 4, 1, "", "check_if_trainer_resource_config_valid"]], "src.validation_check.libs.utils": [[459, 4, 1, "", "assert_proto_field_value_is_truthy"], [460, 4, 1, "", "assert_proto_has_field"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"config": [0, 464, 465, 474, 475], "popul": 0, "input": [0, 1, 2, 3, 4, 5], "what": [0, 1, 2, 3, 4, 5, 477], "doe": [0, 1, 2, 3, 4, 5, 477], "do": [0, 1, 2, 3, 4, 5], "how": [0, 1, 2, 3, 4, 5, 477], "i": [0, 1, 2, 3, 4, 5, 6, 477], "run": [0, 1, 2, 3, 4, 5, 474], "output": [0, 1, 2, 3, 4, 5], "other": [0, 1, 2, 3, 4, 5], "data": [1, 16, 17, 18, 19, 368, 369, 370, 467], "preprocessor": [1, 467], "custom": [1, 2, 3, 5, 475], "usag": [1, 2, 3, 5, 6, 473, 474], "model": [2, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 385, 468], "infer": [2, 414, 415, 416, 417, 418, 419, 420, 421, 422], "split": 3, "gener": 3, "subgraph": 4, "sampler": 4, "extend": 4, "busi": 4, "logic": 4, "trainer": [5, 473], "torch": [5, 305], "profil": 5, "monitor": 5, "log": 5, "paramet": 5, "background": 5, "distribut": [5, 474], "train": [5, 249, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "thi": 6, "repo": 6, "bit": 6, "dusti": 6, "while": 6, "we": 6, "prepar": 6, "oss": 6, "launch": 6, "have": 6, "work": [6, 477], "order": 6, "come": 6, "soon": 6, "kei": 6, "featur": [6, 320], "gigl": [6, 473, 474, 476, 477], "compon": [6, 166, 473, 476], "instal": [6, 472, 474], "configur": 6, "1": [6, 469], "import": [6, 473], "2": [6, 470], "command": 6, "line": 6, "execut": 6, "3": 6, "kubeflow": [6, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 473], "pipelin": [6, 474], "orchestr": [6, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 473], "test": 6, "unit": 6, "local": [6, 473, 474], "integr": 6, "cloud": [6, 471, 474], "end": [6, 474], "contribut": [6, 466, 475], "addit": 6, "resourc": [6, 152, 464], "licens": 6, "indic": 6, "tabl": 6, "common": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 443], "beam": 8, "collect": [9, 10, 11, 12, 13, 14, 15], "frozen_dict": 10, "frozendict": 11, "itertool": 12, "batch": 13, "sorted_dict": 14, "sorteddict": 15, "export": 17, "embeddingexport": 18, "load_embeddings_to_bigqueri": 19, "env_config": 20, "get_available_cpu": 21, "logger": [22, 23], "metric": [24, 25, 26, 27, 28, 29, 30, 31, 32, 234], "base_metr": 25, "nopmetricspublish": 26, "decor": 27, "timerrecordgranular": 28, "flushes_metr": 29, "profileit": 30, "metrics_interfac": 31, "opsmetricpublish": 32, "servic": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "dataproc": 34, "dataprocservic": 35, "gcp_cloud_log": 36, "gcpcloudloggingservic": 37, "logentri": 38, "kfp": [39, 86], "kfpservic": 40, "vertex_ai": 41, "vertexaiservic": 42, "vertexaijobconfig": 43, "type": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "resource_config": [45, 235], "commonpipelinecomponentconfig": 46, "uri": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "gcs_uri": 48, "gcsuri": 49, "http_uri": 50, "httpuri": 51, "local_uri": 52, "localuri": 53, "uri_factori": 56, "urifactori": 57, "wrapper": [58, 59, 60, 61, 62, 63], "argo_workflow_manifest": 59, "argoworkflowmanifestwrapp": 60, "argoworkflownodestatu": 61, "kfp_api": 62, "apirundetailwrapp": 63, "util": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 147, 148, 149, 150, 151, 152, 153, 260, 261, 262, 263, 264, 265, 266, 302, 304, 305, 306, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 427, 428, 429, 430, 431, 432, 433, 434, 435, 458], "comput": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "random": 66, "make_compute_deterministic_and_set_se": 67, "serial": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "coder": 69, "coderprotocol": 70, "serialize_np": 71, "encodedndarrai": 72, "numpycod": 73, "serialize_proto": 74, "edgepbwrappercod": 75, "graphpbwrappercod": 76, "nodepbwrappercod": 77, "serialize_str": 78, "stringcod": 79, "dataflow": [80, 371], "get_console_uri_from_pipeline_result": 81, "func_tool": 82, "lru_cach": 83, "gc": [84, 168], "gcsutil": 85, "kfpoutputview": 87, "local_f": [88, 220], "filesystement": 89, "append_line_to_fil": 90, "copy_fil": 91, "count_files_with_uri_prefix": 92, "create_empty_file_if_none_exist": 93, "create_file_symlink": 94, "delete_and_create_local_path": 95, "delete_local_directori": 96, "does_path_exist": 97, "list_at_path": 98, "remove_file_if_exist": 99, "remove_file_or_folder_if_exist": 100, "remove_folder_if_exist": 101, "remove_line_from_fil": 102, "os_util": 103, "import_obj": 104, "num_lines_in_fil": 105, "run_command_and_stream_stdout": 106, "proto_util": 107, "protoutil": 108, "retri": [109, 111], "retriesfailedexcept": 110, "test_util": 112, "testarg": 113, "parse_arg": 114, "run_test": 115, "torch_train": 116, "get_distributed_backend": 117, "get_rank": 118, "get_world_s": 119, "is_distributed_available_and_initi": 120, "is_distributed_local_debug": 121, "should_distribut": 122, "env": [123, 124, 125, 126, 127, 128, 129, 130, 131], "dep_const": 124, "get_compiled_jar_path": 125, "get_current_jar_fil": 126, "get_jar_file_uri": 127, "get_local_jar_directori": 128, "pipelines_config": 129, "get_resource_config": 130, "is_resource_config_load": 131, "kfp_orchestr": 134, "kfpenvmetadata": 135, "kfporchestr": 136, "kfp_pipelin": 137, "create_config_populator_task_op": 138, "create_data_preprocessor_task_op": 139, "create_inferencer_task_op": 140, "create_post_processor_task_op": 141, "create_split_generator_task_op": 142, "create_subgraph_sampler_task_op": 143, "create_trainer_task_op": 144, "generate_component_task": 145, "generate_pipelin": 146, "glt_backend": 148, "check_glt_backend_eligibility_compon": 149, "log_metr": 150, "log_eval_metrics_to_ui": 151, "add_task_resource_requir": 153, "src": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "applied_task": [155, 156, 157, 158, 159], "test_task": [156, 157, 158, 159], "academ": 157, "get_pyg_cora_dataset": 158, "log_stats_for_pyg_planetoid_dataset": 159, "constant": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249], "bq": [162, 366], "get_embeddings_dataset_bq_path": 163, "get_embeddings_t": 164, "get_predictions_t": 165, "giglcompon": 167, "get_applied_task_perm_gcs_path": 169, "get_applied_task_temp_gcs_path": 170, "get_applied_task_temp_regional_gcs_path": 171, "get_config_populator_assets_perm_gcs_path": 172, "get_data_preprocessor_assets_perm_gcs_path": 173, "get_data_preprocessor_assets_temp_gcs_path": 174, "get_data_preprocessor_staging_gcs_path": 175, "get_dataflow_staging_gcs_path": 176, "get_dataflow_temp_gcs_path": 177, "get_frozen_gbml_config_proto_gcs_path": 178, "get_inferencer_asset_dir_gcs_path": 179, "get_inferencer_embeddings_gcs_prefix": 180, "get_inferencer_predictions_gcs_prefix": 181, "get_post_processor_asset_dir_gcs_path": 182, "get_post_processor_metrics_gcs_path": 183, "get_preprocessed_metadata_proto_gcs_path": 184, "get_split_dataset_main_samples_gcs_file_prefix": 185, "get_split_dataset_output_gcs_file_prefix": 186, "get_split_dataset_random_negatives_gcs_file_prefix": 187, "get_split_generator_assets_temp_gcs_path": 188, "get_subgraph_sampler_flattened_graph_metadata_output_gcs_path": 189, "get_subgraph_sampler_node_anchor_based_link_prediction_random_negatives_samples_prefix": 190, "get_subgraph_sampler_node_anchor_based_link_prediction_samples_prefix": 191, "get_subgraph_sampler_node_anchor_based_link_prediction_task_dir": 192, "get_subgraph_sampler_node_neighborhood_samples_dir": 193, "get_subgraph_sampler_node_neighborhood_samples_path_prefix": 194, "get_subgraph_sampler_root_dir": 195, "get_subgraph_sampler_supervised_link_based_task_dir": 196, "get_subgraph_sampler_supervised_link_based_task_labeled_samples_prefix": 197, "get_subgraph_sampler_supervised_link_based_task_unlabeled_samples_prefix": 198, "get_subgraph_sampler_supervised_node_classification_labeled_samples_prefix": 199, "get_subgraph_sampler_supervised_node_classification_task_dir": 200, "get_subgraph_sampler_supervised_node_classification_unlabeled_samples_prefix": 201, "get_tensorboard_logs_gcs_path": 202, "get_tf_transform_directory_path": 203, "get_tf_transform_raw_data_schema_file_path": 204, "get_tf_transform_stats_directory_path": 205, "get_tf_transform_stats_file_path": 206, "get_tf_transform_temp_directory_path": 207, "get_tf_transform_visualized_facets_file_path": 208, "get_tf_transformed_features_schema_path": 209, "get_tf_transformed_features_transform_fn_assets_directory_path": 210, "get_trained_model_eval_metrics_gcs_path": 211, "get_trained_model_gcs_path": 212, "get_trained_model_metadata_proto_gcs_path": 213, "get_trained_models_dir_gcs_path": 214, "get_trained_scripted_model_gcs_path": 215, "get_trainer_asset_dir_gcs_path": 216, "get_transformed_features_directory_path": 217, "get_transformed_features_file_prefix": 218, "graph_metadata": [219, 344], "get_gbml_assets_tmp_path": 221, "get_gbml_log_file_prefix_tmp_path": 222, "get_gbml_logs_folder_local_tmp_path": 223, "get_gbml_task_local_tmp_path": 224, "get_gigl_root_directori": 225, "get_inference_embeddings_local_tmp_dir_path": 226, "get_inference_embeddings_local_tmp_file_prefix": 227, "get_inference_predictions_local_tmp_file_prefix": 228, "get_path_to_manifest_fil": 229, "get_preprocess_local_staging_dir_path": 230, "get_project_root_directori": 231, "get_python_project_root_path": 232, "get_train_val_info_local_tmp_file_path": 233, "test_asset": 236, "get_example_task_edge_features_gcs_dir": 237, "get_example_task_edge_features_schema_gcs_path": 238, "get_example_task_edges_bq_table_path": 239, "get_example_task_frozen_gbml_config_gcs_path": 240, "get_example_task_node_features_gcs_dir": 241, "get_example_task_node_features_schema_gcs_path": 242, "get_example_task_nodes_bq_table_path": 243, "get_example_task_preprocess_gcs_prefix": 244, "get_example_task_static_assets_gcs_dir": 245, "update_bq_table_with_test_assets_and_vers": 246, "update_gcs_uri_with_test_assets_and_vers": 247, "time": [248, 395], "graph_build": [250, 251, 252, 253, 254, 255, 256, 257, 258], "abstract_graph_build": 251, "graphbuild": 252, "gbml_graph_protocol": 253, "gbmlgraphdataprotocol": 254, "pyg_graph_build": 255, "pyggraphbuild": 256, "pyg_graph_data": 257, "pyggraphdata": 258, "modeling_task_spec": [259, 260, 261, 262, 263, 264, 265, 266], "early_stop": 261, "earlystopp": 262, "parameter_load": 263, "argumentread": 264, "profiler_wrapp": 265, "torchprofil": 266, "dgl": [268, 269], "homogen": 269, "layer": [270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "count_min_sketch": 271, "countminsketch": 272, "calculate_in_batch_candidate_sampling_prob": 273, "decod": 274, "decodertyp": 275, "linkpredictiondecod": 276, "feature_interact": [277, 297], "dcncross": 278, "dcnv2": 279, "normal": 280, "l2_normalize_embed": 281, "pyg": [282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "heterogen": 283, "hgt": 284, "simplehgn": 285, "nn": [286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "conv": [287, 288, 289, 290, 291, 292, 293, 294, 295], "edge_attr_gat_conv": 288, "edgeattrgatconv": 289, "gin_conv": 290, "gineconv": 291, "hgt_conv": 292, "hgtconv": 293, "simplehgn_conv": 294, "simplehgnconv": 295, "combinationmod": 298, "featureinteract": 299, "jumping_knowledg": 300, "jumpingknowledg": 301, "filter_dict": 303, "to_hetero_feat": 306, "translat": [307, 308, 309, 310, 311], "gbml_protos_transl": 308, "gbmlprotostransl": 309, "model_eval_metrics_transl": 310, "evalmetricscollectiontransl": 311, "dataflow_job_opt": 313, "commonopt": 314, "dataset_split": 315, "datasetsplit": 316, "except": 317, "subgraphsamplingvalidationerror": 318, "subgraphsamplingvalidationerrortyp": 319, "featuretyp": 321, "graph_data": 322, "edg": 323, "edgetyp": 324, "edgeusagetyp": 325, "node": 326, "model_eval_metr": 327, "evalmetr": 328, "evalmetrictyp": 329, "evalmetricscollect": 330, "pb_wrapper": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "dataset_metadata": 332, "datasetmetadatapbwrapp": 333, "flattened_graph_metadata": 334, "flattenedgraphmetadatapbwrapp": 335, "gigl_resource_config": 336, "giglresourceconfigwrapp": 337, "graph_data_typ": 338, "edgepbwrapp": 339, "graphpbwrapp": 340, "nodepbwrapp": 341, "graph_data_types_util": 342, "get_dehydrated_node_pb_wrappers_from_edge_wrapp": 343, "graphmetadatapbwrapp": 345, "sampling_op": 346, "randomuniformpbwrapp": 347, "randomweightedpbwrapp": 348, "samplingdirectionenumtyp": 349, "samplingoppbwrapp": 350, "topkpbwrapp": 351, "userdefinedpbwrapp": 352, "subgraph_sampling_strategi": 353, "globalrandomuniformstrategypbwrapp": 354, "messagepassingpathpbwrapp": 355, "messagepassingpathstrategypbwrapp": 356, "subgraphsamplingstrategypbwrapp": 357, "task_metadata": [358, 363], "taskmetadatapbwrapp": 359, "trained_model_metadata": 360, "trainedmodelmetadatapbwrapp": 361, "taskmetadatatyp": 364, "bqutil": 367, "feature_seri": 369, "featureserializationutil": 370, "get_sanitized_dataflow_job_nam": 372, "init_beam_pipeline_opt": 373, "eval_metr": [374, 446], "hit_rate_at_k": 375, "mean_reciprocal_rank": 376, "file_load": 377, "fileload": 378, "gbml_proto": 379, "trainingsamplesschemaprotoutil": 380, "metrics_service_provid": 381, "get_metrics_service_inst": 382, "init_metrics_publisher_grouping_for_job": 383, "initialize_metr": 384, "load_scripted_model_from_uri": 386, "load_state_dict_from_uri": 387, "save_scripted_model": 388, "save_state_dict": 389, "schedul": 390, "cosinedecayschedul": 391, "spark_job_manag": 392, "dataprocclusterinitdata": 393, "sparkjobmanag": 394, "convert_days_to_m": 396, "current_datetim": 397, "current_formatted_datetim": 398, "format_datetim": 399, "is_datetime_str_format_valid": 400, "parse_formatted_datetim": 401, "timeout": [402, 404], "timedoutexcept": 403, "config_popul": [405, 406], "configpopul": 407, "data_preprocessor": [408, 409, 410, 411, 412, 413], "lib": [409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 424, 425, 426, 438, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "enumer": [410, 411], "queri": [411, 420], "ingest": 412, "transform": [413, 421], "v1": [415, 416, 417, 418, 419, 420, 421, 440, 441, 442, 443, 444, 445, 446, 447], "inference_output_schema": 417, "inferenceoutputbigquerytableschema": 418, "inferenceoutputbigquerytableschemabuild": 419, "v2": [422, 448], "post_process": [423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435], "base_post_processor": 425, "basepostprocessor": 426, "component_runtim": 428, "assert_component_runtimes_match_expected_paramet": 429, "get_runtime_manifest_from_kfp_pipelin": 430, "cosine_similar": 431, "assert_cosine_similarity_stat": 432, "calculate_cosine_sim_between_embedding_t": 433, "calculate_cosine_similarity_stat": 434, "get_table_paths_via_timedelta": 435, "split_gener": 436, "subgraph_sampl": [437, 438], "data_load": [442, 443, 444, 445], "dataloaderconfig": 444, "dataloadertyp": 445, "get_metric_name_for_gauge_model_metrics_hit_rate_at": 447, "validation_check": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "resource_config_check": 451, "check_if_inferencer_resource_config_valid": 452, "check_if_preprocessor_resource_config_valid": 453, "check_if_shared_resource_config_valid": 454, "check_if_split_generator_resource_config_valid": 455, "check_if_subgraph_sampler_resource_config_valid": 456, "check_if_trainer_resource_config_valid": 457, "assert_proto_field_value_is_truthi": 459, "assert_proto_has_field": 460, "api": 461, "refer": 461, "docker": 462, "imag": 462, "public": [463, 475], "asset": [463, 475], "guid": [464, 465, 466, 467, 468, 471, 474, 475], "prerequisit": 464, "breakdown": 464, "exampl": [464, 469, 470, 473, 475], "full": 464, "templat": 464, "task": [465, 468], "spec": [467, 468, 475], "walkthrough": [469, 470], "setup": [471, 474], "gcp": 471, "project": 471, "aw": 471, "step": 472, "runner": 473, "quick": 474, "start": [474, 475], "note": 474, "an": 474, "To": 474, "dig": 474, "deeper": 474, "advanc": 474, "user": 475, "overview": 475, "get": 475, "troubl": 475, "shoot": 475, "why": 477, "us": 477, "frequent": 478, "ask": 478, "question": 478, "faq": 478}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Config Populator": [[0, "config-populator"]], "Input": [[0, "input"], [1, "input"], [2, "input"], [3, "input"], [4, "input"], [5, "input"]], "What does it do?": [[0, "what-does-it-do"], [1, "what-does-it-do"], [2, "what-does-it-do"], [3, "what-does-it-do"], [4, "what-does-it-do"], [5, "what-does-it-do"]], "How do I run it?": [[0, "how-do-i-run-it"], [1, "how-do-i-run-it"], [2, "how-do-i-run-it"], [3, "how-do-i-run-it"], [4, "how-do-i-run-it"], [5, "how-do-i-run-it"]], "Output": [[0, "output"], [1, "output"], [2, "output"], [3, "output"], [4, "output"], [5, "output"]], "Other": [[0, "other"], [1, "other"], [2, "other"], [3, "other"], [4, "other"], [5, "other"]], "Data Preprocessor": [[1, "data-preprocessor"]], "Custom Usage": [[1, "custom-usage"], [2, "custom-usage"], [3, "custom-usage"], [5, "custom-usage"]], "Model Inference": [[2, "model-inference"]], "Split Generator": [[3, "split-generator"]], "Subgraph Sampler": [[4, "subgraph-sampler"]], "How do I extend business logic?": [[4, "how-do-i-extend-business-logic"]], "Trainer": [[5, "trainer"]], "Torch Profiler": [[5, "torch-profiler"]], "Monitoring and logging": [[5, "monitoring-and-logging"]], "Parameters": [[5, "parameters"]], "Background for distributed training": [[5, "background-for-distributed-training"]], "This REPO is a bit dusty while we prepare for the OSS launch. We will have it in working order coming soon.": [[6, "this-repo-is-a-bit-dusty-while-we-prepare-for-the-oss-launch-we-will-have-it-in-working-order-coming-soon"]], "Key Features \ud83c\udf1f": [[6, "key-features"]], "GiGL Components \u26a1\ufe0f": [[6, "gigl-components"]], "Installation \u2699\ufe0f": [[6, "installation"]], "Configuration \ud83d\udcc4": [[6, "configuration"]], "Usage \ud83d\ude80": [[6, "usage"]], "1. Importable gigl": [[6, "importable-gigl"]], "2. Command-Line Execution": [[6, "command-line-execution"]], "3. Kubeflow Pipeline Orchestration": [[6, "kubeflow-pipeline-orchestration"]], "Tests \ud83d\udd27": [[6, "tests"]], "Unit Tests": [[6, "unit-tests"]], "Local Integration Test": [[6, "local-integration-test"]], "Cloud Integration Test (End-to-End)": [[6, "cloud-integration-test-end-to-end"]], "Contribution \ud83d\udd25": [[6, "contribution"]], "Additional Resources \u2757": [[6, "additional-resources"]], "License \ud83d\udd12": [[6, "license"]], "Indices and tables": [[6, "indices-and-tables"]], "common": [[7, "module-common"]], "common.beam": [[8, "module-common.beam"]], "common.collections": [[9, "module-common.collections"]], "common.collections.frozen_dict": [[10, "module-common.collections.frozen_dict"]], "common.collections.FrozenDict": [[11, "common-collections-frozendict"]], "common.collections.itertools": [[12, "module-common.collections.itertools"]], "common.collections.batch": [[13, "common-collections-batch"]], "common.collections.sorted_dict": [[14, "module-common.collections.sorted_dict"]], "common.collections.SortedDict": [[15, "common-collections-sorteddict"]], "common.data": [[16, "module-common.data"]], "common.data.export": [[17, "module-common.data.export"]], "common.data.EmbeddingExporter": [[18, "common-data-embeddingexporter"]], "common.data.load_embeddings_to_bigquery": [[19, "common-data-load-embeddings-to-bigquery"]], "common.env_config": [[20, "module-common.env_config"]], "common.get_available_cpus": [[21, "common-get-available-cpus"]], "common.logger": [[22, "module-common.logger"]], "common.Logger": [[23, "common-logger"]], "common.metrics": [[24, "module-common.metrics"]], "common.metrics.base_metrics": [[25, "module-common.metrics.base_metrics"]], "common.metrics.NopMetricsPublisher": [[26, "common-metrics-nopmetricspublisher"]], "common.metrics.decorators": [[27, "module-common.metrics.decorators"]], "common.metrics.TimerRecordGranularity": [[28, "common-metrics-timerrecordgranularity"]], "common.metrics.flushes_metrics": [[29, "common-metrics-flushes-metrics"]], "common.metrics.profileit": [[30, "common-metrics-profileit"]], "common.metrics.metrics_interface": [[31, "module-common.metrics.metrics_interface"]], "common.metrics.OpsMetricPublisher": [[32, "common-metrics-opsmetricpublisher"]], "common.services": [[33, "module-common.services"]], "common.services.dataproc": [[34, "module-common.services.dataproc"]], "common.services.DataprocService": [[35, "common-services-dataprocservice"]], "common.services.gcp_cloud_logging": [[36, "module-common.services.gcp_cloud_logging"]], "common.services.GCPCloudLoggingService": [[37, "common-services-gcpcloudloggingservice"]], "common.services.LogEntries": [[38, "common-services-logentries"]], "common.services.kfp": [[39, "module-common.services.kfp"]], "common.services.KFPService": [[40, "common-services-kfpservice"]], "common.services.vertex_ai": [[41, "module-common.services.vertex_ai"]], "common.services.VertexAIService": [[42, "common-services-vertexaiservice"]], "common.services.VertexAiJobConfig": [[43, "common-services-vertexaijobconfig"]], "common.types": [[44, "module-common.types"]], "common.types.resource_config": [[45, "module-common.types.resource_config"]], "common.types.CommonPipelineComponentConfigs": [[46, "common-types-commonpipelinecomponentconfigs"]], "common.types.uri": [[47, "module-common.types.uri"]], "common.types.uri.gcs_uri": [[48, "module-common.types.uri.gcs_uri"]], "common.types.uri.GcsUri": [[49, "common-types-uri-gcsuri"]], "common.types.uri.http_uri": [[50, "module-common.types.uri.http_uri"]], "common.types.uri.HttpUri": [[51, "common-types-uri-httpuri"]], "common.types.uri.local_uri": [[52, "module-common.types.uri.local_uri"]], "common.types.uri.LocalUri": [[53, "common-types-uri-localuri"]], "common.types.uri.uri": [[54, "module-common.types.uri.uri"]], "common.types.Uri": [[55, "common-types-uri"]], "common.types.uri.uri_factory": [[56, "module-common.types.uri.uri_factory"]], "common.types.uri.UriFactory": [[57, "common-types-uri-urifactory"]], "common.types.wrappers": [[58, "module-common.types.wrappers"]], "common.types.wrappers.argo_workflow_manifest": [[59, "module-common.types.wrappers.argo_workflow_manifest"]], "common.types.wrappers.ArgoWorkflowManifestWrapper": [[60, "common-types-wrappers-argoworkflowmanifestwrapper"]], "common.types.wrappers.ArgoWorkflowNodeStatus": [[61, "common-types-wrappers-argoworkflownodestatus"]], "common.types.wrappers.kfp_api": [[62, "module-common.types.wrappers.kfp_api"]], "common.types.wrappers.ApiRunDetailWrapper": [[63, "common-types-wrappers-apirundetailwrapper"]], "common.utils": [[64, "module-common.utils"]], "common.utils.compute": [[65, "module-common.utils.compute"]], "common.utils.compute.random": [[66, "module-common.utils.compute.random"]], "common.utils.compute.make_compute_deterministic_and_set_seed": [[67, "common-utils-compute-make-compute-deterministic-and-set-seed"]], "common.utils.compute.serialization": [[68, "module-common.utils.compute.serialization"]], "common.utils.compute.serialization.coder": [[69, "module-common.utils.compute.serialization.coder"]], "common.utils.compute.serialization.CoderProtocol": [[70, "common-utils-compute-serialization-coderprotocol"]], "common.utils.compute.serialization.serialize_np": [[71, "module-common.utils.compute.serialization.serialize_np"]], "common.utils.compute.serialization.EncodedNdArray": [[72, "common-utils-compute-serialization-encodedndarray"]], "common.utils.compute.serialization.NumpyCoder": [[73, "common-utils-compute-serialization-numpycoder"]], "common.utils.compute.serialization.serialize_protos": [[74, "module-common.utils.compute.serialization.serialize_protos"]], "common.utils.compute.serialization.EdgePbWrapperCoder": [[75, "common-utils-compute-serialization-edgepbwrappercoder"]], "common.utils.compute.serialization.GraphPbWrapperCoder": [[76, "common-utils-compute-serialization-graphpbwrappercoder"]], "common.utils.compute.serialization.NodePbWrapperCoder": [[77, "common-utils-compute-serialization-nodepbwrappercoder"]], "common.utils.compute.serialization.serialize_string": [[78, "module-common.utils.compute.serialization.serialize_string"]], "common.utils.compute.serialization.StringCoder": [[79, "common-utils-compute-serialization-stringcoder"]], "common.utils.dataflow": [[80, "module-common.utils.dataflow"]], "common.utils.get_console_uri_from_pipeline_result": [[81, "common-utils-get-console-uri-from-pipeline-result"]], "common.utils.func_tools": [[82, "module-common.utils.func_tools"]], "common.utils.lru_cache": [[83, "common-utils-lru-cache"]], "common.utils.gcs": [[84, "module-common.utils.gcs"]], "common.utils.GcsUtils": [[85, "common-utils-gcsutils"]], "common.utils.kfp": [[86, "module-common.utils.kfp"]], "common.utils.KfpOutputViewers": [[87, "common-utils-kfpoutputviewers"]], "common.utils.local_fs": [[88, "module-common.utils.local_fs"]], "common.utils.FileSystemEntity": [[89, "common-utils-filesystementity"]], "common.utils.append_line_to_file": [[90, "common-utils-append-line-to-file"]], "common.utils.copy_files": [[91, "common-utils-copy-files"]], "common.utils.count_files_with_uri_prefix": [[92, "common-utils-count-files-with-uri-prefix"]], "common.utils.create_empty_file_if_none_exists": [[93, "common-utils-create-empty-file-if-none-exists"]], "common.utils.create_file_symlinks": [[94, "common-utils-create-file-symlinks"]], "common.utils.delete_and_create_local_path": [[95, "common-utils-delete-and-create-local-path"]], "common.utils.delete_local_directory": [[96, "common-utils-delete-local-directory"]], "common.utils.does_path_exist": [[97, "common-utils-does-path-exist"]], "common.utils.list_at_path": [[98, "common-utils-list-at-path"]], "common.utils.remove_file_if_exist": [[99, "common-utils-remove-file-if-exist"]], "common.utils.remove_file_or_folder_if_exist": [[100, "common-utils-remove-file-or-folder-if-exist"]], "common.utils.remove_folder_if_exist": [[101, "common-utils-remove-folder-if-exist"]], "common.utils.remove_line_from_file": [[102, "common-utils-remove-line-from-file"]], "common.utils.os_utils": [[103, "module-common.utils.os_utils"]], "common.utils.import_obj": [[104, "common-utils-import-obj"]], "common.utils.num_lines_in_file": [[105, "common-utils-num-lines-in-file"]], "common.utils.run_command_and_stream_stdout": [[106, "common-utils-run-command-and-stream-stdout"]], "common.utils.proto_utils": [[107, "module-common.utils.proto_utils"]], "common.utils.ProtoUtils": [[108, "common-utils-protoutils"]], "common.utils.retry": [[109, "module-common.utils.retry"], [111, "common-utils-retry"]], "common.utils.RetriesFailedException": [[110, "common-utils-retriesfailedexception"]], "common.utils.test_utils": [[112, "module-common.utils.test_utils"]], "common.utils.TestArgs": [[113, "common-utils-testargs"]], "common.utils.parse_args": [[114, "common-utils-parse-args"]], "common.utils.run_tests": [[115, "common-utils-run-tests"]], "common.utils.torch_training": [[116, "module-common.utils.torch_training"]], "common.utils.get_distributed_backend": [[117, "common-utils-get-distributed-backend"]], "common.utils.get_rank": [[118, "common-utils-get-rank"]], "common.utils.get_world_size": [[119, "common-utils-get-world-size"]], "common.utils.is_distributed_available_and_initialized": [[120, "common-utils-is-distributed-available-and-initialized"]], "common.utils.is_distributed_local_debug": [[121, "common-utils-is-distributed-local-debug"]], "common.utils.should_distribute": [[122, "common-utils-should-distribute"]], "env": [[123, "module-env"]], "env.dep_constants": [[124, "module-env.dep_constants"]], "env.get_compiled_jar_path": [[125, "env-get-compiled-jar-path"]], "env.get_current_jar_file": [[126, "env-get-current-jar-file"]], "env.get_jar_file_uri": [[127, "env-get-jar-file-uri"]], "env.get_local_jar_directory": [[128, "env-get-local-jar-directory"]], "env.pipelines_config": [[129, "module-env.pipelines_config"]], "env.get_resource_config": [[130, "env-get-resource-config"]], "env.is_resource_config_loaded": [[131, "env-is-resource-config-loaded"]], "orchestration": [[132, "module-orchestration"]], "orchestration.kubeflow": [[133, "module-orchestration.kubeflow"]], "orchestration.kubeflow.kfp_orchestrator": [[134, "module-orchestration.kubeflow.kfp_orchestrator"]], "orchestration.kubeflow.KfpEnvMetadata": [[135, "orchestration-kubeflow-kfpenvmetadata"]], "orchestration.kubeflow.KfpOrchestrator": [[136, "orchestration-kubeflow-kfporchestrator"]], "orchestration.kubeflow.kfp_pipeline": [[137, "module-orchestration.kubeflow.kfp_pipeline"]], "orchestration.kubeflow.create_config_populator_task_op": [[138, "orchestration-kubeflow-create-config-populator-task-op"]], "orchestration.kubeflow.create_data_preprocessor_task_op": [[139, "orchestration-kubeflow-create-data-preprocessor-task-op"]], "orchestration.kubeflow.create_inferencer_task_op": [[140, "orchestration-kubeflow-create-inferencer-task-op"]], "orchestration.kubeflow.create_post_processor_task_op": [[141, "orchestration-kubeflow-create-post-processor-task-op"]], "orchestration.kubeflow.create_split_generator_task_op": [[142, "orchestration-kubeflow-create-split-generator-task-op"]], "orchestration.kubeflow.create_subgraph_sampler_task_op": [[143, "orchestration-kubeflow-create-subgraph-sampler-task-op"]], "orchestration.kubeflow.create_trainer_task_op": [[144, "orchestration-kubeflow-create-trainer-task-op"]], "orchestration.kubeflow.generate_component_task": [[145, "orchestration-kubeflow-generate-component-task"]], "orchestration.kubeflow.generate_pipeline": [[146, "orchestration-kubeflow-generate-pipeline"]], "orchestration.kubeflow.utils": [[147, "module-orchestration.kubeflow.utils"]], "orchestration.kubeflow.utils.glt_backend": [[148, "module-orchestration.kubeflow.utils.glt_backend"]], "orchestration.kubeflow.utils.check_glt_backend_eligibility_component": [[149, "orchestration-kubeflow-utils-check-glt-backend-eligibility-component"]], "orchestration.kubeflow.utils.log_metrics": [[150, "module-orchestration.kubeflow.utils.log_metrics"]], "orchestration.kubeflow.utils.log_eval_metrics_to_ui": [[151, "orchestration-kubeflow-utils-log-eval-metrics-to-ui"]], "orchestration.kubeflow.utils.resource": [[152, "module-orchestration.kubeflow.utils.resource"]], "orchestration.kubeflow.utils.add_task_resource_requirements": [[153, "orchestration-kubeflow-utils-add-task-resource-requirements"]], "src": [[154, "module-src"]], "src.applied_tasks": [[155, "module-src.applied_tasks"]], "src.applied_tasks.test_tasks": [[156, "module-src.applied_tasks.test_tasks"]], "src.applied_tasks.test_tasks.academic": [[157, "module-src.applied_tasks.test_tasks.academic"]], "src.applied_tasks.test_tasks.get_pyg_cora_dataset": [[158, "src-applied-tasks-test-tasks-get-pyg-cora-dataset"]], "src.applied_tasks.test_tasks.log_stats_for_pyg_planetoid_dataset": [[159, "src-applied-tasks-test-tasks-log-stats-for-pyg-planetoid-dataset"]], "src.common": [[160, "module-src.common"]], "src.common.constants": [[161, "module-src.common.constants"]], "src.common.constants.bq": [[162, "module-src.common.constants.bq"]], "src.common.constants.get_embeddings_dataset_bq_path": [[163, "src-common-constants-get-embeddings-dataset-bq-path"]], "src.common.constants.get_embeddings_table": [[164, "src-common-constants-get-embeddings-table"]], "src.common.constants.get_predictions_table": [[165, "src-common-constants-get-predictions-table"]], "src.common.constants.components": [[166, "module-src.common.constants.components"]], "src.common.constants.GiGLComponents": [[167, "src-common-constants-giglcomponents"]], "src.common.constants.gcs": [[168, "module-src.common.constants.gcs"]], "src.common.constants.get_applied_task_perm_gcs_path": [[169, "src-common-constants-get-applied-task-perm-gcs-path"]], "src.common.constants.get_applied_task_temp_gcs_path": [[170, "src-common-constants-get-applied-task-temp-gcs-path"]], "src.common.constants.get_applied_task_temp_regional_gcs_path": [[171, "src-common-constants-get-applied-task-temp-regional-gcs-path"]], "src.common.constants.get_config_populator_assets_perm_gcs_path": [[172, "src-common-constants-get-config-populator-assets-perm-gcs-path"]], "src.common.constants.get_data_preprocessor_assets_perm_gcs_path": [[173, "src-common-constants-get-data-preprocessor-assets-perm-gcs-path"]], "src.common.constants.get_data_preprocessor_assets_temp_gcs_path": [[174, "src-common-constants-get-data-preprocessor-assets-temp-gcs-path"]], "src.common.constants.get_data_preprocessor_staging_gcs_path": [[175, "src-common-constants-get-data-preprocessor-staging-gcs-path"]], "src.common.constants.get_dataflow_staging_gcs_path": [[176, "src-common-constants-get-dataflow-staging-gcs-path"]], "src.common.constants.get_dataflow_temp_gcs_path": [[177, "src-common-constants-get-dataflow-temp-gcs-path"]], "src.common.constants.get_frozen_gbml_config_proto_gcs_path": [[178, "src-common-constants-get-frozen-gbml-config-proto-gcs-path"]], "src.common.constants.get_inferencer_asset_dir_gcs_path": [[179, "src-common-constants-get-inferencer-asset-dir-gcs-path"]], "src.common.constants.get_inferencer_embeddings_gcs_prefix": [[180, "src-common-constants-get-inferencer-embeddings-gcs-prefix"]], "src.common.constants.get_inferencer_predictions_gcs_prefix": [[181, "src-common-constants-get-inferencer-predictions-gcs-prefix"]], "src.common.constants.get_post_processor_asset_dir_gcs_path": [[182, "src-common-constants-get-post-processor-asset-dir-gcs-path"]], "src.common.constants.get_post_processor_metrics_gcs_path": [[183, "src-common-constants-get-post-processor-metrics-gcs-path"]], "src.common.constants.get_preprocessed_metadata_proto_gcs_path": [[184, "src-common-constants-get-preprocessed-metadata-proto-gcs-path"]], "src.common.constants.get_split_dataset_main_samples_gcs_file_prefix": [[185, "src-common-constants-get-split-dataset-main-samples-gcs-file-prefix"]], "src.common.constants.get_split_dataset_output_gcs_file_prefix": [[186, "src-common-constants-get-split-dataset-output-gcs-file-prefix"]], "src.common.constants.get_split_dataset_random_negatives_gcs_file_prefix": [[187, "src-common-constants-get-split-dataset-random-negatives-gcs-file-prefix"]], "src.common.constants.get_split_generator_assets_temp_gcs_path": [[188, "src-common-constants-get-split-generator-assets-temp-gcs-path"]], "src.common.constants.get_subgraph_sampler_flattened_graph_metadata_output_gcs_path": [[189, "src-common-constants-get-subgraph-sampler-flattened-graph-metadata-output-gcs-path"]], "src.common.constants.get_subgraph_sampler_node_anchor_based_link_prediction_random_negatives_samples_prefix": [[190, "src-common-constants-get-subgraph-sampler-node-anchor-based-link-prediction-random-negatives-samples-prefix"]], "src.common.constants.get_subgraph_sampler_node_anchor_based_link_prediction_samples_prefix": [[191, "src-common-constants-get-subgraph-sampler-node-anchor-based-link-prediction-samples-prefix"]], "src.common.constants.get_subgraph_sampler_node_anchor_based_link_prediction_task_dir": [[192, "src-common-constants-get-subgraph-sampler-node-anchor-based-link-prediction-task-dir"]], "src.common.constants.get_subgraph_sampler_node_neighborhood_samples_dir": [[193, "src-common-constants-get-subgraph-sampler-node-neighborhood-samples-dir"]], "src.common.constants.get_subgraph_sampler_node_neighborhood_samples_path_prefix": [[194, "src-common-constants-get-subgraph-sampler-node-neighborhood-samples-path-prefix"]], "src.common.constants.get_subgraph_sampler_root_dir": [[195, "src-common-constants-get-subgraph-sampler-root-dir"]], "src.common.constants.get_subgraph_sampler_supervised_link_based_task_dir": [[196, "src-common-constants-get-subgraph-sampler-supervised-link-based-task-dir"]], "src.common.constants.get_subgraph_sampler_supervised_link_based_task_labeled_samples_prefix": [[197, "src-common-constants-get-subgraph-sampler-supervised-link-based-task-labeled-samples-prefix"]], "src.common.constants.get_subgraph_sampler_supervised_link_based_task_unlabeled_samples_prefix": [[198, "src-common-constants-get-subgraph-sampler-supervised-link-based-task-unlabeled-samples-prefix"]], "src.common.constants.get_subgraph_sampler_supervised_node_classification_labeled_samples_prefix": [[199, "src-common-constants-get-subgraph-sampler-supervised-node-classification-labeled-samples-prefix"]], "src.common.constants.get_subgraph_sampler_supervised_node_classification_task_dir": [[200, "src-common-constants-get-subgraph-sampler-supervised-node-classification-task-dir"]], "src.common.constants.get_subgraph_sampler_supervised_node_classification_unlabeled_samples_prefix": [[201, "src-common-constants-get-subgraph-sampler-supervised-node-classification-unlabeled-samples-prefix"]], "src.common.constants.get_tensorboard_logs_gcs_path": [[202, "src-common-constants-get-tensorboard-logs-gcs-path"]], "src.common.constants.get_tf_transform_directory_path": [[203, "src-common-constants-get-tf-transform-directory-path"]], "src.common.constants.get_tf_transform_raw_data_schema_file_path": [[204, "src-common-constants-get-tf-transform-raw-data-schema-file-path"]], "src.common.constants.get_tf_transform_stats_directory_path": [[205, "src-common-constants-get-tf-transform-stats-directory-path"]], "src.common.constants.get_tf_transform_stats_file_path": [[206, "src-common-constants-get-tf-transform-stats-file-path"]], "src.common.constants.get_tf_transform_temp_directory_path": [[207, "src-common-constants-get-tf-transform-temp-directory-path"]], "src.common.constants.get_tf_transform_visualized_facets_file_path": [[208, "src-common-constants-get-tf-transform-visualized-facets-file-path"]], "src.common.constants.get_tf_transformed_features_schema_path": [[209, "src-common-constants-get-tf-transformed-features-schema-path"]], "src.common.constants.get_tf_transformed_features_transform_fn_assets_directory_path": [[210, "src-common-constants-get-tf-transformed-features-transform-fn-assets-directory-path"]], "src.common.constants.get_trained_model_eval_metrics_gcs_path": [[211, "src-common-constants-get-trained-model-eval-metrics-gcs-path"]], "src.common.constants.get_trained_model_gcs_path": [[212, "src-common-constants-get-trained-model-gcs-path"]], "src.common.constants.get_trained_model_metadata_proto_gcs_path": [[213, "src-common-constants-get-trained-model-metadata-proto-gcs-path"]], "src.common.constants.get_trained_models_dir_gcs_path": [[214, "src-common-constants-get-trained-models-dir-gcs-path"]], "src.common.constants.get_trained_scripted_model_gcs_path": [[215, "src-common-constants-get-trained-scripted-model-gcs-path"]], "src.common.constants.get_trainer_asset_dir_gcs_path": [[216, "src-common-constants-get-trainer-asset-dir-gcs-path"]], "src.common.constants.get_transformed_features_directory_path": [[217, "src-common-constants-get-transformed-features-directory-path"]], "src.common.constants.get_transformed_features_file_prefix": [[218, "src-common-constants-get-transformed-features-file-prefix"]], "src.common.constants.graph_metadata": [[219, "module-src.common.constants.graph_metadata"]], "src.common.constants.local_fs": [[220, "module-src.common.constants.local_fs"]], "src.common.constants.get_gbml_assets_tmp_path": [[221, "src-common-constants-get-gbml-assets-tmp-path"]], "src.common.constants.get_gbml_log_file_prefix_tmp_path": [[222, "src-common-constants-get-gbml-log-file-prefix-tmp-path"]], "src.common.constants.get_gbml_logs_folder_local_tmp_path": [[223, "src-common-constants-get-gbml-logs-folder-local-tmp-path"]], "src.common.constants.get_gbml_task_local_tmp_path": [[224, "src-common-constants-get-gbml-task-local-tmp-path"]], "src.common.constants.get_gigl_root_directory": [[225, "src-common-constants-get-gigl-root-directory"]], "src.common.constants.get_inference_embeddings_local_tmp_dir_path": [[226, "src-common-constants-get-inference-embeddings-local-tmp-dir-path"]], "src.common.constants.get_inference_embeddings_local_tmp_file_prefix": [[227, "src-common-constants-get-inference-embeddings-local-tmp-file-prefix"]], "src.common.constants.get_inference_predictions_local_tmp_file_prefix": [[228, "src-common-constants-get-inference-predictions-local-tmp-file-prefix"]], "src.common.constants.get_path_to_manifest_file": [[229, "src-common-constants-get-path-to-manifest-file"]], "src.common.constants.get_preprocess_local_staging_dir_path": [[230, "src-common-constants-get-preprocess-local-staging-dir-path"]], "src.common.constants.get_project_root_directory": [[231, "src-common-constants-get-project-root-directory"]], "src.common.constants.get_python_project_root_path": [[232, "src-common-constants-get-python-project-root-path"]], "src.common.constants.get_train_val_info_local_tmp_file_path": [[233, "src-common-constants-get-train-val-info-local-tmp-file-path"]], "src.common.constants.metrics": [[234, "module-src.common.constants.metrics"]], "src.common.constants.resource_config": [[235, "module-src.common.constants.resource_config"]], "src.common.constants.test_assets": [[236, "module-src.common.constants.test_assets"]], "src.common.constants.get_example_task_edge_features_gcs_dir": [[237, "src-common-constants-get-example-task-edge-features-gcs-dir"]], "src.common.constants.get_example_task_edge_features_schema_gcs_path": [[238, "src-common-constants-get-example-task-edge-features-schema-gcs-path"]], "src.common.constants.get_example_task_edges_bq_table_path": [[239, "src-common-constants-get-example-task-edges-bq-table-path"]], "src.common.constants.get_example_task_frozen_gbml_config_gcs_path": [[240, "src-common-constants-get-example-task-frozen-gbml-config-gcs-path"]], "src.common.constants.get_example_task_node_features_gcs_dir": [[241, "src-common-constants-get-example-task-node-features-gcs-dir"]], "src.common.constants.get_example_task_node_features_schema_gcs_path": [[242, "src-common-constants-get-example-task-node-features-schema-gcs-path"]], "src.common.constants.get_example_task_nodes_bq_table_path": [[243, "src-common-constants-get-example-task-nodes-bq-table-path"]], "src.common.constants.get_example_task_preprocess_gcs_prefix": [[244, "src-common-constants-get-example-task-preprocess-gcs-prefix"]], "src.common.constants.get_example_task_static_assets_gcs_dir": [[245, "src-common-constants-get-example-task-static-assets-gcs-dir"]], "src.common.constants.update_bq_table_with_test_assets_and_version": [[246, "src-common-constants-update-bq-table-with-test-assets-and-version"]], "src.common.constants.update_gcs_uri_with_test_assets_and_version": [[247, "src-common-constants-update-gcs-uri-with-test-assets-and-version"]], "src.common.constants.time": [[248, "module-src.common.constants.time"]], "src.common.constants.training": [[249, "module-src.common.constants.training"]], "src.common.graph_builder": [[250, "module-src.common.graph_builder"]], "src.common.graph_builder.abstract_graph_builder": [[251, "module-src.common.graph_builder.abstract_graph_builder"]], "src.common.graph_builder.GraphBuilder": [[252, "src-common-graph-builder-graphbuilder"]], "src.common.graph_builder.gbml_graph_protocol": [[253, "module-src.common.graph_builder.gbml_graph_protocol"]], "src.common.graph_builder.GbmlGraphDataProtocol": [[254, "src-common-graph-builder-gbmlgraphdataprotocol"]], "src.common.graph_builder.pyg_graph_builder": [[255, "module-src.common.graph_builder.pyg_graph_builder"]], "src.common.graph_builder.PygGraphBuilder": [[256, "src-common-graph-builder-pyggraphbuilder"]], "src.common.graph_builder.pyg_graph_data": [[257, "module-src.common.graph_builder.pyg_graph_data"]], "src.common.graph_builder.PygGraphData": [[258, "src-common-graph-builder-pyggraphdata"]], "src.common.modeling_task_specs": [[259, "module-src.common.modeling_task_specs"]], "src.common.modeling_task_specs.utils": [[260, "module-src.common.modeling_task_specs.utils"]], "src.common.modeling_task_specs.utils.early_stop": [[261, "module-src.common.modeling_task_specs.utils.early_stop"]], "src.common.modeling_task_specs.utils.EarlyStopper": [[262, "src-common-modeling-task-specs-utils-earlystopper"]], "src.common.modeling_task_specs.utils.parameter_loading": [[263, "module-src.common.modeling_task_specs.utils.parameter_loading"]], "src.common.modeling_task_specs.utils.ArgumentReader": [[264, "src-common-modeling-task-specs-utils-argumentreader"]], "src.common.modeling_task_specs.utils.profiler_wrapper": [[265, "module-src.common.modeling_task_specs.utils.profiler_wrapper"]], "src.common.modeling_task_specs.utils.TorchProfiler": [[266, "src-common-modeling-task-specs-utils-torchprofiler"]], "src.common.models": [[267, "module-src.common.models"]], "src.common.models.dgl": [[268, "module-src.common.models.dgl"]], "src.common.models.dgl.homogenous": [[269, "module-src.common.models.dgl.homogenous"]], "src.common.models.layers": [[270, "module-src.common.models.layers"]], "src.common.models.layers.count_min_sketch": [[271, "module-src.common.models.layers.count_min_sketch"]], "src.common.models.layers.CountMinSketch": [[272, "src-common-models-layers-countminsketch"]], "src.common.models.layers.calculate_in_batch_candidate_sampling_probability": [[273, "src-common-models-layers-calculate-in-batch-candidate-sampling-probability"]], "src.common.models.layers.decoder": [[274, "module-src.common.models.layers.decoder"]], "src.common.models.layers.DecoderType": [[275, "src-common-models-layers-decodertype"]], "src.common.models.layers.LinkPredictionDecoder": [[276, "src-common-models-layers-linkpredictiondecoder"]], "src.common.models.layers.feature_interaction": [[277, "module-src.common.models.layers.feature_interaction"]], "src.common.models.layers.DCNCross": [[278, "src-common-models-layers-dcncross"]], "src.common.models.layers.DCNv2": [[279, "src-common-models-layers-dcnv2"]], "src.common.models.layers.normalization": [[280, "module-src.common.models.layers.normalization"]], "src.common.models.layers.l2_normalize_embeddings": [[281, "src-common-models-layers-l2-normalize-embeddings"]], "src.common.models.pyg": [[282, "module-src.common.models.pyg"]], "src.common.models.pyg.heterogeneous": [[283, "module-src.common.models.pyg.heterogeneous"]], "src.common.models.pyg.HGT": [[284, "src-common-models-pyg-hgt"]], "src.common.models.pyg.SimpleHGN": [[285, "src-common-models-pyg-simplehgn"]], "src.common.models.pyg.nn": [[286, "module-src.common.models.pyg.nn"]], "src.common.models.pyg.nn.conv": [[287, "module-src.common.models.pyg.nn.conv"]], "src.common.models.pyg.nn.conv.edge_attr_gat_conv": [[288, "module-src.common.models.pyg.nn.conv.edge_attr_gat_conv"]], "src.common.models.pyg.nn.conv.EdgeAttrGATConv": [[289, "src-common-models-pyg-nn-conv-edgeattrgatconv"]], "src.common.models.pyg.nn.conv.gin_conv": [[290, "module-src.common.models.pyg.nn.conv.gin_conv"]], "src.common.models.pyg.nn.conv.GINEConv": [[291, "src-common-models-pyg-nn-conv-gineconv"]], "src.common.models.pyg.nn.conv.hgt_conv": [[292, "module-src.common.models.pyg.nn.conv.hgt_conv"]], "src.common.models.pyg.nn.conv.HGTConv": [[293, "src-common-models-pyg-nn-conv-hgtconv"]], "src.common.models.pyg.nn.conv.simplehgn_conv": [[294, "module-src.common.models.pyg.nn.conv.simplehgn_conv"]], "src.common.models.pyg.nn.conv.SimpleHGNConv": [[295, "src-common-models-pyg-nn-conv-simplehgnconv"]], "src.common.models.pyg.nn.models": [[296, "module-src.common.models.pyg.nn.models"]], "src.common.models.pyg.nn.models.feature_interaction": [[297, "module-src.common.models.pyg.nn.models.feature_interaction"]], "src.common.models.pyg.nn.models.CombinationMode": [[298, "src-common-models-pyg-nn-models-combinationmode"]], "src.common.models.pyg.nn.models.FeatureInteraction": [[299, "src-common-models-pyg-nn-models-featureinteraction"]], "src.common.models.pyg.nn.models.jumping_knowledge": [[300, "module-src.common.models.pyg.nn.models.jumping_knowledge"]], "src.common.models.pyg.nn.models.JumpingKnowledge": [[301, "src-common-models-pyg-nn-models-jumpingknowledge"]], "src.common.models.pyg.utils": [[302, "module-src.common.models.pyg.utils"]], "src.common.models.pyg.filter_dict": [[303, "src-common-models-pyg-filter-dict"]], "src.common.models.utils": [[304, "module-src.common.models.utils"]], "src.common.models.utils.torch": [[305, "module-src.common.models.utils.torch"]], "src.common.models.utils.to_hetero_feat": [[306, "src-common-models-utils-to-hetero-feat"]], "src.common.translators": [[307, "module-src.common.translators"]], "src.common.translators.gbml_protos_translator": [[308, "module-src.common.translators.gbml_protos_translator"]], "src.common.translators.GbmlProtosTranslator": [[309, "src-common-translators-gbmlprotostranslator"]], "src.common.translators.model_eval_metrics_translator": [[310, "module-src.common.translators.model_eval_metrics_translator"]], "src.common.translators.EvalMetricsCollectionTranslator": [[311, "src-common-translators-evalmetricscollectiontranslator"]], "src.common.types": [[312, "module-src.common.types"]], "src.common.types.dataflow_job_options": [[313, "module-src.common.types.dataflow_job_options"]], "src.common.types.CommonOptions": [[314, "src-common-types-commonoptions"]], "src.common.types.dataset_split": [[315, "module-src.common.types.dataset_split"]], "src.common.types.DatasetSplit": [[316, "src-common-types-datasetsplit"]], "src.common.types.exception": [[317, "module-src.common.types.exception"]], "src.common.types.SubgraphSamplingValidationError": [[318, "src-common-types-subgraphsamplingvalidationerror"]], "src.common.types.SubgraphSamplingValidationErrorType": [[319, "src-common-types-subgraphsamplingvalidationerrortype"]], "src.common.types.features": [[320, "module-src.common.types.features"]], "src.common.types.FeatureTypes": [[321, "src-common-types-featuretypes"]], "src.common.types.graph_data": [[322, "module-src.common.types.graph_data"]], "src.common.types.Edge": [[323, "src-common-types-edge"]], "src.common.types.EdgeType": [[324, "src-common-types-edgetype"]], "src.common.types.EdgeUsageType": [[325, "src-common-types-edgeusagetype"]], "src.common.types.Node": [[326, "src-common-types-node"]], "src.common.types.model_eval_metrics": [[327, "module-src.common.types.model_eval_metrics"]], "src.common.types.EvalMetric": [[328, "src-common-types-evalmetric"]], "src.common.types.EvalMetricType": [[329, "src-common-types-evalmetrictype"]], "src.common.types.EvalMetricsCollection": [[330, "src-common-types-evalmetricscollection"]], "src.common.types.pb_wrappers": [[331, "module-src.common.types.pb_wrappers"]], "src.common.types.pb_wrappers.dataset_metadata": [[332, "module-src.common.types.pb_wrappers.dataset_metadata"]], "src.common.types.pb_wrappers.DatasetMetadataPbWrapper": [[333, "src-common-types-pb-wrappers-datasetmetadatapbwrapper"]], "src.common.types.pb_wrappers.flattened_graph_metadata": [[334, "module-src.common.types.pb_wrappers.flattened_graph_metadata"]], "src.common.types.pb_wrappers.FlattenedGraphMetadataPbWrapper": [[335, "src-common-types-pb-wrappers-flattenedgraphmetadatapbwrapper"]], "src.common.types.pb_wrappers.gigl_resource_config": [[336, "module-src.common.types.pb_wrappers.gigl_resource_config"]], "src.common.types.pb_wrappers.GiglResourceConfigWrapper": [[337, "src-common-types-pb-wrappers-giglresourceconfigwrapper"]], "src.common.types.pb_wrappers.graph_data_types": [[338, "module-src.common.types.pb_wrappers.graph_data_types"]], "src.common.types.pb_wrappers.EdgePbWrapper": [[339, "src-common-types-pb-wrappers-edgepbwrapper"]], "src.common.types.pb_wrappers.GraphPbWrapper": [[340, "src-common-types-pb-wrappers-graphpbwrapper"]], "src.common.types.pb_wrappers.NodePbWrapper": [[341, "src-common-types-pb-wrappers-nodepbwrapper"]], "src.common.types.pb_wrappers.graph_data_types_utils": [[342, "module-src.common.types.pb_wrappers.graph_data_types_utils"]], "src.common.types.pb_wrappers.get_dehydrated_node_pb_wrappers_from_edge_wrapper": [[343, "src-common-types-pb-wrappers-get-dehydrated-node-pb-wrappers-from-edge-wrapper"]], "src.common.types.pb_wrappers.graph_metadata": [[344, "module-src.common.types.pb_wrappers.graph_metadata"]], "src.common.types.pb_wrappers.GraphMetadataPbWrapper": [[345, "src-common-types-pb-wrappers-graphmetadatapbwrapper"]], "src.common.types.pb_wrappers.sampling_op": [[346, "module-src.common.types.pb_wrappers.sampling_op"]], "src.common.types.pb_wrappers.RandomUniformPbWrapper": [[347, "src-common-types-pb-wrappers-randomuniformpbwrapper"]], "src.common.types.pb_wrappers.RandomWeightedPbWrapper": [[348, "src-common-types-pb-wrappers-randomweightedpbwrapper"]], "src.common.types.pb_wrappers.SamplingDirectionEnumType": [[349, "src-common-types-pb-wrappers-samplingdirectionenumtype"]], "src.common.types.pb_wrappers.SamplingOpPbWrapper": [[350, "src-common-types-pb-wrappers-samplingoppbwrapper"]], "src.common.types.pb_wrappers.TopKPbWrapper": [[351, "src-common-types-pb-wrappers-topkpbwrapper"]], "src.common.types.pb_wrappers.UserDefinedPbWrapper": [[352, "src-common-types-pb-wrappers-userdefinedpbwrapper"]], "src.common.types.pb_wrappers.subgraph_sampling_strategy": [[353, "module-src.common.types.pb_wrappers.subgraph_sampling_strategy"]], "src.common.types.pb_wrappers.GlobalRandomUniformStrategyPbWrapper": [[354, "src-common-types-pb-wrappers-globalrandomuniformstrategypbwrapper"]], "src.common.types.pb_wrappers.MessagePassingPathPbWrapper": [[355, "src-common-types-pb-wrappers-messagepassingpathpbwrapper"]], "src.common.types.pb_wrappers.MessagePassingPathStrategyPbWrapper": [[356, "src-common-types-pb-wrappers-messagepassingpathstrategypbwrapper"]], "src.common.types.pb_wrappers.SubgraphSamplingStrategyPbWrapper": [[357, "src-common-types-pb-wrappers-subgraphsamplingstrategypbwrapper"]], "src.common.types.pb_wrappers.task_metadata": [[358, "module-src.common.types.pb_wrappers.task_metadata"]], "src.common.types.pb_wrappers.TaskMetadataPbWrapper": [[359, "src-common-types-pb-wrappers-taskmetadatapbwrapper"]], "src.common.types.pb_wrappers.trained_model_metadata": [[360, "module-src.common.types.pb_wrappers.trained_model_metadata"]], "src.common.types.pb_wrappers.TrainedModelMetadataPbWrapper": [[361, "src-common-types-pb-wrappers-trainedmodelmetadatapbwrapper"]], "src.common.types.pb_wrappers.types": [[362, "module-src.common.types.pb_wrappers.types"]], "src.common.types.task_metadata": [[363, "module-src.common.types.task_metadata"]], "src.common.types.TaskMetadataType": [[364, "src-common-types-taskmetadatatype"]], "src.common.utils": [[365, "module-src.common.utils"]], "src.common.utils.bq": [[366, "module-src.common.utils.bq"]], "src.common.utils.BqUtils": [[367, "src-common-utils-bqutils"]], "src.common.utils.data": [[368, "module-src.common.utils.data"]], "src.common.utils.data.feature_serialization": [[369, "module-src.common.utils.data.feature_serialization"]], "src.common.utils.data.FeatureSerializationUtils": [[370, "src-common-utils-data-featureserializationutils"]], "src.common.utils.dataflow": [[371, "module-src.common.utils.dataflow"]], "src.common.utils.get_sanitized_dataflow_job_name": [[372, "src-common-utils-get-sanitized-dataflow-job-name"]], "src.common.utils.init_beam_pipeline_options": [[373, "src-common-utils-init-beam-pipeline-options"]], "src.common.utils.eval_metrics": [[374, "module-src.common.utils.eval_metrics"]], "src.common.utils.hit_rate_at_k": [[375, "src-common-utils-hit-rate-at-k"]], "src.common.utils.mean_reciprocal_rank": [[376, "src-common-utils-mean-reciprocal-rank"]], "src.common.utils.file_loader": [[377, "module-src.common.utils.file_loader"]], "src.common.utils.FileLoader": [[378, "src-common-utils-fileloader"]], "src.common.utils.gbml_protos": [[379, "module-src.common.utils.gbml_protos"]], "src.common.utils.TrainingSamplesSchemaProtoUtils": [[380, "src-common-utils-trainingsamplesschemaprotoutils"]], "src.common.utils.metrics_service_provider": [[381, "module-src.common.utils.metrics_service_provider"]], "src.common.utils.get_metrics_service_instance": [[382, "src-common-utils-get-metrics-service-instance"]], "src.common.utils.init_metrics_publisher_grouping_for_job": [[383, "src-common-utils-init-metrics-publisher-grouping-for-job"]], "src.common.utils.initialize_metrics": [[384, "src-common-utils-initialize-metrics"]], "src.common.utils.model": [[385, "module-src.common.utils.model"]], "src.common.utils.load_scripted_model_from_uri": [[386, "src-common-utils-load-scripted-model-from-uri"]], "src.common.utils.load_state_dict_from_uri": [[387, "src-common-utils-load-state-dict-from-uri"]], "src.common.utils.save_scripted_model": [[388, "src-common-utils-save-scripted-model"]], "src.common.utils.save_state_dict": [[389, "src-common-utils-save-state-dict"]], "src.common.utils.scheduler": [[390, "module-src.common.utils.scheduler"]], "src.common.utils.CosineDecayScheduler": [[391, "src-common-utils-cosinedecayscheduler"]], "src.common.utils.spark_job_manager": [[392, "module-src.common.utils.spark_job_manager"]], "src.common.utils.DataprocClusterInitData": [[393, "src-common-utils-dataprocclusterinitdata"]], "src.common.utils.SparkJobManager": [[394, "src-common-utils-sparkjobmanager"]], "src.common.utils.time": [[395, "module-src.common.utils.time"]], "src.common.utils.convert_days_to_ms": [[396, "src-common-utils-convert-days-to-ms"]], "src.common.utils.current_datetime": [[397, "src-common-utils-current-datetime"]], "src.common.utils.current_formatted_datetime": [[398, "src-common-utils-current-formatted-datetime"]], "src.common.utils.format_datetime": [[399, "src-common-utils-format-datetime"]], "src.common.utils.is_datetime_str_format_valid": [[400, "src-common-utils-is-datetime-str-format-valid"]], "src.common.utils.parse_formatted_datetime": [[401, "src-common-utils-parse-formatted-datetime"]], "src.common.utils.timeout": [[402, "module-src.common.utils.timeout"], [404, "src-common-utils-timeout"]], "src.common.utils.TimedOutException": [[403, "src-common-utils-timedoutexception"]], "src.config_populator": [[405, "module-src.config_populator"]], "src.config_populator.config_populator": [[406, "module-src.config_populator.config_populator"]], "src.ConfigPopulator": [[407, "src-configpopulator"]], "src.data_preprocessor": [[408, "module-src.data_preprocessor"]], "src.data_preprocessor.lib": [[409, "module-src.data_preprocessor.lib"]], "src.data_preprocessor.lib.enumerate": [[410, "module-src.data_preprocessor.lib.enumerate"]], "src.data_preprocessor.lib.enumerate.queries": [[411, "module-src.data_preprocessor.lib.enumerate.queries"]], "src.data_preprocessor.lib.ingest": [[412, "module-src.data_preprocessor.lib.ingest"]], "src.data_preprocessor.lib.transform": [[413, "module-src.data_preprocessor.lib.transform"]], "src.inference": [[414, "module-src.inference"]], "src.inference.v1": [[415, "module-src.inference.v1"]], "src.inference.v1.lib": [[416, "module-src.inference.v1.lib"]], "src.inference.v1.lib.inference_output_schema": [[417, "module-src.inference.v1.lib.inference_output_schema"]], "src.inference.v1.lib.InferenceOutputBigqueryTableSchema": [[418, "src-inference-v1-lib-inferenceoutputbigquerytableschema"]], "src.inference.v1.lib.InferenceOutputBigqueryTableSchemaBuilder": [[419, "src-inference-v1-lib-inferenceoutputbigquerytableschemabuilder"]], "src.inference.v1.lib.queries": [[420, "module-src.inference.v1.lib.queries"]], "src.inference.v1.lib.transforms": [[421, "module-src.inference.v1.lib.transforms"]], "src.inference.v2": [[422, "module-src.inference.v2"]], "src.post_process": [[423, "module-src.post_process"]], "src.post_process.lib": [[424, "module-src.post_process.lib"]], "src.post_process.lib.base_post_processor": [[425, "module-src.post_process.lib.base_post_processor"]], "src.post_process.lib.BasePostProcessor": [[426, "src-post-process-lib-basepostprocessor"]], "src.post_process.utils": [[427, "module-src.post_process.utils"]], "src.post_process.utils.component_runtime": [[428, "module-src.post_process.utils.component_runtime"]], "src.post_process.utils.assert_component_runtimes_match_expected_parameters": [[429, "src-post-process-utils-assert-component-runtimes-match-expected-parameters"]], "src.post_process.utils.get_runtime_manifest_from_kfp_pipeline": [[430, "src-post-process-utils-get-runtime-manifest-from-kfp-pipeline"]], "src.post_process.utils.cosine_similarity": [[431, "module-src.post_process.utils.cosine_similarity"]], "src.post_process.utils.assert_cosine_similarity_stats": [[432, "src-post-process-utils-assert-cosine-similarity-stats"]], "src.post_process.utils.calculate_cosine_sim_between_embedding_tables": [[433, "src-post-process-utils-calculate-cosine-sim-between-embedding-tables"]], "src.post_process.utils.calculate_cosine_similarity_stats": [[434, "src-post-process-utils-calculate-cosine-similarity-stats"]], "src.post_process.utils.get_table_paths_via_timedelta": [[435, "src-post-process-utils-get-table-paths-via-timedelta"]], "src.split_generator": [[436, "module-src.split_generator"]], "src.subgraph_sampler": [[437, "module-src.subgraph_sampler"]], "src.subgraph_sampler.lib": [[438, "module-src.subgraph_sampler.lib"]], "src.training": [[439, "module-src.training"]], "src.training.v1": [[440, "module-src.training.v1"]], "src.training.v1.lib": [[441, "module-src.training.v1.lib"]], "src.training.v1.lib.data_loaders": [[442, "module-src.training.v1.lib.data_loaders"]], "src.training.v1.lib.data_loaders.common": [[443, "module-src.training.v1.lib.data_loaders.common"]], "src.training.v1.lib.data_loaders.DataloaderConfig": [[444, "src-training-v1-lib-data-loaders-dataloaderconfig"]], "src.training.v1.lib.data_loaders.DataloaderTypes": [[445, "src-training-v1-lib-data-loaders-dataloadertypes"]], "src.training.v1.lib.eval_metrics": [[446, "module-src.training.v1.lib.eval_metrics"]], "src.training.v1.lib.get_metric_name_for_gauge_model_metrics_hit_rate_at": [[447, "src-training-v1-lib-get-metric-name-for-gauge-model-metrics-hit-rate-at"]], "src.training.v2": [[448, "module-src.training.v2"]], "src.validation_check": [[449, "module-src.validation_check"]], "src.validation_check.libs": [[450, "module-src.validation_check.libs"]], "src.validation_check.libs.resource_config_checks": [[451, "module-src.validation_check.libs.resource_config_checks"]], "src.validation_check.libs.check_if_inferencer_resource_config_valid": [[452, "src-validation-check-libs-check-if-inferencer-resource-config-valid"]], "src.validation_check.libs.check_if_preprocessor_resource_config_valid": [[453, "src-validation-check-libs-check-if-preprocessor-resource-config-valid"]], "src.validation_check.libs.check_if_shared_resource_config_valid": [[454, "src-validation-check-libs-check-if-shared-resource-config-valid"]], "src.validation_check.libs.check_if_split_generator_resource_config_valid": [[455, "src-validation-check-libs-check-if-split-generator-resource-config-valid"]], "src.validation_check.libs.check_if_subgraph_sampler_resource_config_valid": [[456, "src-validation-check-libs-check-if-subgraph-sampler-resource-config-valid"]], "src.validation_check.libs.check_if_trainer_resource_config_valid": [[457, "src-validation-check-libs-check-if-trainer-resource-config-valid"]], "src.validation_check.libs.utils": [[458, "module-src.validation_check.libs.utils"]], "src.validation_check.libs.assert_proto_field_value_is_truthy": [[459, "src-validation-check-libs-assert-proto-field-value-is-truthy"]], "src.validation_check.libs.assert_proto_has_field": [[460, "src-validation-check-libs-assert-proto-has-field"]], "API Reference": [[461, "api-reference"]], "Docker Images": [[462, "docker-images"]], "Public Assets": [[463, "public-assets"], [475, null]], "Resource Config Guide": [[464, "resource-config-guide"]], "Prerequisites": [[464, "prerequisites"]], "Resource Config Breakdown": [[464, "resource-config-breakdown"]], "Example: Full Template for Resource Config": [[464, "example-full-template-for-resource-config"]], "Task Config Guide": [[465, "task-config-guide"]], "Contributing Guide": [[466, "contributing-guide"]], "Data Preprocessor Spec Guide": [[467, "data-preprocessor-spec-guide"]], "Modeling Task Spec Guide": [[468, "modeling-task-spec-guide"]], "Example Walkthrough #1": [[469, "example-walkthrough-1"]], "Example Walkthrough #2": [[470, "example-walkthrough-2"]], "Cloud Setup Guide": [[471, "cloud-setup-guide"]], "GCP Project Setup Guide": [[471, "gcp-project-setup-guide"]], "AWS Project Setup Guide": [[471, "aws-project-setup-guide"]], "Installation": [[472, "installation"]], "Installation Steps": [[472, "installation-steps"]], "Orchestration": [[473, "orchestration"]], "Local Runner": [[473, "local-runner"]], "Kubeflow Orchestration": [[473, "kubeflow-orchestration"]], "Usage Example": [[473, "usage-example"]], "Importable GiGL": [[473, "importable-gigl"]], "Trainer Component Example:": [[473, "trainer-component-example"]], "Quick Start Guide": [[474, "quick-start-guide"]], "Install GiGL": [[474, "install-gigl"]], "Quick Start: Local": [[474, "quick-start-local"]], "Note": [[474, null]], "Quick Start: Running Distributed on Cloud": [[474, "quick-start-running-distributed-on-cloud"]], "Config Setup": [[474, "config-setup"]], "Running an End To End GiGL Pipeline": [[474, "running-an-end-to-end-gigl-pipeline"]], "Quick Start: Digging Deeper and Advanced Usage": [[474, "quick-start-digging-deeper-and-advanced-usage"]], "User Guide": [[475, "user-guide"]], "Overview": [[475, null]], "Getting Started": [[475, null]], "Custom Specs": [[475, null]], "Config Guides": [[475, null]], "Examples": [[475, null]], "Contributing": [[475, null]], "Trouble Shooting": [[475, null]], "GiGL Components": [[476, "gigl-components"]], "What is GiGL?": [[477, "what-is-gigl"]], "Why use GiGL?": [[477, "why-use-gigl"]], "Why not use GiGL?": [[477, "why-not-use-gigl"]], "How does GiGL work?": [[477, "how-does-gigl-work"]], "Frequently Asked Questions (FAQ)": [[478, "frequently-asked-questions-faq"]]}, "indexentries": {"common": [[7, "module-common"]], "module": [[7, "module-common"], [8, "module-common.beam"], [9, "module-common.collections"], [10, "module-common.collections.frozen_dict"], [12, "module-common.collections.itertools"], [14, "module-common.collections.sorted_dict"], [16, "module-common.data"], [17, "module-common.data.export"], [20, "module-common.env_config"], [22, "module-common.logger"], [24, "module-common.metrics"], [25, "module-common.metrics.base_metrics"], [27, "module-common.metrics.decorators"], [31, "module-common.metrics.metrics_interface"], [33, "module-common.services"], [34, "module-common.services.dataproc"], [36, "module-common.services.gcp_cloud_logging"], [39, "module-common.services.kfp"], [41, "module-common.services.vertex_ai"], [44, "module-common.types"], [45, "module-common.types.resource_config"], [47, "module-common.types.uri"], [48, "module-common.types.uri.gcs_uri"], [50, "module-common.types.uri.http_uri"], [52, "module-common.types.uri.local_uri"], [54, "module-common.types.uri.uri"], [56, "module-common.types.uri.uri_factory"], [58, "module-common.types.wrappers"], [59, "module-common.types.wrappers.argo_workflow_manifest"], [62, "module-common.types.wrappers.kfp_api"], [64, "module-common.utils"], [65, "module-common.utils.compute"], [66, "module-common.utils.compute.random"], [68, "module-common.utils.compute.serialization"], [69, "module-common.utils.compute.serialization.coder"], [71, "module-common.utils.compute.serialization.serialize_np"], [74, "module-common.utils.compute.serialization.serialize_protos"], [78, "module-common.utils.compute.serialization.serialize_string"], [80, "module-common.utils.dataflow"], [82, "module-common.utils.func_tools"], [84, "module-common.utils.gcs"], [86, "module-common.utils.kfp"], [88, "module-common.utils.local_fs"], [103, "module-common.utils.os_utils"], [107, "module-common.utils.proto_utils"], [109, "module-common.utils.retry"], [112, "module-common.utils.test_utils"], [116, "module-common.utils.torch_training"], [123, "module-env"], [124, "module-env.dep_constants"], [129, "module-env.pipelines_config"], [132, "module-orchestration"], [133, "module-orchestration.kubeflow"], [134, "module-orchestration.kubeflow.kfp_orchestrator"], [137, "module-orchestration.kubeflow.kfp_pipeline"], [147, "module-orchestration.kubeflow.utils"], [148, "module-orchestration.kubeflow.utils.glt_backend"], [150, "module-orchestration.kubeflow.utils.log_metrics"], [152, "module-orchestration.kubeflow.utils.resource"], [154, "module-src"], [155, "module-src.applied_tasks"], [156, "module-src.applied_tasks.test_tasks"], [157, "module-src.applied_tasks.test_tasks.academic"], [160, "module-src.common"], [161, "module-src.common.constants"], [162, "module-src.common.constants.bq"], [166, "module-src.common.constants.components"], [168, "module-src.common.constants.gcs"], [219, "module-src.common.constants.graph_metadata"], [220, "module-src.common.constants.local_fs"], [234, "module-src.common.constants.metrics"], [235, "module-src.common.constants.resource_config"], [236, "module-src.common.constants.test_assets"], [248, "module-src.common.constants.time"], [249, "module-src.common.constants.training"], [250, "module-src.common.graph_builder"], [251, "module-src.common.graph_builder.abstract_graph_builder"], [253, "module-src.common.graph_builder.gbml_graph_protocol"], [255, "module-src.common.graph_builder.pyg_graph_builder"], [257, "module-src.common.graph_builder.pyg_graph_data"], [259, "module-src.common.modeling_task_specs"], [260, "module-src.common.modeling_task_specs.utils"], [261, "module-src.common.modeling_task_specs.utils.early_stop"], [263, "module-src.common.modeling_task_specs.utils.parameter_loading"], [265, "module-src.common.modeling_task_specs.utils.profiler_wrapper"], [267, "module-src.common.models"], [268, "module-src.common.models.dgl"], [269, "module-src.common.models.dgl.homogenous"], [270, "module-src.common.models.layers"], [271, "module-src.common.models.layers.count_min_sketch"], [274, "module-src.common.models.layers.decoder"], [277, "module-src.common.models.layers.feature_interaction"], [280, "module-src.common.models.layers.normalization"], [282, "module-src.common.models.pyg"], [283, "module-src.common.models.pyg.heterogeneous"], [286, "module-src.common.models.pyg.nn"], [287, "module-src.common.models.pyg.nn.conv"], [288, "module-src.common.models.pyg.nn.conv.edge_attr_gat_conv"], [290, "module-src.common.models.pyg.nn.conv.gin_conv"], [292, "module-src.common.models.pyg.nn.conv.hgt_conv"], [294, "module-src.common.models.pyg.nn.conv.simplehgn_conv"], [296, "module-src.common.models.pyg.nn.models"], [297, "module-src.common.models.pyg.nn.models.feature_interaction"], [300, "module-src.common.models.pyg.nn.models.jumping_knowledge"], [302, "module-src.common.models.pyg.utils"], [304, "module-src.common.models.utils"], [305, "module-src.common.models.utils.torch"], [307, "module-src.common.translators"], [308, "module-src.common.translators.gbml_protos_translator"], [310, "module-src.common.translators.model_eval_metrics_translator"], [312, "module-src.common.types"], [313, "module-src.common.types.dataflow_job_options"], [315, "module-src.common.types.dataset_split"], [317, "module-src.common.types.exception"], [320, "module-src.common.types.features"], [322, "module-src.common.types.graph_data"], [327, "module-src.common.types.model_eval_metrics"], [331, "module-src.common.types.pb_wrappers"], [332, "module-src.common.types.pb_wrappers.dataset_metadata"], [334, "module-src.common.types.pb_wrappers.flattened_graph_metadata"], [336, "module-src.common.types.pb_wrappers.gigl_resource_config"], [338, "module-src.common.types.pb_wrappers.graph_data_types"], [342, "module-src.common.types.pb_wrappers.graph_data_types_utils"], [344, "module-src.common.types.pb_wrappers.graph_metadata"], [346, "module-src.common.types.pb_wrappers.sampling_op"], [353, "module-src.common.types.pb_wrappers.subgraph_sampling_strategy"], [358, "module-src.common.types.pb_wrappers.task_metadata"], [360, "module-src.common.types.pb_wrappers.trained_model_metadata"], [362, "module-src.common.types.pb_wrappers.types"], [363, "module-src.common.types.task_metadata"], [365, "module-src.common.utils"], [366, "module-src.common.utils.bq"], [368, "module-src.common.utils.data"], [369, "module-src.common.utils.data.feature_serialization"], [371, "module-src.common.utils.dataflow"], [374, "module-src.common.utils.eval_metrics"], [377, "module-src.common.utils.file_loader"], [379, "module-src.common.utils.gbml_protos"], [381, "module-src.common.utils.metrics_service_provider"], [385, "module-src.common.utils.model"], [390, "module-src.common.utils.scheduler"], [392, "module-src.common.utils.spark_job_manager"], [395, "module-src.common.utils.time"], [402, "module-src.common.utils.timeout"], [405, "module-src.config_populator"], [406, "module-src.config_populator.config_populator"], [408, "module-src.data_preprocessor"], [409, "module-src.data_preprocessor.lib"], [410, "module-src.data_preprocessor.lib.enumerate"], [411, "module-src.data_preprocessor.lib.enumerate.queries"], [412, "module-src.data_preprocessor.lib.ingest"], [413, "module-src.data_preprocessor.lib.transform"], [414, "module-src.inference"], [415, "module-src.inference.v1"], [416, "module-src.inference.v1.lib"], [417, "module-src.inference.v1.lib.inference_output_schema"], [420, "module-src.inference.v1.lib.queries"], [421, "module-src.inference.v1.lib.transforms"], [422, "module-src.inference.v2"], [423, "module-src.post_process"], [424, "module-src.post_process.lib"], [425, "module-src.post_process.lib.base_post_processor"], [427, "module-src.post_process.utils"], [428, "module-src.post_process.utils.component_runtime"], [431, "module-src.post_process.utils.cosine_similarity"], [436, "module-src.split_generator"], [437, "module-src.subgraph_sampler"], [438, "module-src.subgraph_sampler.lib"], [439, "module-src.training"], [440, "module-src.training.v1"], [441, "module-src.training.v1.lib"], [442, "module-src.training.v1.lib.data_loaders"], [443, "module-src.training.v1.lib.data_loaders.common"], [446, "module-src.training.v1.lib.eval_metrics"], [448, "module-src.training.v2"], [449, "module-src.validation_check"], [450, "module-src.validation_check.libs"], [451, "module-src.validation_check.libs.resource_config_checks"], [458, "module-src.validation_check.libs.utils"]], "common.beam": [[8, "module-common.beam"]], "common.collections": [[9, "module-common.collections"]], "common.collections.frozen_dict": [[10, "module-common.collections.frozen_dict"]], "frozendict (class in common.collections.frozen_dict)": [[11, "common.collections.frozen_dict.FrozenDict"]], "__class_getitem__() (common.collections.frozen_dict.frozendict class method)": [[11, "common.collections.frozen_dict.FrozenDict.__class_getitem__"]], "__eq__() (common.collections.frozen_dict.frozendict method)": [[11, "common.collections.frozen_dict.FrozenDict.__eq__"]], "__hash__() (common.collections.frozen_dict.frozendict method)": [[11, "common.collections.frozen_dict.FrozenDict.__hash__"]], "__init__() (common.collections.frozen_dict.frozendict method)": [[11, "common.collections.frozen_dict.FrozenDict.__init__"]], "__init_subclass__() (common.collections.frozen_dict.frozendict class method)": [[11, "common.collections.frozen_dict.FrozenDict.__init_subclass__"]], "__repr__() (common.collections.frozen_dict.frozendict method)": [[11, "common.collections.frozen_dict.FrozenDict.__repr__"]], "__subclasshook__() (common.collections.frozen_dict.frozendict class method)": [[11, "common.collections.frozen_dict.FrozenDict.__subclasshook__"]], "__weakref__ (common.collections.frozen_dict.frozendict attribute)": [[11, "common.collections.frozen_dict.FrozenDict.__weakref__"]], "get() (common.collections.frozen_dict.frozendict method)": [[11, "common.collections.frozen_dict.FrozenDict.get"]], "items() (common.collections.frozen_dict.frozendict method)": [[11, "common.collections.frozen_dict.FrozenDict.items"]], "keys() (common.collections.frozen_dict.frozendict method)": [[11, "common.collections.frozen_dict.FrozenDict.keys"]], "values() (common.collections.frozen_dict.frozendict method)": [[11, "common.collections.frozen_dict.FrozenDict.values"]], "common.collections.itertools": [[12, "module-common.collections.itertools"]], "batch() (in module common.collections.itertools)": [[13, "common.collections.itertools.batch"]], "common.collections.sorted_dict": [[14, "module-common.collections.sorted_dict"]], "sorteddict (class in common.collections.sorted_dict)": [[15, "common.collections.sorted_dict.SortedDict"]], "__class_getitem__() (common.collections.sorted_dict.sorteddict class method)": [[15, "common.collections.sorted_dict.SortedDict.__class_getitem__"]], "__eq__() (common.collections.sorted_dict.sorteddict method)": [[15, "common.collections.sorted_dict.SortedDict.__eq__"]], "__hash__ (common.collections.sorted_dict.sorteddict attribute)": [[15, "common.collections.sorted_dict.SortedDict.__hash__"]], "__init__() (common.collections.sorted_dict.sorteddict method)": [[15, "common.collections.sorted_dict.SortedDict.__init__"]], "__init_subclass__() (common.collections.sorted_dict.sorteddict class method)": [[15, "common.collections.sorted_dict.SortedDict.__init_subclass__"]], "__repr__() (common.collections.sorted_dict.sorteddict method)": [[15, "common.collections.sorted_dict.SortedDict.__repr__"]], "__subclasshook__() (common.collections.sorted_dict.sorteddict class method)": [[15, "common.collections.sorted_dict.SortedDict.__subclasshook__"]], "__weakref__ (common.collections.sorted_dict.sorteddict attribute)": [[15, "common.collections.sorted_dict.SortedDict.__weakref__"]], "get() (common.collections.sorted_dict.sorteddict method)": [[15, "common.collections.sorted_dict.SortedDict.get"]], "items() (common.collections.sorted_dict.sorteddict method)": [[15, "common.collections.sorted_dict.SortedDict.items"]], "keys() (common.collections.sorted_dict.sorteddict method)": [[15, "common.collections.sorted_dict.SortedDict.keys"]], "values() (common.collections.sorted_dict.sorteddict method)": [[15, "common.collections.sorted_dict.SortedDict.values"]], "common.data": [[16, "module-common.data"]], "common.data.export": [[17, "module-common.data.export"]], "embeddingexporter (class in common.data.export)": [[18, "common.data.export.EmbeddingExporter"]], "__init__() (common.data.export.embeddingexporter method)": [[18, "common.data.export.EmbeddingExporter.__init__"]], "__weakref__ (common.data.export.embeddingexporter attribute)": [[18, "common.data.export.EmbeddingExporter.__weakref__"]], "add_embedding() (common.data.export.embeddingexporter method)": [[18, "common.data.export.EmbeddingExporter.add_embedding"]], "flush_embeddings() (common.data.export.embeddingexporter method)": [[18, "common.data.export.EmbeddingExporter.flush_embeddings"]], "load_embeddings_to_bigquery() (in module common.data.export)": [[19, "common.data.export.load_embeddings_to_bigquery"]], "common.env_config": [[20, "module-common.env_config"]], "get_available_cpus() (in module common.env_config)": [[21, "common.env_config.get_available_cpus"]], "common.logger": [[22, "module-common.logger"]], "logger (class in common.logger)": [[23, "common.logger.Logger"]], "__init__() (common.logger.logger method)": [[23, "common.logger.Logger.__init__"]], "__repr__() (common.logger.logger method)": [[23, "common.logger.Logger.__repr__"]], "__weakref__ (common.logger.logger attribute)": [[23, "common.logger.Logger.__weakref__"]], "critical() (common.logger.logger method)": [[23, "common.logger.Logger.critical"]], "debug() (common.logger.logger method)": [[23, "common.logger.Logger.debug"]], "error() (common.logger.logger method)": [[23, "common.logger.Logger.error"]], "exception() (common.logger.logger method)": [[23, "common.logger.Logger.exception"]], "geteffectivelevel() (common.logger.logger method)": [[23, "common.logger.Logger.getEffectiveLevel"]], "hashandlers() (common.logger.logger method)": [[23, "common.logger.Logger.hasHandlers"]], "info() (common.logger.logger method)": [[23, "common.logger.Logger.info"]], "isenabledfor() (common.logger.logger method)": [[23, "common.logger.Logger.isEnabledFor"]], "log() (common.logger.logger method)": [[23, "common.logger.Logger.log"]], "process() (common.logger.logger method)": [[23, "common.logger.Logger.process"]], "setlevel() (common.logger.logger method)": [[23, "common.logger.Logger.setLevel"]], "warning() (common.logger.logger method)": [[23, "common.logger.Logger.warning"]], "common.metrics": [[24, "module-common.metrics"]], "common.metrics.base_metrics": [[25, "module-common.metrics.base_metrics"]], "nopmetricspublisher (class in common.metrics.base_metrics)": [[26, "common.metrics.base_metrics.NopMetricsPublisher"]], "__init__() (common.metrics.base_metrics.nopmetricspublisher method)": [[26, "common.metrics.base_metrics.NopMetricsPublisher.__init__"]], "__weakref__ (common.metrics.base_metrics.nopmetricspublisher attribute)": [[26, "common.metrics.base_metrics.NopMetricsPublisher.__weakref__"]], "common.metrics.decorators": [[27, "module-common.metrics.decorators"]], "timerrecordgranularity (class in common.metrics.decorators)": [[28, "common.metrics.decorators.TimerRecordGranularity"]], "flushes_metrics() (in module common.metrics.decorators)": [[29, "common.metrics.decorators.flushes_metrics"]], "profileit() (in module common.metrics.decorators)": [[30, "common.metrics.decorators.profileit"]], "common.metrics.metrics_interface": [[31, "module-common.metrics.metrics_interface"]], "opsmetricpublisher (class in common.metrics.metrics_interface)": [[32, "common.metrics.metrics_interface.OpsMetricPublisher"]], "__weakref__ (common.metrics.metrics_interface.opsmetricpublisher attribute)": [[32, "common.metrics.metrics_interface.OpsMetricPublisher.__weakref__"]], "common.services": [[33, "module-common.services"]], "common.services.dataproc": [[34, "module-common.services.dataproc"]], "dataprocservice (class in common.services.dataproc)": [[35, "common.services.dataproc.DataprocService"]], "__init__() (common.services.dataproc.dataprocservice method)": [[35, "common.services.dataproc.DataprocService.__init__"]], "__weakref__ (common.services.dataproc.dataprocservice attribute)": [[35, "common.services.dataproc.DataprocService.__weakref__"]], "create_cluster() (common.services.dataproc.dataprocservice method)": [[35, "common.services.dataproc.DataprocService.create_cluster"]], "delete_cluster() (common.services.dataproc.dataprocservice method)": [[35, "common.services.dataproc.DataprocService.delete_cluster"]], "does_cluster_exist() (common.services.dataproc.dataprocservice method)": [[35, "common.services.dataproc.DataprocService.does_cluster_exist"]], "get_running_job_ids_on_cluster() (common.services.dataproc.dataprocservice method)": [[35, "common.services.dataproc.DataprocService.get_running_job_ids_on_cluster"]], "get_submitted_job_ids() (common.services.dataproc.dataprocservice method)": [[35, "common.services.dataproc.DataprocService.get_submitted_job_ids"]], "submit_and_wait_scala_spark_job() (common.services.dataproc.dataprocservice method)": [[35, "common.services.dataproc.DataprocService.submit_and_wait_scala_spark_job"]], "common.services.gcp_cloud_logging": [[36, "module-common.services.gcp_cloud_logging"]], "gcpcloudloggingservice (class in common.services.gcp_cloud_logging)": [[37, "common.services.gcp_cloud_logging.GCPCloudLoggingService"]], "__init__() (common.services.gcp_cloud_logging.gcpcloudloggingservice method)": [[37, "common.services.gcp_cloud_logging.GCPCloudLoggingService.__init__"]], "__weakref__ (common.services.gcp_cloud_logging.gcpcloudloggingservice attribute)": [[37, "common.services.gcp_cloud_logging.GCPCloudLoggingService.__weakref__"]], "get_logs_iterator_from_k8_container() (common.services.gcp_cloud_logging.gcpcloudloggingservice method)": [[37, "common.services.gcp_cloud_logging.GCPCloudLoggingService.get_logs_iterator_from_k8_container"]], "logentries (class in common.services.gcp_cloud_logging)": [[38, "common.services.gcp_cloud_logging.LogEntries"]], "__init__() (common.services.gcp_cloud_logging.logentries method)": [[38, "common.services.gcp_cloud_logging.LogEntries.__init__"]], "__weakref__ (common.services.gcp_cloud_logging.logentries attribute)": [[38, "common.services.gcp_cloud_logging.LogEntries.__weakref__"]], "common.services.kfp": [[39, "module-common.services.kfp"]], "kfpservice (class in common.services.kfp)": [[40, "common.services.kfp.KFPService"]], "__init__() (common.services.kfp.kfpservice method)": [[40, "common.services.kfp.KFPService.__init__"]], "__weakref__ (common.services.kfp.kfpservice attribute)": [[40, "common.services.kfp.KFPService.__weakref__"]], "get_experiment_name_by_id() (common.services.kfp.kfpservice method)": [[40, "common.services.kfp.KFPService.get_experiment_name_by_id"]], "get_host_gcp_project_name() (common.services.kfp.kfpservice method)": [[40, "common.services.kfp.KFPService.get_host_gcp_project_name"]], "get_host_k8_cluster_name() (common.services.kfp.kfpservice method)": [[40, "common.services.kfp.KFPService.get_host_k8_cluster_name"]], "get_latest_experiment_from_name() (common.services.kfp.kfpservice method)": [[40, "common.services.kfp.KFPService.get_latest_experiment_from_name"]], "get_latest_run_with_name() (common.services.kfp.kfpservice method)": [[40, "common.services.kfp.KFPService.get_latest_run_with_name"]], "get_run() (common.services.kfp.kfpservice method)": [[40, "common.services.kfp.KFPService.get_run"]], "run_pipeline() (common.services.kfp.kfpservice method)": [[40, "common.services.kfp.KFPService.run_pipeline"]], "upload_pipeline_version() (common.services.kfp.kfpservice method)": [[40, "common.services.kfp.KFPService.upload_pipeline_version"]], "wait_for_run_completion() (common.services.kfp.kfpservice method)": [[40, "common.services.kfp.KFPService.wait_for_run_completion"]], "common.services.vertex_ai": [[41, "module-common.services.vertex_ai"]], "vertexaiservice (class in common.services.vertex_ai)": [[42, "common.services.vertex_ai.VertexAIService"]], "__init__() (common.services.vertex_ai.vertexaiservice method)": [[42, "common.services.vertex_ai.VertexAIService.__init__"]], "__weakref__ (common.services.vertex_ai.vertexaiservice attribute)": [[42, "common.services.vertex_ai.VertexAIService.__weakref__"]], "connect_worker_pool() (common.services.vertex_ai.vertexaiservice static method)": [[42, "common.services.vertex_ai.VertexAIService.connect_worker_pool"]], "get_host_name() (common.services.vertex_ai.vertexaiservice static method)": [[42, "common.services.vertex_ai.VertexAIService.get_host_name"]], "get_leader_hostname() (common.services.vertex_ai.vertexaiservice static method)": [[42, "common.services.vertex_ai.VertexAIService.get_leader_hostname"]], "get_leader_port() (common.services.vertex_ai.vertexaiservice static method)": [[42, "common.services.vertex_ai.VertexAIService.get_leader_port"]], "get_rank() (common.services.vertex_ai.vertexaiservice static method)": [[42, "common.services.vertex_ai.VertexAIService.get_rank"]], "get_vertex_ai_job_id() (common.services.vertex_ai.vertexaiservice static method)": [[42, "common.services.vertex_ai.VertexAIService.get_vertex_ai_job_id"]], "get_world_size() (common.services.vertex_ai.vertexaiservice static method)": [[42, "common.services.vertex_ai.VertexAIService.get_world_size"]], "is_currently_running_in_vertex_ai_job() (common.services.vertex_ai.vertexaiservice static method)": [[42, "common.services.vertex_ai.VertexAIService.is_currently_running_in_vertex_ai_job"]], "run() (common.services.vertex_ai.vertexaiservice method)": [[42, "common.services.vertex_ai.VertexAIService.run"]], "vertexaijobconfig (class in common.services.vertex_ai)": [[43, "common.services.vertex_ai.VertexAiJobConfig"]], "__eq__() (common.services.vertex_ai.vertexaijobconfig method)": [[43, "common.services.vertex_ai.VertexAiJobConfig.__eq__"]], "__hash__ (common.services.vertex_ai.vertexaijobconfig attribute)": [[43, "common.services.vertex_ai.VertexAiJobConfig.__hash__"]], "__init__() (common.services.vertex_ai.vertexaijobconfig method)": [[43, "common.services.vertex_ai.VertexAiJobConfig.__init__"]], "__repr__() (common.services.vertex_ai.vertexaijobconfig method)": [[43, "common.services.vertex_ai.VertexAiJobConfig.__repr__"]], "__weakref__ (common.services.vertex_ai.vertexaijobconfig attribute)": [[43, "common.services.vertex_ai.VertexAiJobConfig.__weakref__"]], "common.types": [[44, "module-common.types"]], "common.types.resource_config": [[45, "module-common.types.resource_config"]], "commonpipelinecomponentconfigs (class in common.types.resource_config)": [[46, "common.types.resource_config.CommonPipelineComponentConfigs"]], "__eq__() (common.types.resource_config.commonpipelinecomponentconfigs method)": [[46, "common.types.resource_config.CommonPipelineComponentConfigs.__eq__"]], "__hash__ (common.types.resource_config.commonpipelinecomponentconfigs attribute)": [[46, "common.types.resource_config.CommonPipelineComponentConfigs.__hash__"]], "__init__() (common.types.resource_config.commonpipelinecomponentconfigs method)": [[46, "common.types.resource_config.CommonPipelineComponentConfigs.__init__"]], "__repr__() (common.types.resource_config.commonpipelinecomponentconfigs method)": [[46, "common.types.resource_config.CommonPipelineComponentConfigs.__repr__"]], "__weakref__ (common.types.resource_config.commonpipelinecomponentconfigs attribute)": [[46, "common.types.resource_config.CommonPipelineComponentConfigs.__weakref__"]], "common.types.uri": [[47, "module-common.types.uri"]], "common.types.uri.gcs_uri": [[48, "module-common.types.uri.gcs_uri"]], "gcsuri (class in common.types.uri.gcs_uri)": [[49, "common.types.uri.gcs_uri.GcsUri"]], "__eq__() (common.types.uri.gcs_uri.gcsuri method)": [[49, "common.types.uri.gcs_uri.GcsUri.__eq__"]], "__hash__() (common.types.uri.gcs_uri.gcsuri method)": [[49, "common.types.uri.gcs_uri.GcsUri.__hash__"]], "__init__() (common.types.uri.gcs_uri.gcsuri method)": [[49, "common.types.uri.gcs_uri.GcsUri.__init__"]], "__repr__() (common.types.uri.gcs_uri.gcsuri method)": [[49, "common.types.uri.gcs_uri.GcsUri.__repr__"]], "__weakref__ (common.types.uri.gcs_uri.gcsuri attribute)": [[49, "common.types.uri.gcs_uri.GcsUri.__weakref__"]], "is_valid() (common.types.uri.gcs_uri.gcsuri class method)": [[49, "common.types.uri.gcs_uri.GcsUri.is_valid"]], "join() (common.types.uri.gcs_uri.gcsuri class method)": [[49, "common.types.uri.gcs_uri.GcsUri.join"]], "common.types.uri.http_uri": [[50, "module-common.types.uri.http_uri"]], "httpuri (class in common.types.uri.http_uri)": [[51, "common.types.uri.http_uri.HttpUri"]], "__eq__() (common.types.uri.http_uri.httpuri method)": [[51, "common.types.uri.http_uri.HttpUri.__eq__"]], "__hash__() (common.types.uri.http_uri.httpuri method)": [[51, "common.types.uri.http_uri.HttpUri.__hash__"]], "__init__() (common.types.uri.http_uri.httpuri method)": [[51, "common.types.uri.http_uri.HttpUri.__init__"]], "__repr__() (common.types.uri.http_uri.httpuri method)": [[51, "common.types.uri.http_uri.HttpUri.__repr__"]], "__weakref__ (common.types.uri.http_uri.httpuri attribute)": [[51, "common.types.uri.http_uri.HttpUri.__weakref__"]], "is_valid() (common.types.uri.http_uri.httpuri class method)": [[51, "common.types.uri.http_uri.HttpUri.is_valid"]], "join() (common.types.uri.http_uri.httpuri class method)": [[51, "common.types.uri.http_uri.HttpUri.join"]], "common.types.uri.local_uri": [[52, "module-common.types.uri.local_uri"]], "localuri (class in common.types.uri.local_uri)": [[53, "common.types.uri.local_uri.LocalUri"]], "__class_getitem__() (common.types.uri.local_uri.localuri class method)": [[53, "common.types.uri.local_uri.LocalUri.__class_getitem__"]], "__eq__() (common.types.uri.local_uri.localuri method)": [[53, "common.types.uri.local_uri.LocalUri.__eq__"]], "__fspath__() (common.types.uri.local_uri.localuri method)": [[53, "common.types.uri.local_uri.LocalUri.__fspath__"]], "__hash__() (common.types.uri.local_uri.localuri method)": [[53, "common.types.uri.local_uri.LocalUri.__hash__"]], "__init__() (common.types.uri.local_uri.localuri method)": [[53, "common.types.uri.local_uri.LocalUri.__init__"]], "__repr__() (common.types.uri.local_uri.localuri method)": [[53, "common.types.uri.local_uri.LocalUri.__repr__"]], "__subclasshook__() (common.types.uri.local_uri.localuri class method)": [[53, "common.types.uri.local_uri.LocalUri.__subclasshook__"]], "__weakref__ (common.types.uri.local_uri.localuri attribute)": [[53, "common.types.uri.local_uri.LocalUri.__weakref__"]], "absolute() (common.types.uri.local_uri.localuri method)": [[53, "common.types.uri.local_uri.LocalUri.absolute"]], "get_file_name() (common.types.uri.local_uri.localuri method)": [[53, "common.types.uri.local_uri.LocalUri.get_file_name"]], "is_valid() (common.types.uri.local_uri.localuri class method)": [[53, "common.types.uri.local_uri.LocalUri.is_valid"]], "join() (common.types.uri.local_uri.localuri class method)": [[53, "common.types.uri.local_uri.LocalUri.join"]], "common.types.uri.uri": [[54, "module-common.types.uri.uri"]], "uri (class in common.types.uri.uri)": [[55, "common.types.uri.uri.Uri"]], "__eq__() (common.types.uri.uri.uri method)": [[55, "common.types.uri.uri.Uri.__eq__"]], "__hash__() (common.types.uri.uri.uri method)": [[55, "common.types.uri.uri.Uri.__hash__"]], "__init__() (common.types.uri.uri.uri method)": [[55, "common.types.uri.uri.Uri.__init__"]], "__repr__() (common.types.uri.uri.uri method)": [[55, "common.types.uri.uri.Uri.__repr__"]], "__weakref__ (common.types.uri.uri.uri attribute)": [[55, "common.types.uri.uri.Uri.__weakref__"]], "is_valid() (common.types.uri.uri.uri class method)": [[55, "common.types.uri.uri.Uri.is_valid"]], "join() (common.types.uri.uri.uri class method)": [[55, "common.types.uri.uri.Uri.join"]], "common.types.uri.uri_factory": [[56, "module-common.types.uri.uri_factory"]], "urifactory (class in common.types.uri.uri_factory)": [[57, "common.types.uri.uri_factory.UriFactory"]], "__weakref__ (common.types.uri.uri_factory.urifactory attribute)": [[57, "common.types.uri.uri_factory.UriFactory.__weakref__"]], "create_uri() (common.types.uri.uri_factory.urifactory static method)": [[57, "common.types.uri.uri_factory.UriFactory.create_uri"]], "common.types.wrappers": [[58, "module-common.types.wrappers"]], "common.types.wrappers.argo_workflow_manifest": [[59, "module-common.types.wrappers.argo_workflow_manifest"]], "argoworkflowmanifestwrapper (class in common.types.wrappers.argo_workflow_manifest)": [[60, "common.types.wrappers.argo_workflow_manifest.ArgoWorkflowManifestWrapper"]], "__init__() (common.types.wrappers.argo_workflow_manifest.argoworkflowmanifestwrapper method)": [[60, "common.types.wrappers.argo_workflow_manifest.ArgoWorkflowManifestWrapper.__init__"]], "__weakref__ (common.types.wrappers.argo_workflow_manifest.argoworkflowmanifestwrapper attribute)": [[60, "common.types.wrappers.argo_workflow_manifest.ArgoWorkflowManifestWrapper.__weakref__"]], "component_status_by_component_display_name (common.types.wrappers.argo_workflow_manifest.argoworkflowmanifestwrapper property)": [[60, "common.types.wrappers.argo_workflow_manifest.ArgoWorkflowManifestWrapper.component_status_by_component_display_name"]], "argoworkflownodestatus (class in common.types.wrappers.argo_workflow_manifest)": [[61, "common.types.wrappers.argo_workflow_manifest.ArgoWorkflowNodeStatus"]], "__init__() (common.types.wrappers.argo_workflow_manifest.argoworkflownodestatus method)": [[61, "common.types.wrappers.argo_workflow_manifest.ArgoWorkflowNodeStatus.__init__"]], "__weakref__ (common.types.wrappers.argo_workflow_manifest.argoworkflownodestatus attribute)": [[61, "common.types.wrappers.argo_workflow_manifest.ArgoWorkflowNodeStatus.__weakref__"]], "common.types.wrappers.kfp_api": [[62, "module-common.types.wrappers.kfp_api"]], "apirundetailwrapper (class in common.types.wrappers.kfp_api)": [[63, "common.types.wrappers.kfp_api.ApiRunDetailWrapper"]], "__init__() (common.types.wrappers.kfp_api.apirundetailwrapper method)": [[63, "common.types.wrappers.kfp_api.ApiRunDetailWrapper.__init__"]], "__weakref__ (common.types.wrappers.kfp_api.apirundetailwrapper attribute)": [[63, "common.types.wrappers.kfp_api.ApiRunDetailWrapper.__weakref__"]], "common.utils": [[64, "module-common.utils"]], "common.utils.compute": [[65, "module-common.utils.compute"]], "common.utils.compute.random": [[66, "module-common.utils.compute.random"]], "make_compute_deterministic_and_set_seed() (in module common.utils.compute.random)": [[67, "common.utils.compute.random.make_compute_deterministic_and_set_seed"]], "common.utils.compute.serialization": [[68, "module-common.utils.compute.serialization"]], "common.utils.compute.serialization.coder": [[69, "module-common.utils.compute.serialization.coder"]], "coderprotocol (class in common.utils.compute.serialization.coder)": [[70, "common.utils.compute.serialization.coder.CoderProtocol"]], "__init__() (common.utils.compute.serialization.coder.coderprotocol method)": [[70, "common.utils.compute.serialization.coder.CoderProtocol.__init__"]], "__init_subclass__() (common.utils.compute.serialization.coder.coderprotocol class method)": [[70, "common.utils.compute.serialization.coder.CoderProtocol.__init_subclass__"]], "__subclasshook__() (common.utils.compute.serialization.coder.coderprotocol method)": [[70, "common.utils.compute.serialization.coder.CoderProtocol.__subclasshook__"]], "__weakref__ (common.utils.compute.serialization.coder.coderprotocol attribute)": [[70, "common.utils.compute.serialization.coder.CoderProtocol.__weakref__"]], "common.utils.compute.serialization.serialize_np": [[71, "module-common.utils.compute.serialization.serialize_np"]], "encodedndarray (class in common.utils.compute.serialization.serialize_np)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray"]], "__class_getitem__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__class_getitem__"]], "__contains__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__contains__"]], "__delitem__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__delitem__"]], "__eq__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__eq__"]], "__ge__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__ge__"]], "__getattribute__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__getattribute__"]], "__getitem__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__getitem__"]], "__gt__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__gt__"]], "__hash__ (common.utils.compute.serialization.serialize_np.encodedndarray attribute)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__hash__"]], "__init__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__init__"]], "__ior__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__ior__"]], "__iter__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__iter__"]], "__le__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__le__"]], "__len__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__len__"]], "__lt__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__lt__"]], "__ne__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__ne__"]], "__new__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__new__"]], "__or__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__or__"]], "__repr__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__repr__"]], "__reversed__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__reversed__"]], "__ror__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__ror__"]], "__setitem__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__setitem__"]], "__sizeof__() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__sizeof__"]], "__weakref__ (common.utils.compute.serialization.serialize_np.encodedndarray attribute)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.__weakref__"]], "clear() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.clear"]], "copy() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.copy"]], "fromkeys() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.fromkeys"]], "get() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.get"]], "items() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.items"]], "keys() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.keys"]], "pop() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.pop"]], "popitem() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.popitem"]], "setdefault() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.setdefault"]], "update() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.update"]], "values() (common.utils.compute.serialization.serialize_np.encodedndarray method)": [[72, "common.utils.compute.serialization.serialize_np.EncodedNdArray.values"]], "numpycoder (class in common.utils.compute.serialization.serialize_np)": [[73, "common.utils.compute.serialization.serialize_np.NumpyCoder"]], "__init__() (common.utils.compute.serialization.serialize_np.numpycoder method)": [[73, "common.utils.compute.serialization.serialize_np.NumpyCoder.__init__"]], "__init_subclass__() (common.utils.compute.serialization.serialize_np.numpycoder class method)": [[73, "common.utils.compute.serialization.serialize_np.NumpyCoder.__init_subclass__"]], "__subclasshook__() (common.utils.compute.serialization.serialize_np.numpycoder method)": [[73, "common.utils.compute.serialization.serialize_np.NumpyCoder.__subclasshook__"]], "__weakref__ (common.utils.compute.serialization.serialize_np.numpycoder attribute)": [[73, "common.utils.compute.serialization.serialize_np.NumpyCoder.__weakref__"]], "common.utils.compute.serialization.serialize_protos": [[74, "module-common.utils.compute.serialization.serialize_protos"]], "edgepbwrappercoder (class in common.utils.compute.serialization.serialize_protos)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder"]], "__eq__() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.__eq__"]], "__hash__() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.__hash__"]], "__init__() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.__init__"]], "__repr__() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.__repr__"]], "__weakref__ (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder attribute)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.__weakref__"]], "as_deterministic_coder() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.as_deterministic_coder"]], "decode() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.decode"]], "decode_nested() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.decode_nested"]], "encode() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.encode"]], "encode_nested() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.encode_nested"]], "estimate_size() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.estimate_size"]], "from_runner_api() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder class method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.from_runner_api"]], "get_impl() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.get_impl"]], "is_deterministic() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.is_deterministic"]], "register_structured_urn() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder static method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.register_structured_urn"]], "register_urn() (common.utils.compute.serialization.serialize_protos.edgepbwrappercoder class method)": [[75, "common.utils.compute.serialization.serialize_protos.EdgePbWrapperCoder.register_urn"]], "graphpbwrappercoder (class in common.utils.compute.serialization.serialize_protos)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder"]], "__eq__() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.__eq__"]], "__hash__() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.__hash__"]], "__init__() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.__init__"]], "__repr__() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.__repr__"]], "__weakref__ (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder attribute)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.__weakref__"]], "as_deterministic_coder() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.as_deterministic_coder"]], "decode() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.decode"]], "decode_nested() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.decode_nested"]], "encode() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.encode"]], "encode_nested() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.encode_nested"]], "estimate_size() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.estimate_size"]], "from_runner_api() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder class method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.from_runner_api"]], "get_impl() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.get_impl"]], "is_deterministic() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.is_deterministic"]], "register_structured_urn() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder static method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.register_structured_urn"]], "register_urn() (common.utils.compute.serialization.serialize_protos.graphpbwrappercoder class method)": [[76, "common.utils.compute.serialization.serialize_protos.GraphPbWrapperCoder.register_urn"]], "nodepbwrappercoder (class in common.utils.compute.serialization.serialize_protos)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder"]], "__eq__() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.__eq__"]], "__hash__() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.__hash__"]], "__init__() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.__init__"]], "__repr__() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.__repr__"]], "__weakref__ (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder attribute)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.__weakref__"]], "as_deterministic_coder() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.as_deterministic_coder"]], "decode() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.decode"]], "decode_nested() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.decode_nested"]], "encode() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.encode"]], "encode_nested() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.encode_nested"]], "estimate_size() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.estimate_size"]], "from_runner_api() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder class method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.from_runner_api"]], "get_impl() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.get_impl"]], "is_deterministic() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.is_deterministic"]], "register_structured_urn() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder static method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.register_structured_urn"]], "register_urn() (common.utils.compute.serialization.serialize_protos.nodepbwrappercoder class method)": [[77, "common.utils.compute.serialization.serialize_protos.NodePbWrapperCoder.register_urn"]], "common.utils.compute.serialization.serialize_string": [[78, "module-common.utils.compute.serialization.serialize_string"]], "stringcoder (class in common.utils.compute.serialization.serialize_string)": [[79, "common.utils.compute.serialization.serialize_string.StringCoder"]], "__init__() (common.utils.compute.serialization.serialize_string.stringcoder method)": [[79, "common.utils.compute.serialization.serialize_string.StringCoder.__init__"]], "__init_subclass__() (common.utils.compute.serialization.serialize_string.stringcoder class method)": [[79, "common.utils.compute.serialization.serialize_string.StringCoder.__init_subclass__"]], "__subclasshook__() (common.utils.compute.serialization.serialize_string.stringcoder method)": [[79, "common.utils.compute.serialization.serialize_string.StringCoder.__subclasshook__"]], "__weakref__ (common.utils.compute.serialization.serialize_string.stringcoder attribute)": [[79, "common.utils.compute.serialization.serialize_string.StringCoder.__weakref__"]], "common.utils.dataflow": [[80, "module-common.utils.dataflow"]], "get_console_uri_from_pipeline_result() (in module common.utils.dataflow)": [[81, "common.utils.dataflow.get_console_uri_from_pipeline_result"]], "common.utils.func_tools": [[82, "module-common.utils.func_tools"]], "lru_cache() (in module common.utils.func_tools)": [[83, "common.utils.func_tools.lru_cache"]], "common.utils.gcs": [[84, "module-common.utils.gcs"]], "gcsutils (class in common.utils.gcs)": [[85, "common.utils.gcs.GcsUtils"]], "__init__() (common.utils.gcs.gcsutils method)": [[85, "common.utils.gcs.GcsUtils.__init__"]], "__weakref__ (common.utils.gcs.gcsutils attribute)": [[85, "common.utils.gcs.GcsUtils.__weakref__"]], "download_files_from_gcs_paths_to_local_paths() (common.utils.gcs.gcsutils method)": [[85, "common.utils.gcs.GcsUtils.download_files_from_gcs_paths_to_local_paths"]], "list_uris_with_gcs_path_pattern() (common.utils.gcs.gcsutils method)": [[85, "common.utils.gcs.GcsUtils.list_uris_with_gcs_path_pattern"]], "upload_files_to_gcs() (common.utils.gcs.gcsutils method)": [[85, "common.utils.gcs.GcsUtils.upload_files_to_gcs"]], "upload_from_filelike() (common.utils.gcs.gcsutils method)": [[85, "common.utils.gcs.GcsUtils.upload_from_filelike"]], "common.utils.kfp": [[86, "module-common.utils.kfp"]], "kfpoutputviewers (class in common.utils.kfp)": [[87, "common.utils.kfp.KfpOutputViewers"]], "__init__() (common.utils.kfp.kfpoutputviewers method)": [[87, "common.utils.kfp.KfpOutputViewers.__init__"]], "__weakref__ (common.utils.kfp.kfpoutputviewers attribute)": [[87, "common.utils.kfp.KfpOutputViewers.__weakref__"]], "common.utils.local_fs": [[88, "module-common.utils.local_fs"]], "filesystementity (class in common.utils.local_fs)": [[89, "common.utils.local_fs.FileSystemEntity"]], "append_line_to_file() (in module common.utils.local_fs)": [[90, "common.utils.local_fs.append_line_to_file"]], "copy_files() (in module common.utils.local_fs)": [[91, "common.utils.local_fs.copy_files"]], "count_files_with_uri_prefix() (in module common.utils.local_fs)": [[92, "common.utils.local_fs.count_files_with_uri_prefix"]], "create_empty_file_if_none_exists() (in module common.utils.local_fs)": [[93, "common.utils.local_fs.create_empty_file_if_none_exists"]], "create_file_symlinks() (in module common.utils.local_fs)": [[94, "common.utils.local_fs.create_file_symlinks"]], "delete_and_create_local_path() (in module common.utils.local_fs)": [[95, "common.utils.local_fs.delete_and_create_local_path"]], "delete_local_directory() (in module common.utils.local_fs)": [[96, "common.utils.local_fs.delete_local_directory"]], "does_path_exist() (in module common.utils.local_fs)": [[97, "common.utils.local_fs.does_path_exist"]], "list_at_path() (in module common.utils.local_fs)": [[98, "common.utils.local_fs.list_at_path"]], "remove_file_if_exist() (in module common.utils.local_fs)": [[99, "common.utils.local_fs.remove_file_if_exist"]], "remove_file_or_folder_if_exist() (in module common.utils.local_fs)": [[100, "common.utils.local_fs.remove_file_or_folder_if_exist"]], "remove_folder_if_exist() (in module common.utils.local_fs)": [[101, "common.utils.local_fs.remove_folder_if_exist"]], "remove_line_from_file() (in module common.utils.local_fs)": [[102, "common.utils.local_fs.remove_line_from_file"]], "common.utils.os_utils": [[103, "module-common.utils.os_utils"]], "import_obj() (in module common.utils.os_utils)": [[104, "common.utils.os_utils.import_obj"]], "num_lines_in_file() (in module common.utils.os_utils)": [[105, "common.utils.os_utils.num_lines_in_file"]], "run_command_and_stream_stdout() (in module common.utils.os_utils)": [[106, "common.utils.os_utils.run_command_and_stream_stdout"]], "common.utils.proto_utils": [[107, "module-common.utils.proto_utils"]], "protoutils (class in common.utils.proto_utils)": [[108, "common.utils.proto_utils.ProtoUtils"]], "__init__() (common.utils.proto_utils.protoutils method)": [[108, "common.utils.proto_utils.ProtoUtils.__init__"]], "__weakref__ (common.utils.proto_utils.protoutils attribute)": [[108, "common.utils.proto_utils.ProtoUtils.__weakref__"]], "common.utils.retry": [[109, "module-common.utils.retry"]], "retriesfailedexception": [[110, "common.utils.retry.RetriesFailedException"]], "retry() (in module common.utils.retry)": [[111, "common.utils.retry.retry"]], "common.utils.test_utils": [[112, "module-common.utils.test_utils"]], "testargs (class in common.utils.test_utils)": [[113, "common.utils.test_utils.TestArgs"]], "__delattr__() (common.utils.test_utils.testargs method)": [[113, "common.utils.test_utils.TestArgs.__delattr__"]], "__eq__() (common.utils.test_utils.testargs method)": [[113, "common.utils.test_utils.TestArgs.__eq__"]], "__hash__() (common.utils.test_utils.testargs method)": [[113, "common.utils.test_utils.TestArgs.__hash__"]], "__init__() (common.utils.test_utils.testargs method)": [[113, "common.utils.test_utils.TestArgs.__init__"]], "__repr__() (common.utils.test_utils.testargs method)": [[113, "common.utils.test_utils.TestArgs.__repr__"]], "__setattr__() (common.utils.test_utils.testargs method)": [[113, "common.utils.test_utils.TestArgs.__setattr__"]], "__weakref__ (common.utils.test_utils.testargs attribute)": [[113, "common.utils.test_utils.TestArgs.__weakref__"]], "test_file_pattern (common.utils.test_utils.testargs attribute)": [[113, "common.utils.test_utils.TestArgs.test_file_pattern"]], "parse_args() (in module common.utils.test_utils)": [[114, "common.utils.test_utils.parse_args"]], "run_tests() (in module common.utils.test_utils)": [[115, "common.utils.test_utils.run_tests"]], "common.utils.torch_training": [[116, "module-common.utils.torch_training"]], "get_distributed_backend() (in module common.utils.torch_training)": [[117, "common.utils.torch_training.get_distributed_backend"]], "get_rank() (in module common.utils.torch_training)": [[118, "common.utils.torch_training.get_rank"]], "get_world_size() (in module common.utils.torch_training)": [[119, "common.utils.torch_training.get_world_size"]], "is_distributed_available_and_initialized() (in module common.utils.torch_training)": [[120, "common.utils.torch_training.is_distributed_available_and_initialized"]], "is_distributed_local_debug() (in module common.utils.torch_training)": [[121, "common.utils.torch_training.is_distributed_local_debug"]], "should_distribute() (in module common.utils.torch_training)": [[122, "common.utils.torch_training.should_distribute"]], "env": [[123, "module-env"]], "env.dep_constants": [[124, "module-env.dep_constants"]], "get_compiled_jar_path() (in module env.dep_constants)": [[125, "env.dep_constants.get_compiled_jar_path"]], "get_current_jar_file() (in module env.dep_constants)": [[126, "env.dep_constants.get_current_jar_file"]], "get_jar_file_uri() (in module env.dep_constants)": [[127, "env.dep_constants.get_jar_file_uri"]], "get_local_jar_directory() (in module env.dep_constants)": [[128, "env.dep_constants.get_local_jar_directory"]], "env.pipelines_config": [[129, "module-env.pipelines_config"]], "get_resource_config() (in module env.pipelines_config)": [[130, "env.pipelines_config.get_resource_config"]], "is_resource_config_loaded() (in module env.pipelines_config)": [[131, "env.pipelines_config.is_resource_config_loaded"]], "orchestration": [[132, "module-orchestration"]], "orchestration.kubeflow": [[133, "module-orchestration.kubeflow"]], "orchestration.kubeflow.kfp_orchestrator": [[134, "module-orchestration.kubeflow.kfp_orchestrator"]], "kfpenvmetadata (class in orchestration.kubeflow.kfp_orchestrator)": [[135, "orchestration.kubeflow.kfp_orchestrator.KfpEnvMetadata"]], "__eq__() (orchestration.kubeflow.kfp_orchestrator.kfpenvmetadata method)": [[135, "orchestration.kubeflow.kfp_orchestrator.KfpEnvMetadata.__eq__"]], "__hash__ (orchestration.kubeflow.kfp_orchestrator.kfpenvmetadata attribute)": [[135, "orchestration.kubeflow.kfp_orchestrator.KfpEnvMetadata.__hash__"]], "__init__() (orchestration.kubeflow.kfp_orchestrator.kfpenvmetadata method)": [[135, "orchestration.kubeflow.kfp_orchestrator.KfpEnvMetadata.__init__"]], "__repr__() (orchestration.kubeflow.kfp_orchestrator.kfpenvmetadata method)": [[135, "orchestration.kubeflow.kfp_orchestrator.KfpEnvMetadata.__repr__"]], "__weakref__ (orchestration.kubeflow.kfp_orchestrator.kfpenvmetadata attribute)": [[135, "orchestration.kubeflow.kfp_orchestrator.KfpEnvMetadata.__weakref__"]], "kfporchestrator (class in orchestration.kubeflow.kfp_orchestrator)": [[136, "orchestration.kubeflow.kfp_orchestrator.KfpOrchestrator"]], "__init__() (orchestration.kubeflow.kfp_orchestrator.kfporchestrator method)": [[136, "orchestration.kubeflow.kfp_orchestrator.KfpOrchestrator.__init__"]], "__weakref__ (orchestration.kubeflow.kfp_orchestrator.kfporchestrator attribute)": [[136, "orchestration.kubeflow.kfp_orchestrator.KfpOrchestrator.__weakref__"]], "compile() (orchestration.kubeflow.kfp_orchestrator.kfporchestrator class method)": [[136, "id0"]], "compile() (orchestration.kubeflow.kfp_orchestrator.kfporchestrator method)": [[136, "orchestration.kubeflow.kfp_orchestrator.KfpOrchestrator.compile"]], "run() (orchestration.kubeflow.kfp_orchestrator.kfporchestrator method)": [[136, "orchestration.kubeflow.kfp_orchestrator.KfpOrchestrator.run"]], "upload() (orchestration.kubeflow.kfp_orchestrator.kfporchestrator method)": [[136, "orchestration.kubeflow.kfp_orchestrator.KfpOrchestrator.upload"]], "wait_for_completion() (orchestration.kubeflow.kfp_orchestrator.kfporchestrator method)": [[136, "orchestration.kubeflow.kfp_orchestrator.KfpOrchestrator.wait_for_completion"]], "orchestration.kubeflow.kfp_pipeline": [[137, "module-orchestration.kubeflow.kfp_pipeline"]], "create_config_populator_task_op() (in module orchestration.kubeflow.kfp_pipeline)": [[138, "orchestration.kubeflow.kfp_pipeline.create_config_populator_task_op"]], "create_data_preprocessor_task_op() (in module orchestration.kubeflow.kfp_pipeline)": [[139, "orchestration.kubeflow.kfp_pipeline.create_data_preprocessor_task_op"]], "create_inferencer_task_op() (in module orchestration.kubeflow.kfp_pipeline)": [[140, "orchestration.kubeflow.kfp_pipeline.create_inferencer_task_op"]], "create_post_processor_task_op() (in module orchestration.kubeflow.kfp_pipeline)": [[141, "orchestration.kubeflow.kfp_pipeline.create_post_processor_task_op"]], "create_split_generator_task_op() (in module orchestration.kubeflow.kfp_pipeline)": [[142, "orchestration.kubeflow.kfp_pipeline.create_split_generator_task_op"]], "create_subgraph_sampler_task_op() (in module orchestration.kubeflow.kfp_pipeline)": [[143, "orchestration.kubeflow.kfp_pipeline.create_subgraph_sampler_task_op"]], "create_trainer_task_op() (in module orchestration.kubeflow.kfp_pipeline)": [[144, "orchestration.kubeflow.kfp_pipeline.create_trainer_task_op"]], "generate_component_task() (in module orchestration.kubeflow.kfp_pipeline)": [[145, "orchestration.kubeflow.kfp_pipeline.generate_component_task"]], "generate_pipeline() (in module orchestration.kubeflow.kfp_pipeline)": [[146, "orchestration.kubeflow.kfp_pipeline.generate_pipeline"]], "orchestration.kubeflow.utils": [[147, "module-orchestration.kubeflow.utils"]], "orchestration.kubeflow.utils.glt_backend": [[148, "module-orchestration.kubeflow.utils.glt_backend"]], "check_glt_backend_eligibility_component() (in module orchestration.kubeflow.utils.glt_backend)": [[149, "orchestration.kubeflow.utils.glt_backend.check_glt_backend_eligibility_component"]], "orchestration.kubeflow.utils.log_metrics": [[150, "module-orchestration.kubeflow.utils.log_metrics"]], "log_eval_metrics_to_ui() (in module orchestration.kubeflow.utils.log_metrics)": [[151, "orchestration.kubeflow.utils.log_metrics.log_eval_metrics_to_ui"]], "orchestration.kubeflow.utils.resource": [[152, "module-orchestration.kubeflow.utils.resource"]], "add_task_resource_requirements() (in module orchestration.kubeflow.utils.resource)": [[153, "orchestration.kubeflow.utils.resource.add_task_resource_requirements"]], "src": [[154, "module-src"]], "src.applied_tasks": [[155, "module-src.applied_tasks"]], "src.applied_tasks.test_tasks": [[156, "module-src.applied_tasks.test_tasks"]], "src.applied_tasks.test_tasks.academic": [[157, "module-src.applied_tasks.test_tasks.academic"]], "get_pyg_cora_dataset() (in module src.applied_tasks.test_tasks.academic)": [[158, "src.applied_tasks.test_tasks.academic.get_pyg_cora_dataset"]], "log_stats_for_pyg_planetoid_dataset() (in module src.applied_tasks.test_tasks.academic)": [[159, "src.applied_tasks.test_tasks.academic.log_stats_for_pyg_planetoid_dataset"]], "src.common": [[160, "module-src.common"]], "src.common.constants": [[161, "module-src.common.constants"]], "src.common.constants.bq": [[162, "module-src.common.constants.bq"]], "get_embeddings_dataset_bq_path() (in module src.common.constants.bq)": [[163, "src.common.constants.bq.get_embeddings_dataset_bq_path"]], "get_embeddings_table() (in module src.common.constants.bq)": [[164, "src.common.constants.bq.get_embeddings_table"]], "get_predictions_table() (in module src.common.constants.bq)": [[165, "src.common.constants.bq.get_predictions_table"]], "src.common.constants.components": [[166, "module-src.common.constants.components"]], "giglcomponents (class in src.common.constants.components)": [[167, "src.common.constants.components.GiGLComponents"]], "src.common.constants.gcs": [[168, "module-src.common.constants.gcs"]], "get_applied_task_perm_gcs_path() (in module src.common.constants.gcs)": [[169, "src.common.constants.gcs.get_applied_task_perm_gcs_path"]], "get_applied_task_temp_gcs_path() (in module src.common.constants.gcs)": [[170, "src.common.constants.gcs.get_applied_task_temp_gcs_path"]], "get_applied_task_temp_regional_gcs_path() (in module src.common.constants.gcs)": [[171, "src.common.constants.gcs.get_applied_task_temp_regional_gcs_path"]], "get_config_populator_assets_perm_gcs_path() (in module src.common.constants.gcs)": [[172, "src.common.constants.gcs.get_config_populator_assets_perm_gcs_path"]], "get_data_preprocessor_assets_perm_gcs_path() (in module src.common.constants.gcs)": [[173, "src.common.constants.gcs.get_data_preprocessor_assets_perm_gcs_path"]], "get_data_preprocessor_assets_temp_gcs_path() (in module src.common.constants.gcs)": [[174, "src.common.constants.gcs.get_data_preprocessor_assets_temp_gcs_path"]], "get_data_preprocessor_staging_gcs_path() (in module src.common.constants.gcs)": [[175, "src.common.constants.gcs.get_data_preprocessor_staging_gcs_path"]], "get_dataflow_staging_gcs_path() (in module src.common.constants.gcs)": [[176, "src.common.constants.gcs.get_dataflow_staging_gcs_path"]], "get_dataflow_temp_gcs_path() (in module src.common.constants.gcs)": [[177, "src.common.constants.gcs.get_dataflow_temp_gcs_path"]], "get_frozen_gbml_config_proto_gcs_path() (in module src.common.constants.gcs)": [[178, "src.common.constants.gcs.get_frozen_gbml_config_proto_gcs_path"]], "get_inferencer_asset_dir_gcs_path() (in module src.common.constants.gcs)": [[179, "src.common.constants.gcs.get_inferencer_asset_dir_gcs_path"]], "get_inferencer_embeddings_gcs_prefix() (in module src.common.constants.gcs)": [[180, "src.common.constants.gcs.get_inferencer_embeddings_gcs_prefix"]], "get_inferencer_predictions_gcs_prefix() (in module src.common.constants.gcs)": [[181, "src.common.constants.gcs.get_inferencer_predictions_gcs_prefix"]], "get_post_processor_asset_dir_gcs_path() (in module src.common.constants.gcs)": [[182, "src.common.constants.gcs.get_post_processor_asset_dir_gcs_path"]], "get_post_processor_metrics_gcs_path() (in module src.common.constants.gcs)": [[183, "src.common.constants.gcs.get_post_processor_metrics_gcs_path"]], "get_preprocessed_metadata_proto_gcs_path() (in module src.common.constants.gcs)": [[184, "src.common.constants.gcs.get_preprocessed_metadata_proto_gcs_path"]], "get_split_dataset_main_samples_gcs_file_prefix() (in module src.common.constants.gcs)": [[185, "src.common.constants.gcs.get_split_dataset_main_samples_gcs_file_prefix"]], "get_split_dataset_output_gcs_file_prefix() (in module src.common.constants.gcs)": [[186, "src.common.constants.gcs.get_split_dataset_output_gcs_file_prefix"]], "get_split_dataset_random_negatives_gcs_file_prefix() (in module src.common.constants.gcs)": [[187, "src.common.constants.gcs.get_split_dataset_random_negatives_gcs_file_prefix"]], "get_split_generator_assets_temp_gcs_path() (in module src.common.constants.gcs)": [[188, "src.common.constants.gcs.get_split_generator_assets_temp_gcs_path"]], "get_subgraph_sampler_flattened_graph_metadata_output_gcs_path() (in module src.common.constants.gcs)": [[189, "src.common.constants.gcs.get_subgraph_sampler_flattened_graph_metadata_output_gcs_path"]], "get_subgraph_sampler_node_anchor_based_link_prediction_random_negatives_samples_prefix() (in module src.common.constants.gcs)": [[190, "src.common.constants.gcs.get_subgraph_sampler_node_anchor_based_link_prediction_random_negatives_samples_prefix"]], "get_subgraph_sampler_node_anchor_based_link_prediction_samples_prefix() (in module src.common.constants.gcs)": [[191, "src.common.constants.gcs.get_subgraph_sampler_node_anchor_based_link_prediction_samples_prefix"]], "get_subgraph_sampler_node_anchor_based_link_prediction_task_dir() (in module src.common.constants.gcs)": [[192, "src.common.constants.gcs.get_subgraph_sampler_node_anchor_based_link_prediction_task_dir"]], "get_subgraph_sampler_node_neighborhood_samples_dir() (in module src.common.constants.gcs)": [[193, "src.common.constants.gcs.get_subgraph_sampler_node_neighborhood_samples_dir"]], "get_subgraph_sampler_node_neighborhood_samples_path_prefix() (in module src.common.constants.gcs)": [[194, "src.common.constants.gcs.get_subgraph_sampler_node_neighborhood_samples_path_prefix"]], "get_subgraph_sampler_root_dir() (in module src.common.constants.gcs)": [[195, "src.common.constants.gcs.get_subgraph_sampler_root_dir"]], "get_subgraph_sampler_supervised_link_based_task_dir() (in module src.common.constants.gcs)": [[196, "src.common.constants.gcs.get_subgraph_sampler_supervised_link_based_task_dir"]], "get_subgraph_sampler_supervised_link_based_task_labeled_samples_prefix() (in module src.common.constants.gcs)": [[197, "src.common.constants.gcs.get_subgraph_sampler_supervised_link_based_task_labeled_samples_prefix"]], "get_subgraph_sampler_supervised_link_based_task_unlabeled_samples_prefix() (in module src.common.constants.gcs)": [[198, "src.common.constants.gcs.get_subgraph_sampler_supervised_link_based_task_unlabeled_samples_prefix"]], "get_subgraph_sampler_supervised_node_classification_labeled_samples_prefix() (in module src.common.constants.gcs)": [[199, "src.common.constants.gcs.get_subgraph_sampler_supervised_node_classification_labeled_samples_prefix"]], "get_subgraph_sampler_supervised_node_classification_task_dir() (in module src.common.constants.gcs)": [[200, "src.common.constants.gcs.get_subgraph_sampler_supervised_node_classification_task_dir"]], "get_subgraph_sampler_supervised_node_classification_unlabeled_samples_prefix() (in module src.common.constants.gcs)": [[201, "src.common.constants.gcs.get_subgraph_sampler_supervised_node_classification_unlabeled_samples_prefix"]], "get_tensorboard_logs_gcs_path() (in module src.common.constants.gcs)": [[202, "src.common.constants.gcs.get_tensorboard_logs_gcs_path"]], "get_tf_transform_directory_path() (in module src.common.constants.gcs)": [[203, "src.common.constants.gcs.get_tf_transform_directory_path"]], "get_tf_transform_raw_data_schema_file_path() (in module src.common.constants.gcs)": [[204, "src.common.constants.gcs.get_tf_transform_raw_data_schema_file_path"]], "get_tf_transform_stats_directory_path() (in module src.common.constants.gcs)": [[205, "src.common.constants.gcs.get_tf_transform_stats_directory_path"]], "get_tf_transform_stats_file_path() (in module src.common.constants.gcs)": [[206, "src.common.constants.gcs.get_tf_transform_stats_file_path"]], "get_tf_transform_temp_directory_path() (in module src.common.constants.gcs)": [[207, "src.common.constants.gcs.get_tf_transform_temp_directory_path"]], "get_tf_transform_visualized_facets_file_path() (in module src.common.constants.gcs)": [[208, "src.common.constants.gcs.get_tf_transform_visualized_facets_file_path"]], "get_tf_transformed_features_schema_path() (in module src.common.constants.gcs)": [[209, "src.common.constants.gcs.get_tf_transformed_features_schema_path"]], "get_tf_transformed_features_transform_fn_assets_directory_path() (in module src.common.constants.gcs)": [[210, "src.common.constants.gcs.get_tf_transformed_features_transform_fn_assets_directory_path"]], "get_trained_model_eval_metrics_gcs_path() (in module src.common.constants.gcs)": [[211, "src.common.constants.gcs.get_trained_model_eval_metrics_gcs_path"]], "get_trained_model_gcs_path() (in module src.common.constants.gcs)": [[212, "src.common.constants.gcs.get_trained_model_gcs_path"]], "get_trained_model_metadata_proto_gcs_path() (in module src.common.constants.gcs)": [[213, "src.common.constants.gcs.get_trained_model_metadata_proto_gcs_path"]], "get_trained_models_dir_gcs_path() (in module src.common.constants.gcs)": [[214, "src.common.constants.gcs.get_trained_models_dir_gcs_path"]], "get_trained_scripted_model_gcs_path() (in module src.common.constants.gcs)": [[215, "src.common.constants.gcs.get_trained_scripted_model_gcs_path"]], "get_trainer_asset_dir_gcs_path() (in module src.common.constants.gcs)": [[216, "src.common.constants.gcs.get_trainer_asset_dir_gcs_path"]], "get_transformed_features_directory_path() (in module src.common.constants.gcs)": [[217, "src.common.constants.gcs.get_transformed_features_directory_path"]], "get_transformed_features_file_prefix() (in module src.common.constants.gcs)": [[218, "src.common.constants.gcs.get_transformed_features_file_prefix"]], "src.common.constants.graph_metadata": [[219, "module-src.common.constants.graph_metadata"]], "src.common.constants.local_fs": [[220, "module-src.common.constants.local_fs"]], "get_gbml_assets_tmp_path() (in module src.common.constants.local_fs)": [[221, "src.common.constants.local_fs.get_gbml_assets_tmp_path"]], "get_gbml_log_file_prefix_tmp_path() (in module src.common.constants.local_fs)": [[222, "src.common.constants.local_fs.get_gbml_log_file_prefix_tmp_path"]], "get_gbml_logs_folder_local_tmp_path() (in module src.common.constants.local_fs)": [[223, "src.common.constants.local_fs.get_gbml_logs_folder_local_tmp_path"]], "get_gbml_task_local_tmp_path() (in module src.common.constants.local_fs)": [[224, "src.common.constants.local_fs.get_gbml_task_local_tmp_path"]], "get_gigl_root_directory() (in module src.common.constants.local_fs)": [[225, "src.common.constants.local_fs.get_gigl_root_directory"]], "get_inference_embeddings_local_tmp_dir_path() (in module src.common.constants.local_fs)": [[226, "src.common.constants.local_fs.get_inference_embeddings_local_tmp_dir_path"]], "get_inference_embeddings_local_tmp_file_prefix() (in module src.common.constants.local_fs)": [[227, "src.common.constants.local_fs.get_inference_embeddings_local_tmp_file_prefix"]], "get_inference_predictions_local_tmp_file_prefix() (in module src.common.constants.local_fs)": [[228, "src.common.constants.local_fs.get_inference_predictions_local_tmp_file_prefix"]], "get_path_to_manifest_file() (in module src.common.constants.local_fs)": [[229, "src.common.constants.local_fs.get_path_to_manifest_file"]], "get_preprocess_local_staging_dir_path() (in module src.common.constants.local_fs)": [[230, "src.common.constants.local_fs.get_preprocess_local_staging_dir_path"]], "get_project_root_directory() (in module src.common.constants.local_fs)": [[231, "src.common.constants.local_fs.get_project_root_directory"]], "get_python_project_root_path() (in module src.common.constants.local_fs)": [[232, "src.common.constants.local_fs.get_python_project_root_path"]], "get_train_val_info_local_tmp_file_path() (in module src.common.constants.local_fs)": [[233, "src.common.constants.local_fs.get_train_val_info_local_tmp_file_path"]], "src.common.constants.metrics": [[234, "module-src.common.constants.metrics"]], "src.common.constants.resource_config": [[235, "module-src.common.constants.resource_config"]], "src.common.constants.test_assets": [[236, "module-src.common.constants.test_assets"]], "get_example_task_edge_features_gcs_dir() (in module src.common.constants.test_assets)": [[237, "src.common.constants.test_assets.get_example_task_edge_features_gcs_dir"]], "get_example_task_edge_features_schema_gcs_path() (in module src.common.constants.test_assets)": [[238, "src.common.constants.test_assets.get_example_task_edge_features_schema_gcs_path"]], "get_example_task_edges_bq_table_path() (in module src.common.constants.test_assets)": [[239, "src.common.constants.test_assets.get_example_task_edges_bq_table_path"]], "get_example_task_frozen_gbml_config_gcs_path() (in module src.common.constants.test_assets)": [[240, "src.common.constants.test_assets.get_example_task_frozen_gbml_config_gcs_path"]], "get_example_task_node_features_gcs_dir() (in module src.common.constants.test_assets)": [[241, "src.common.constants.test_assets.get_example_task_node_features_gcs_dir"]], "get_example_task_node_features_schema_gcs_path() (in module src.common.constants.test_assets)": [[242, "src.common.constants.test_assets.get_example_task_node_features_schema_gcs_path"]], "get_example_task_nodes_bq_table_path() (in module src.common.constants.test_assets)": [[243, "src.common.constants.test_assets.get_example_task_nodes_bq_table_path"]], "get_example_task_preprocess_gcs_prefix() (in module src.common.constants.test_assets)": [[244, "src.common.constants.test_assets.get_example_task_preprocess_gcs_prefix"]], "get_example_task_static_assets_gcs_dir() (in module src.common.constants.test_assets)": [[245, "src.common.constants.test_assets.get_example_task_static_assets_gcs_dir"]], "update_bq_table_with_test_assets_and_version() (in module src.common.constants.test_assets)": [[246, "src.common.constants.test_assets.update_bq_table_with_test_assets_and_version"]], "update_gcs_uri_with_test_assets_and_version() (in module src.common.constants.test_assets)": [[247, "src.common.constants.test_assets.update_gcs_uri_with_test_assets_and_version"]], "src.common.constants.time": [[248, "module-src.common.constants.time"]], "src.common.constants.training": [[249, "module-src.common.constants.training"]], "src.common.graph_builder": [[250, "module-src.common.graph_builder"]], "src.common.graph_builder.abstract_graph_builder": [[251, "module-src.common.graph_builder.abstract_graph_builder"]], "graphbuilder (class in src.common.graph_builder.abstract_graph_builder)": [[252, "src.common.graph_builder.abstract_graph_builder.GraphBuilder"]], "__init_subclass__() (src.common.graph_builder.abstract_graph_builder.graphbuilder class method)": [[252, "src.common.graph_builder.abstract_graph_builder.GraphBuilder.__init_subclass__"]], "__weakref__ (src.common.graph_builder.abstract_graph_builder.graphbuilder attribute)": [[252, "src.common.graph_builder.abstract_graph_builder.GraphBuilder.__weakref__"]], "add_edge() (src.common.graph_builder.abstract_graph_builder.graphbuilder method)": [[252, "src.common.graph_builder.abstract_graph_builder.GraphBuilder.add_edge"]], "add_graph_data() (src.common.graph_builder.abstract_graph_builder.graphbuilder method)": [[252, "src.common.graph_builder.abstract_graph_builder.GraphBuilder.add_graph_data"]], "add_node() (src.common.graph_builder.abstract_graph_builder.graphbuilder method)": [[252, "src.common.graph_builder.abstract_graph_builder.GraphBuilder.add_node"]], "build() (src.common.graph_builder.abstract_graph_builder.graphbuilder method)": [[252, "src.common.graph_builder.abstract_graph_builder.GraphBuilder.build"]], "register_edge_types() (src.common.graph_builder.abstract_graph_builder.graphbuilder method)": [[252, "src.common.graph_builder.abstract_graph_builder.GraphBuilder.register_edge_types"]], "reset() (src.common.graph_builder.abstract_graph_builder.graphbuilder method)": [[252, "src.common.graph_builder.abstract_graph_builder.GraphBuilder.reset"]], "src.common.graph_builder.gbml_graph_protocol": [[253, "module-src.common.graph_builder.gbml_graph_protocol"]], "gbmlgraphdataprotocol (class in src.common.graph_builder.gbml_graph_protocol)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol"]], "__init__() (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol method)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.__init__"]], "__init_subclass__() (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol class method)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.__init_subclass__"]], "__subclasshook__() (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol method)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.__subclasshook__"]], "__weakref__ (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol attribute)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.__weakref__"]], "are_disjoint() (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol static method)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.are_disjoint"]], "are_same_graph() (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol static method)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.are_same_graph"]], "edge_types_to_be_registered (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol property)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.edge_types_to_be_registered"]], "get_global_edge_features_dict() (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol method)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.get_global_edge_features_dict"]], "get_global_node_features_dict() (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol method)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.get_global_node_features_dict"]], "global_node_to_subgraph_node_mapping (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol property)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.global_node_to_subgraph_node_mapping"]], "subgraph_node_to_global_node_mapping (src.common.graph_builder.gbml_graph_protocol.gbmlgraphdataprotocol property)": [[254, "src.common.graph_builder.gbml_graph_protocol.GbmlGraphDataProtocol.subgraph_node_to_global_node_mapping"]], "src.common.graph_builder.pyg_graph_builder": [[255, "module-src.common.graph_builder.pyg_graph_builder"]], "pyggraphbuilder (class in src.common.graph_builder.pyg_graph_builder)": [[256, "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder"]], "__init__() (src.common.graph_builder.pyg_graph_builder.pyggraphbuilder method)": [[256, "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder.__init__"]], "__init_subclass__() (src.common.graph_builder.pyg_graph_builder.pyggraphbuilder class method)": [[256, "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder.__init_subclass__"]], "__weakref__ (src.common.graph_builder.pyg_graph_builder.pyggraphbuilder attribute)": [[256, "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder.__weakref__"]], "add_edge() (src.common.graph_builder.pyg_graph_builder.pyggraphbuilder method)": [[256, "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder.add_edge"]], "add_graph_data() (src.common.graph_builder.pyg_graph_builder.pyggraphbuilder method)": [[256, "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder.add_graph_data"]], "add_node() (src.common.graph_builder.pyg_graph_builder.pyggraphbuilder method)": [[256, "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder.add_node"]], "build() (src.common.graph_builder.pyg_graph_builder.pyggraphbuilder method)": [[256, "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder.build"]], "register_edge_types() (src.common.graph_builder.pyg_graph_builder.pyggraphbuilder method)": [[256, "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder.register_edge_types"]], "reset() (src.common.graph_builder.pyg_graph_builder.pyggraphbuilder method)": [[256, "src.common.graph_builder.pyg_graph_builder.PygGraphBuilder.reset"]], "src.common.graph_builder.pyg_graph_data": [[257, "module-src.common.graph_builder.pyg_graph_data"]], "pyggraphdata (class in src.common.graph_builder.pyg_graph_data)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData"]], "__cat_dim__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__cat_dim__"]], "__contains__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__contains__"]], "__delattr__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__delattr__"]], "__delitem__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__delitem__"]], "__eq__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__eq__"]], "__getitem__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__getitem__"]], "__hash__ (src.common.graph_builder.pyg_graph_data.pyggraphdata attribute)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__hash__"]], "__inc__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__inc__"]], "__init__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__init__"]], "__init_subclass__() (src.common.graph_builder.pyg_graph_data.pyggraphdata class method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__init_subclass__"]], "__len__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__len__"]], "__repr__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__repr__"]], "__setattr__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__setattr__"]], "__setitem__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__setitem__"]], "__subclasshook__() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__subclasshook__"]], "__weakref__ (src.common.graph_builder.pyg_graph_data.pyggraphdata attribute)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.__weakref__"]], "apply() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.apply"]], "apply_() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.apply_"]], "are_disjoint() (src.common.graph_builder.pyg_graph_data.pyggraphdata static method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.are_disjoint"]], "are_same_graph() (src.common.graph_builder.pyg_graph_data.pyggraphdata static method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.are_same_graph"]], "clone() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.clone"]], "coalesce() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.coalesce"]], "collect() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.collect"]], "concat() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.concat"]], "contiguous() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.contiguous"]], "coo() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.coo"]], "cpu() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.cpu"]], "csc() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.csc"]], "csr() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.csr"]], "cuda() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.cuda"]], "detach() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.detach"]], "detach_() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.detach_"]], "edge_attrs() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.edge_attrs"]], "edge_items() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.edge_items"]], "edge_stores (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.edge_stores"]], "edge_subgraph() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.edge_subgraph"]], "edge_type_subgraph() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.edge_type_subgraph"]], "edge_types (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.edge_types"]], "edge_types_to_be_registered (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.edge_types_to_be_registered"]], "from_dict() (src.common.graph_builder.pyg_graph_data.pyggraphdata class method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.from_dict"]], "generate_ids() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.generate_ids"]], "get_all_edge_attrs() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.get_all_edge_attrs"]], "get_all_tensor_attrs() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.get_all_tensor_attrs"]], "get_edge_index() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.get_edge_index"]], "get_edge_store() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.get_edge_store"]], "get_global_edge_features_dict() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.get_global_edge_features_dict"]], "get_global_node_features_dict() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.get_global_node_features_dict"]], "get_node_store() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.get_node_store"]], "get_tensor() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.get_tensor"]], "get_tensor_size() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.get_tensor_size"]], "global_node_to_subgraph_node_mapping (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.global_node_to_subgraph_node_mapping"]], "has_isolated_nodes() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.has_isolated_nodes"]], "has_self_loops() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.has_self_loops"]], "is_coalesced() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.is_coalesced"]], "is_cuda (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.is_cuda"]], "is_directed() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.is_directed"]], "is_sorted() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.is_sorted"]], "is_sorted_by_time() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.is_sorted_by_time"]], "is_undirected() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.is_undirected"]], "keys() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.keys"]], "metadata() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.metadata"]], "multi_get_tensor() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.multi_get_tensor"]], "node_attrs() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.node_attrs"]], "node_items() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.node_items"]], "node_stores (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.node_stores"]], "node_type_subgraph() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.node_type_subgraph"]], "node_types (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.node_types"]], "num_edge_features (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.num_edge_features"]], "num_edges (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.num_edges"]], "num_features (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.num_features"]], "num_node_features (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.num_node_features"]], "num_nodes (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.num_nodes"]], "pin_memory() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.pin_memory"]], "put_edge_index() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.put_edge_index"]], "put_tensor() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.put_tensor"]], "record_stream() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.record_stream"]], "remove_edge_index() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.remove_edge_index"]], "remove_tensor() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.remove_tensor"]], "rename() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.rename"]], "requires_grad_() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.requires_grad_"]], "set_value_dict() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.set_value_dict"]], "share_memory_() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.share_memory_"]], "size() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.size"]], "snapshot() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.snapshot"]], "sort() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.sort"]], "sort_by_time() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.sort_by_time"]], "stores (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.stores"]], "subgraph() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.subgraph"]], "subgraph_node_to_global_node_mapping (src.common.graph_builder.pyg_graph_data.pyggraphdata property)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.subgraph_node_to_global_node_mapping"]], "to() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.to"]], "to_dict() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.to_dict"]], "to_hetero_data() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.to_hetero_data"]], "to_homogeneous() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.to_homogeneous"]], "to_namedtuple() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.to_namedtuple"]], "up_to() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.up_to"]], "update() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.update"]], "update_tensor() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.update_tensor"]], "validate() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.validate"]], "view() (src.common.graph_builder.pyg_graph_data.pyggraphdata method)": [[258, "src.common.graph_builder.pyg_graph_data.PygGraphData.view"]], "src.common.modeling_task_specs": [[259, "module-src.common.modeling_task_specs"]], "src.common.modeling_task_specs.utils": [[260, "module-src.common.modeling_task_specs.utils"]], "src.common.modeling_task_specs.utils.early_stop": [[261, "module-src.common.modeling_task_specs.utils.early_stop"]], "earlystopper (class in src.common.modeling_task_specs.utils.early_stop)": [[262, "src.common.modeling_task_specs.utils.early_stop.EarlyStopper"]], "__init__() (src.common.modeling_task_specs.utils.early_stop.earlystopper method)": [[262, "src.common.modeling_task_specs.utils.early_stop.EarlyStopper.__init__"]], "__weakref__ (src.common.modeling_task_specs.utils.early_stop.earlystopper attribute)": [[262, "src.common.modeling_task_specs.utils.early_stop.EarlyStopper.__weakref__"]], "src.common.modeling_task_specs.utils.parameter_loading": [[263, "module-src.common.modeling_task_specs.utils.parameter_loading"]], "argumentreader (class in src.common.modeling_task_specs.utils.parameter_loading)": [[264, "src.common.modeling_task_specs.utils.parameter_loading.ArgumentReader"]], "__weakref__ (src.common.modeling_task_specs.utils.parameter_loading.argumentreader attribute)": [[264, "src.common.modeling_task_specs.utils.parameter_loading.ArgumentReader.__weakref__"]], "src.common.modeling_task_specs.utils.profiler_wrapper": [[265, "module-src.common.modeling_task_specs.utils.profiler_wrapper"]], "torchprofiler (class in src.common.modeling_task_specs.utils.profiler_wrapper)": [[266, "src.common.modeling_task_specs.utils.profiler_wrapper.TorchProfiler"]], "__init__() (src.common.modeling_task_specs.utils.profiler_wrapper.torchprofiler method)": [[266, "src.common.modeling_task_specs.utils.profiler_wrapper.TorchProfiler.__init__"]], "__weakref__ (src.common.modeling_task_specs.utils.profiler_wrapper.torchprofiler attribute)": [[266, "src.common.modeling_task_specs.utils.profiler_wrapper.TorchProfiler.__weakref__"]], "src.common.models": [[267, "module-src.common.models"]], "src.common.models.dgl": [[268, "module-src.common.models.dgl"]], "src.common.models.dgl.homogenous": [[269, "module-src.common.models.dgl.homogenous"]], "src.common.models.layers": [[270, "module-src.common.models.layers"]], "src.common.models.layers.count_min_sketch": [[271, "module-src.common.models.layers.count_min_sketch"]], "countminsketch (class in src.common.models.layers.count_min_sketch)": [[272, "src.common.models.layers.count_min_sketch.CountMinSketch"]], "__init__() (src.common.models.layers.count_min_sketch.countminsketch method)": [[272, "src.common.models.layers.count_min_sketch.CountMinSketch.__init__"]], "__weakref__ (src.common.models.layers.count_min_sketch.countminsketch attribute)": [[272, "src.common.models.layers.count_min_sketch.CountMinSketch.__weakref__"]], "add() (src.common.models.layers.count_min_sketch.countminsketch method)": [[272, "src.common.models.layers.count_min_sketch.CountMinSketch.add"]], "add_torch_long_tensor() (src.common.models.layers.count_min_sketch.countminsketch method)": [[272, "src.common.models.layers.count_min_sketch.CountMinSketch.add_torch_long_tensor"]], "estimate() (src.common.models.layers.count_min_sketch.countminsketch method)": [[272, "src.common.models.layers.count_min_sketch.CountMinSketch.estimate"]], "estimate_torch_long_tensor() (src.common.models.layers.count_min_sketch.countminsketch method)": [[272, "src.common.models.layers.count_min_sketch.CountMinSketch.estimate_torch_long_tensor"]], "get_table() (src.common.models.layers.count_min_sketch.countminsketch method)": [[272, "src.common.models.layers.count_min_sketch.CountMinSketch.get_table"]], "total() (src.common.models.layers.count_min_sketch.countminsketch method)": [[272, "src.common.models.layers.count_min_sketch.CountMinSketch.total"]], "calculate_in_batch_candidate_sampling_probability() (in module src.common.models.layers.count_min_sketch)": [[273, "src.common.models.layers.count_min_sketch.calculate_in_batch_candidate_sampling_probability"]], "src.common.models.layers.decoder": [[274, "module-src.common.models.layers.decoder"]], "decodertype (class in src.common.models.layers.decoder)": [[275, "src.common.models.layers.decoder.DecoderType"]], "linkpredictiondecoder (class in src.common.models.layers.decoder)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder"]], "__call__() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.__call__"]], "__delattr__() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.__delattr__"]], "__dir__() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.__dir__"]], "__init__() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.__init__"]], "__repr__() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.__repr__"]], "__setattr__() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.__setattr__"]], "__weakref__ (src.common.models.layers.decoder.linkpredictiondecoder attribute)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.__weakref__"]], "add_module() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.add_module"]], "apply() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.apply"]], "bfloat16() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.bfloat16"]], "buffers() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.buffers"]], "children() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.children"]], "compile() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.compile"]], "cpu() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.cpu"]], "cuda() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.cuda"]], "double() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.double"]], "eval() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.eval"]], "extra_repr() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.extra_repr"]], "float() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.float"]], "forward() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.forward"]], "get_buffer() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.get_buffer"]], "get_extra_state() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.get_extra_state"]], "get_parameter() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.get_parameter"]], "get_submodule() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.get_submodule"]], "half() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.half"]], "ipu() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.ipu"]], "load_state_dict() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.load_state_dict"]], "modules() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.modules"]], "named_buffers() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.named_buffers"]], "named_children() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.named_children"]], "named_modules() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.named_modules"]], "named_parameters() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.named_parameters"]], "parameters() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.parameters"]], "register_backward_hook() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.register_backward_hook"]], "register_buffer() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.register_buffer"]], "register_forward_hook() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.register_load_state_dict_post_hook"]], "register_module() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.register_module"]], "register_parameter() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.register_parameter"]], "register_state_dict_pre_hook() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.requires_grad_"]], "set_extra_state() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.set_extra_state"]], "share_memory() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.share_memory"]], "state_dict() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.state_dict"]], "to() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.to"]], "to_empty() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.to_empty"]], "train() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.train"]], "type() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.type"]], "xpu() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.xpu"]], "zero_grad() (src.common.models.layers.decoder.linkpredictiondecoder method)": [[276, "src.common.models.layers.decoder.LinkPredictionDecoder.zero_grad"]], "src.common.models.layers.feature_interaction": [[277, "module-src.common.models.layers.feature_interaction"]], "dcncross (class in src.common.models.layers.feature_interaction)": [[278, "src.common.models.layers.feature_interaction.DCNCross"]], "__call__() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.__call__"]], "__delattr__() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.__delattr__"]], "__dir__() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.__dir__"]], "__init__() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.__init__"]], "__repr__() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.__repr__"]], "__setattr__() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.__setattr__"]], "__weakref__ (src.common.models.layers.feature_interaction.dcncross attribute)": [[278, "src.common.models.layers.feature_interaction.DCNCross.__weakref__"]], "add_module() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.add_module"]], "apply() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.apply"]], "bfloat16() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.bfloat16"]], "buffers() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.buffers"]], "children() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.children"]], "compile() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.compile"]], "cpu() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.cpu"]], "cuda() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.cuda"]], "double() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.double"]], "eval() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.eval"]], "extra_repr() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.extra_repr"]], "float() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.float"]], "forward() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.forward"]], "get_buffer() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.get_buffer"]], "get_extra_state() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.get_extra_state"]], "get_parameter() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.get_parameter"]], "get_submodule() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.get_submodule"]], "half() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.half"]], "ipu() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.ipu"]], "load_state_dict() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.load_state_dict"]], "modules() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.modules"]], "named_buffers() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.named_buffers"]], "named_children() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.named_children"]], "named_modules() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.named_modules"]], "named_parameters() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.named_parameters"]], "parameters() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.parameters"]], "register_backward_hook() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.register_backward_hook"]], "register_buffer() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.register_buffer"]], "register_forward_hook() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.register_load_state_dict_post_hook"]], "register_module() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.register_module"]], "register_parameter() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.register_parameter"]], "register_state_dict_pre_hook() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.requires_grad_"]], "set_extra_state() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.set_extra_state"]], "share_memory() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.share_memory"]], "state_dict() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.state_dict"]], "to() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.to"]], "to_empty() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.to_empty"]], "train() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.train"]], "type() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.type"]], "xpu() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.xpu"]], "zero_grad() (src.common.models.layers.feature_interaction.dcncross method)": [[278, "src.common.models.layers.feature_interaction.DCNCross.zero_grad"]], "dcnv2 (class in src.common.models.layers.feature_interaction)": [[279, "src.common.models.layers.feature_interaction.DCNv2"]], "__call__() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.__call__"]], "__delattr__() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.__delattr__"]], "__dir__() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.__dir__"]], "__init__() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.__init__"]], "__repr__() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.__repr__"]], "__setattr__() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.__setattr__"]], "__weakref__ (src.common.models.layers.feature_interaction.dcnv2 attribute)": [[279, "src.common.models.layers.feature_interaction.DCNv2.__weakref__"]], "add_module() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.add_module"]], "apply() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.apply"]], "bfloat16() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.bfloat16"]], "buffers() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.buffers"]], "children() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.children"]], "compile() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.compile"]], "cpu() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.cpu"]], "cuda() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.cuda"]], "double() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.double"]], "eval() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.eval"]], "extra_repr() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.extra_repr"]], "float() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.float"]], "forward() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.forward"]], "get_buffer() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.get_buffer"]], "get_extra_state() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.get_extra_state"]], "get_parameter() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.get_parameter"]], "get_submodule() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.get_submodule"]], "half() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.half"]], "ipu() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.ipu"]], "load_state_dict() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.load_state_dict"]], "modules() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.modules"]], "named_buffers() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.named_buffers"]], "named_children() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.named_children"]], "named_modules() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.named_modules"]], "named_parameters() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.named_parameters"]], "parameters() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.parameters"]], "register_backward_hook() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.register_backward_hook"]], "register_buffer() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.register_buffer"]], "register_forward_hook() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.register_load_state_dict_post_hook"]], "register_module() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.register_module"]], "register_parameter() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.register_parameter"]], "register_state_dict_pre_hook() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.requires_grad_"]], "set_extra_state() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.set_extra_state"]], "share_memory() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.share_memory"]], "state_dict() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.state_dict"]], "to() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.to"]], "to_empty() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.to_empty"]], "train() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.train"]], "type() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.type"]], "xpu() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.xpu"]], "zero_grad() (src.common.models.layers.feature_interaction.dcnv2 method)": [[279, "src.common.models.layers.feature_interaction.DCNv2.zero_grad"]], "src.common.models.layers.normalization": [[280, "module-src.common.models.layers.normalization"]], "l2_normalize_embeddings() (in module src.common.models.layers.normalization)": [[281, "src.common.models.layers.normalization.l2_normalize_embeddings"]], "src.common.models.pyg": [[282, "module-src.common.models.pyg"]], "src.common.models.pyg.heterogeneous": [[283, "module-src.common.models.pyg.heterogeneous"]], "hgt (class in src.common.models.pyg.heterogeneous)": [[284, "src.common.models.pyg.heterogeneous.HGT"]], "__call__() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.__call__"]], "__delattr__() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.__delattr__"]], "__dir__() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.__dir__"]], "__init__() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.__init__"]], "__repr__() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.__repr__"]], "__setattr__() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.__setattr__"]], "__weakref__ (src.common.models.pyg.heterogeneous.hgt attribute)": [[284, "src.common.models.pyg.heterogeneous.HGT.__weakref__"]], "add_module() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.add_module"]], "apply() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.apply"]], "bfloat16() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.bfloat16"]], "buffers() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.buffers"]], "children() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.children"]], "compile() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.compile"]], "cpu() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.cpu"]], "cuda() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.cuda"]], "double() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.double"]], "eval() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.eval"]], "extra_repr() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.extra_repr"]], "float() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.float"]], "forward() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.forward"]], "get_buffer() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.get_buffer"]], "get_extra_state() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.get_extra_state"]], "get_parameter() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.get_parameter"]], "get_submodule() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.get_submodule"]], "half() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.half"]], "ipu() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.ipu"]], "load_state_dict() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.load_state_dict"]], "modules() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.modules"]], "named_buffers() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.named_buffers"]], "named_children() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.named_children"]], "named_modules() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.named_modules"]], "named_parameters() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.named_parameters"]], "parameters() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.parameters"]], "register_backward_hook() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.register_backward_hook"]], "register_buffer() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.register_buffer"]], "register_forward_hook() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.register_load_state_dict_post_hook"]], "register_module() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.register_module"]], "register_parameter() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.register_parameter"]], "register_state_dict_pre_hook() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.requires_grad_"]], "set_extra_state() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.set_extra_state"]], "share_memory() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.share_memory"]], "state_dict() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.state_dict"]], "to() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.to"]], "to_empty() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.to_empty"]], "train() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.train"]], "type() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.type"]], "xpu() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.xpu"]], "zero_grad() (src.common.models.pyg.heterogeneous.hgt method)": [[284, "src.common.models.pyg.heterogeneous.HGT.zero_grad"]], "simplehgn (class in src.common.models.pyg.heterogeneous)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN"]], "__call__() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.__call__"]], "__delattr__() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.__delattr__"]], "__dir__() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.__dir__"]], "__init__() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.__init__"]], "__repr__() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.__repr__"]], "__setattr__() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.__setattr__"]], "__weakref__ (src.common.models.pyg.heterogeneous.simplehgn attribute)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.__weakref__"]], "add_module() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.add_module"]], "apply() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.apply"]], "bfloat16() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.bfloat16"]], "buffers() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.buffers"]], "children() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.children"]], "compile() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.compile"]], "cpu() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.cpu"]], "cuda() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.cuda"]], "double() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.double"]], "eval() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.eval"]], "extra_repr() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.extra_repr"]], "float() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.float"]], "forward() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.forward"]], "get_buffer() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.get_buffer"]], "get_extra_state() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.get_extra_state"]], "get_parameter() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.get_parameter"]], "get_submodule() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.get_submodule"]], "half() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.half"]], "ipu() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.ipu"]], "load_state_dict() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.load_state_dict"]], "modules() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.modules"]], "named_buffers() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.named_buffers"]], "named_children() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.named_children"]], "named_modules() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.named_modules"]], "named_parameters() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.named_parameters"]], "parameters() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.parameters"]], "register_backward_hook() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.register_backward_hook"]], "register_buffer() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.register_buffer"]], "register_forward_hook() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.register_load_state_dict_post_hook"]], "register_module() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.register_module"]], "register_parameter() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.register_parameter"]], "register_state_dict_pre_hook() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.requires_grad_"]], "set_extra_state() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.set_extra_state"]], "share_memory() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.share_memory"]], "state_dict() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.state_dict"]], "to() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.to"]], "to_empty() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.to_empty"]], "train() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.train"]], "type() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.type"]], "xpu() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.xpu"]], "zero_grad() (src.common.models.pyg.heterogeneous.simplehgn method)": [[285, "src.common.models.pyg.heterogeneous.SimpleHGN.zero_grad"]], "src.common.models.pyg.nn": [[286, "module-src.common.models.pyg.nn"]], "src.common.models.pyg.nn.conv": [[287, "module-src.common.models.pyg.nn.conv"]], "src.common.models.pyg.nn.conv.edge_attr_gat_conv": [[288, "module-src.common.models.pyg.nn.conv.edge_attr_gat_conv"]], "edgeattrgatconv (class in src.common.models.pyg.nn.conv.edge_attr_gat_conv)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv"]], "__call__() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.__call__"]], "__delattr__() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.__delattr__"]], "__dir__() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.__dir__"]], "__init__() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.__init__"]], "__repr__() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.__repr__"]], "__setattr__() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.__setattr__"]], "__weakref__ (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv attribute)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.__weakref__"]], "add_module() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.add_module"]], "aggregate() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.aggregate"]], "apply() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.apply"]], "bfloat16() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.bfloat16"]], "buffers() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.buffers"]], "children() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.children"]], "compile() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.compile"]], "cpu() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.cpu"]], "cuda() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.cuda"]], "double() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.double"]], "edge_update() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.edge_update"]], "edge_updater() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.edge_updater"]], "eval() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.eval"]], "extra_repr() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.extra_repr"]], "float() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.float"]], "forward() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.forward"]], "get_buffer() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.get_buffer"]], "get_extra_state() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.get_extra_state"]], "get_parameter() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.get_parameter"]], "get_submodule() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.get_submodule"]], "half() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.half"]], "ipu() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.ipu"]], "jittable() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.jittable"]], "load_state_dict() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.load_state_dict"]], "message() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.message"]], "message_and_aggregate() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.message_and_aggregate"]], "modules() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.modules"]], "named_buffers() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.named_buffers"]], "named_children() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.named_children"]], "named_modules() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.named_modules"]], "named_parameters() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.named_parameters"]], "parameters() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.parameters"]], "propagate() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.propagate"]], "register_aggregate_forward_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_aggregate_forward_hook"]], "register_aggregate_forward_pre_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_aggregate_forward_pre_hook"]], "register_backward_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_backward_hook"]], "register_buffer() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_buffer"]], "register_edge_update_forward_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_edge_update_forward_hook"]], "register_edge_update_forward_pre_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_edge_update_forward_pre_hook"]], "register_forward_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_load_state_dict_post_hook"]], "register_message_and_aggregate_forward_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_message_and_aggregate_forward_hook"]], "register_message_and_aggregate_forward_pre_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_message_and_aggregate_forward_pre_hook"]], "register_message_forward_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_message_forward_hook"]], "register_message_forward_pre_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_message_forward_pre_hook"]], "register_module() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_module"]], "register_parameter() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_parameter"]], "register_propagate_forward_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_propagate_forward_hook"]], "register_propagate_forward_pre_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_propagate_forward_pre_hook"]], "register_state_dict_pre_hook() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.requires_grad_"]], "reset_parameters() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.reset_parameters"]], "set_extra_state() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.set_extra_state"]], "share_memory() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.share_memory"]], "state_dict() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.state_dict"]], "to() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.to"]], "to_empty() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.to_empty"]], "train() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.train"]], "type() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.type"]], "update() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.update"]], "xpu() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.xpu"]], "zero_grad() (src.common.models.pyg.nn.conv.edge_attr_gat_conv.edgeattrgatconv method)": [[289, "src.common.models.pyg.nn.conv.edge_attr_gat_conv.EdgeAttrGATConv.zero_grad"]], "src.common.models.pyg.nn.conv.gin_conv": [[290, "module-src.common.models.pyg.nn.conv.gin_conv"]], "gineconv (class in src.common.models.pyg.nn.conv.gin_conv)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv"]], "__call__() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.__call__"]], "__delattr__() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.__delattr__"]], "__dir__() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.__dir__"]], "__init__() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.__init__"]], "__repr__() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.__repr__"]], "__setattr__() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.__setattr__"]], "__weakref__ (src.common.models.pyg.nn.conv.gin_conv.gineconv attribute)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.__weakref__"]], "add_module() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.add_module"]], "aggregate() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.aggregate"]], "apply() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.apply"]], "bfloat16() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.bfloat16"]], "buffers() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.buffers"]], "children() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.children"]], "compile() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.compile"]], "cpu() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.cpu"]], "cuda() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.cuda"]], "double() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.double"]], "edge_update() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.edge_update"]], "edge_updater() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.edge_updater"]], "eval() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.eval"]], "extra_repr() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.extra_repr"]], "float() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.float"]], "get_buffer() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.get_buffer"]], "get_extra_state() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.get_extra_state"]], "get_parameter() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.get_parameter"]], "get_submodule() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.get_submodule"]], "half() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.half"]], "ipu() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.ipu"]], "jittable() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.jittable"]], "load_state_dict() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.load_state_dict"]], "message() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.message"]], "message_and_aggregate() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.message_and_aggregate"]], "modules() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.modules"]], "named_buffers() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.named_buffers"]], "named_children() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.named_children"]], "named_modules() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.named_modules"]], "named_parameters() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.named_parameters"]], "parameters() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.parameters"]], "propagate() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.propagate"]], "register_aggregate_forward_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_aggregate_forward_hook"]], "register_aggregate_forward_pre_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_aggregate_forward_pre_hook"]], "register_backward_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_backward_hook"]], "register_buffer() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_buffer"]], "register_edge_update_forward_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_edge_update_forward_hook"]], "register_edge_update_forward_pre_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_edge_update_forward_pre_hook"]], "register_forward_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_load_state_dict_post_hook"]], "register_message_and_aggregate_forward_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_message_and_aggregate_forward_hook"]], "register_message_and_aggregate_forward_pre_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_message_and_aggregate_forward_pre_hook"]], "register_message_forward_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_message_forward_hook"]], "register_message_forward_pre_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_message_forward_pre_hook"]], "register_module() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_module"]], "register_parameter() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_parameter"]], "register_propagate_forward_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_propagate_forward_hook"]], "register_propagate_forward_pre_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_propagate_forward_pre_hook"]], "register_state_dict_pre_hook() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.requires_grad_"]], "reset_parameters() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.reset_parameters"]], "set_extra_state() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.set_extra_state"]], "share_memory() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.share_memory"]], "state_dict() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.state_dict"]], "to() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.to"]], "to_empty() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.to_empty"]], "train() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.train"]], "type() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.type"]], "update() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.update"]], "xpu() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.xpu"]], "zero_grad() (src.common.models.pyg.nn.conv.gin_conv.gineconv method)": [[291, "src.common.models.pyg.nn.conv.gin_conv.GINEConv.zero_grad"]], "src.common.models.pyg.nn.conv.hgt_conv": [[292, "module-src.common.models.pyg.nn.conv.hgt_conv"]], "hgtconv (class in src.common.models.pyg.nn.conv.hgt_conv)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv"]], "__call__() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.__call__"]], "__delattr__() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.__delattr__"]], "__dir__() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.__dir__"]], "__init__() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.__init__"]], "__repr__() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.__repr__"]], "__setattr__() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.__setattr__"]], "__weakref__ (src.common.models.pyg.nn.conv.hgt_conv.hgtconv attribute)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.__weakref__"]], "add_module() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.add_module"]], "aggregate() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.aggregate"]], "apply() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.apply"]], "bfloat16() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.bfloat16"]], "buffers() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.buffers"]], "children() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.children"]], "compile() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.compile"]], "cpu() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.cpu"]], "cuda() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.cuda"]], "double() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.double"]], "edge_update() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.edge_update"]], "edge_updater() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.edge_updater"]], "eval() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.eval"]], "extra_repr() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.extra_repr"]], "float() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.float"]], "forward() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.forward"]], "get_buffer() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.get_buffer"]], "get_extra_state() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.get_extra_state"]], "get_parameter() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.get_parameter"]], "get_submodule() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.get_submodule"]], "half() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.half"]], "ipu() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.ipu"]], "jittable() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.jittable"]], "load_state_dict() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.load_state_dict"]], "message() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.message"]], "message_and_aggregate() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.message_and_aggregate"]], "modules() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.modules"]], "named_buffers() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.named_buffers"]], "named_children() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.named_children"]], "named_modules() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.named_modules"]], "named_parameters() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.named_parameters"]], "parameters() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.parameters"]], "propagate() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.propagate"]], "register_aggregate_forward_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_aggregate_forward_hook"]], "register_aggregate_forward_pre_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_aggregate_forward_pre_hook"]], "register_backward_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_backward_hook"]], "register_buffer() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_buffer"]], "register_edge_update_forward_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_edge_update_forward_hook"]], "register_edge_update_forward_pre_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_edge_update_forward_pre_hook"]], "register_forward_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_load_state_dict_post_hook"]], "register_message_and_aggregate_forward_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_message_and_aggregate_forward_hook"]], "register_message_and_aggregate_forward_pre_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_message_and_aggregate_forward_pre_hook"]], "register_message_forward_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_message_forward_hook"]], "register_message_forward_pre_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_message_forward_pre_hook"]], "register_module() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_module"]], "register_parameter() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_parameter"]], "register_propagate_forward_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_propagate_forward_hook"]], "register_propagate_forward_pre_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_propagate_forward_pre_hook"]], "register_state_dict_pre_hook() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.requires_grad_"]], "reset_parameters() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.reset_parameters"]], "set_extra_state() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.set_extra_state"]], "share_memory() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.share_memory"]], "state_dict() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.state_dict"]], "to() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.to"]], "to_empty() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.to_empty"]], "train() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.train"]], "type() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.type"]], "update() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.update"]], "xpu() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.xpu"]], "zero_grad() (src.common.models.pyg.nn.conv.hgt_conv.hgtconv method)": [[293, "src.common.models.pyg.nn.conv.hgt_conv.HGTConv.zero_grad"]], "src.common.models.pyg.nn.conv.simplehgn_conv": [[294, "module-src.common.models.pyg.nn.conv.simplehgn_conv"]], "simplehgnconv (class in src.common.models.pyg.nn.conv.simplehgn_conv)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv"]], "__call__() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.__call__"]], "__delattr__() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.__delattr__"]], "__dir__() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.__dir__"]], "__init__() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.__init__"]], "__repr__() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.__repr__"]], "__setattr__() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.__setattr__"]], "__weakref__ (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv attribute)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.__weakref__"]], "add_module() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.add_module"]], "aggregate() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.aggregate"]], "apply() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.apply"]], "bfloat16() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.bfloat16"]], "buffers() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.buffers"]], "children() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.children"]], "compile() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.compile"]], "cpu() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.cpu"]], "cuda() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.cuda"]], "double() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.double"]], "edge_update() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.edge_update"]], "edge_updater() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.edge_updater"]], "eval() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.eval"]], "extra_repr() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.extra_repr"]], "float() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.float"]], "forward() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.forward"]], "get_buffer() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.get_buffer"]], "get_extra_state() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.get_extra_state"]], "get_parameter() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.get_parameter"]], "get_submodule() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.get_submodule"]], "half() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.half"]], "ipu() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.ipu"]], "jittable() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.jittable"]], "load_state_dict() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.load_state_dict"]], "message() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.message"]], "message_and_aggregate() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.message_and_aggregate"]], "modules() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.modules"]], "named_buffers() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.named_buffers"]], "named_children() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.named_children"]], "named_modules() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.named_modules"]], "named_parameters() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.named_parameters"]], "parameters() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.parameters"]], "propagate() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.propagate"]], "register_aggregate_forward_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_aggregate_forward_hook"]], "register_aggregate_forward_pre_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_aggregate_forward_pre_hook"]], "register_backward_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_backward_hook"]], "register_buffer() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_buffer"]], "register_edge_update_forward_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_edge_update_forward_hook"]], "register_edge_update_forward_pre_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_edge_update_forward_pre_hook"]], "register_forward_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_load_state_dict_post_hook"]], "register_message_and_aggregate_forward_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_message_and_aggregate_forward_hook"]], "register_message_and_aggregate_forward_pre_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_message_and_aggregate_forward_pre_hook"]], "register_message_forward_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_message_forward_hook"]], "register_message_forward_pre_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_message_forward_pre_hook"]], "register_module() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_module"]], "register_parameter() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_parameter"]], "register_propagate_forward_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_propagate_forward_hook"]], "register_propagate_forward_pre_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_propagate_forward_pre_hook"]], "register_state_dict_pre_hook() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.requires_grad_"]], "reset_parameters() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.reset_parameters"]], "set_extra_state() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.set_extra_state"]], "share_memory() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.share_memory"]], "state_dict() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.state_dict"]], "to() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.to"]], "to_empty() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.to_empty"]], "train() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.train"]], "type() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.type"]], "update() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.update"]], "xpu() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.xpu"]], "zero_grad() (src.common.models.pyg.nn.conv.simplehgn_conv.simplehgnconv method)": [[295, "src.common.models.pyg.nn.conv.simplehgn_conv.SimpleHGNConv.zero_grad"]], "src.common.models.pyg.nn.models": [[296, "module-src.common.models.pyg.nn.models"]], "src.common.models.pyg.nn.models.feature_interaction": [[297, "module-src.common.models.pyg.nn.models.feature_interaction"]], "combinationmode (class in src.common.models.pyg.nn.models.feature_interaction)": [[298, "src.common.models.pyg.nn.models.feature_interaction.CombinationMode"]], "featureinteraction (class in src.common.models.pyg.nn.models.feature_interaction)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction"]], "__call__() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.__call__"]], "__delattr__() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.__delattr__"]], "__dir__() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.__dir__"]], "__init__() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.__init__"]], "__repr__() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.__repr__"]], "__setattr__() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.__setattr__"]], "__weakref__ (src.common.models.pyg.nn.models.feature_interaction.featureinteraction attribute)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.__weakref__"]], "add_module() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.add_module"]], "apply() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.apply"]], "bfloat16() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.bfloat16"]], "buffers() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.buffers"]], "children() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.children"]], "compile() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.compile"]], "cpu() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.cpu"]], "cuda() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.cuda"]], "double() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.double"]], "eval() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.eval"]], "extra_repr() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.extra_repr"]], "float() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.float"]], "forward() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.forward"]], "get_buffer() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.get_buffer"]], "get_extra_state() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.get_extra_state"]], "get_parameter() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.get_parameter"]], "get_submodule() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.get_submodule"]], "half() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.half"]], "ipu() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.ipu"]], "load_state_dict() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.load_state_dict"]], "modules() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.modules"]], "named_buffers() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.named_buffers"]], "named_children() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.named_children"]], "named_modules() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.named_modules"]], "named_parameters() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.named_parameters"]], "parameters() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.parameters"]], "register_backward_hook() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.register_backward_hook"]], "register_buffer() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.register_buffer"]], "register_forward_hook() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.register_load_state_dict_post_hook"]], "register_module() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.register_module"]], "register_parameter() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.register_parameter"]], "register_state_dict_pre_hook() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.requires_grad_"]], "set_extra_state() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.set_extra_state"]], "share_memory() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.share_memory"]], "state_dict() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.state_dict"]], "to() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.to"]], "to_empty() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.to_empty"]], "train() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.train"]], "type() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.type"]], "xpu() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.xpu"]], "zero_grad() (src.common.models.pyg.nn.models.feature_interaction.featureinteraction method)": [[299, "src.common.models.pyg.nn.models.feature_interaction.FeatureInteraction.zero_grad"]], "src.common.models.pyg.nn.models.jumping_knowledge": [[300, "module-src.common.models.pyg.nn.models.jumping_knowledge"]], "jumpingknowledge (class in src.common.models.pyg.nn.models.jumping_knowledge)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge"]], "__call__() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.__call__"]], "__delattr__() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.__delattr__"]], "__dir__() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.__dir__"]], "__init__() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.__init__"]], "__repr__() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.__repr__"]], "__setattr__() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.__setattr__"]], "__weakref__ (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge attribute)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.__weakref__"]], "add_module() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.add_module"]], "aggregate() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.aggregate"]], "apply() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.apply"]], "bfloat16() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.bfloat16"]], "buffers() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.buffers"]], "children() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.children"]], "compile() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.compile"]], "cpu() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.cpu"]], "cuda() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.cuda"]], "double() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.double"]], "edge_update() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.edge_update"]], "edge_updater() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.edge_updater"]], "eval() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.eval"]], "extra_repr() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.extra_repr"]], "float() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.float"]], "forward() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.forward"]], "get_buffer() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.get_buffer"]], "get_extra_state() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.get_extra_state"]], "get_parameter() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.get_parameter"]], "get_submodule() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.get_submodule"]], "half() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.half"]], "ipu() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.ipu"]], "jittable() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.jittable"]], "load_state_dict() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.load_state_dict"]], "message() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.message"]], "message_and_aggregate() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.message_and_aggregate"]], "modules() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.modules"]], "named_buffers() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.named_buffers"]], "named_children() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.named_children"]], "named_modules() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.named_modules"]], "named_parameters() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.named_parameters"]], "parameters() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.parameters"]], "propagate() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.propagate"]], "register_aggregate_forward_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_aggregate_forward_hook"]], "register_aggregate_forward_pre_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_aggregate_forward_pre_hook"]], "register_backward_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_backward_hook"]], "register_buffer() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_buffer"]], "register_edge_update_forward_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_edge_update_forward_hook"]], "register_edge_update_forward_pre_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_edge_update_forward_pre_hook"]], "register_forward_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_forward_hook"]], "register_forward_pre_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_forward_pre_hook"]], "register_full_backward_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_full_backward_hook"]], "register_full_backward_pre_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_load_state_dict_post_hook"]], "register_message_and_aggregate_forward_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_message_and_aggregate_forward_hook"]], "register_message_and_aggregate_forward_pre_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_message_and_aggregate_forward_pre_hook"]], "register_message_forward_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_message_forward_hook"]], "register_message_forward_pre_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_message_forward_pre_hook"]], "register_module() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_module"]], "register_parameter() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_parameter"]], "register_propagate_forward_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_propagate_forward_hook"]], "register_propagate_forward_pre_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_propagate_forward_pre_hook"]], "register_state_dict_pre_hook() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.register_state_dict_pre_hook"]], "requires_grad_() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.requires_grad_"]], "reset_parameters() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.reset_parameters"]], "set_extra_state() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.set_extra_state"]], "share_memory() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.share_memory"]], "state_dict() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.state_dict"]], "to() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.to"]], "to_empty() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.to_empty"]], "train() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.train"]], "type() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.type"]], "update() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.update"]], "xpu() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.xpu"]], "zero_grad() (src.common.models.pyg.nn.models.jumping_knowledge.jumpingknowledge method)": [[301, "src.common.models.pyg.nn.models.jumping_knowledge.JumpingKnowledge.zero_grad"]], "src.common.models.pyg.utils": [[302, "module-src.common.models.pyg.utils"]], "filter_dict() (in module src.common.models.pyg.utils)": [[303, "src.common.models.pyg.utils.filter_dict"]], "src.common.models.utils": [[304, "module-src.common.models.utils"]], "src.common.models.utils.torch": [[305, "module-src.common.models.utils.torch"]], "to_hetero_feat() (in module src.common.models.utils.torch)": [[306, "src.common.models.utils.torch.to_hetero_feat"]], "src.common.translators": [[307, "module-src.common.translators"]], "src.common.translators.gbml_protos_translator": [[308, "module-src.common.translators.gbml_protos_translator"]], "gbmlprotostranslator (class in src.common.translators.gbml_protos_translator)": [[309, "src.common.translators.gbml_protos_translator.GbmlProtosTranslator"]], "__weakref__ (src.common.translators.gbml_protos_translator.gbmlprotostranslator attribute)": [[309, "src.common.translators.gbml_protos_translator.GbmlProtosTranslator.__weakref__"]], "node_from_nodepb() (src.common.translators.gbml_protos_translator.gbmlprotostranslator static method)": [[309, "src.common.translators.gbml_protos_translator.GbmlProtosTranslator.node_from_NodePb"]], "src.common.translators.model_eval_metrics_translator": [[310, "module-src.common.translators.model_eval_metrics_translator"]], "evalmetricscollectiontranslator (class in src.common.translators.model_eval_metrics_translator)": [[311, "src.common.translators.model_eval_metrics_translator.EvalMetricsCollectionTranslator"]], "__weakref__ (src.common.translators.model_eval_metrics_translator.evalmetricscollectiontranslator attribute)": [[311, "src.common.translators.model_eval_metrics_translator.EvalMetricsCollectionTranslator.__weakref__"]], "src.common.types": [[312, "module-src.common.types"]], "src.common.types.dataflow_job_options": [[313, "module-src.common.types.dataflow_job_options"]], "commonoptions (class in src.common.types.dataflow_job_options)": [[314, "src.common.types.dataflow_job_options.CommonOptions"]], "__dir__() (src.common.types.dataflow_job_options.commonoptions method)": [[314, "src.common.types.dataflow_job_options.CommonOptions.__dir__"]], "__init__() (src.common.types.dataflow_job_options.commonoptions method)": [[314, "src.common.types.dataflow_job_options.CommonOptions.__init__"]], "__setattr__() (src.common.types.dataflow_job_options.commonoptions method)": [[314, "src.common.types.dataflow_job_options.CommonOptions.__setattr__"]], "__str__() (src.common.types.dataflow_job_options.commonoptions method)": [[314, "src.common.types.dataflow_job_options.CommonOptions.__str__"]], "__weakref__ (src.common.types.dataflow_job_options.commonoptions attribute)": [[314, "src.common.types.dataflow_job_options.CommonOptions.__weakref__"]], "display_data() (src.common.types.dataflow_job_options.commonoptions method)": [[314, "src.common.types.dataflow_job_options.CommonOptions.display_data"]], "from_dictionary() (src.common.types.dataflow_job_options.commonoptions class method)": [[314, "src.common.types.dataflow_job_options.CommonOptions.from_dictionary"]], "get_all_options() (src.common.types.dataflow_job_options.commonoptions method)": [[314, "src.common.types.dataflow_job_options.CommonOptions.get_all_options"]], "view_as() (src.common.types.dataflow_job_options.commonoptions method)": [[314, "src.common.types.dataflow_job_options.CommonOptions.view_as"]], "src.common.types.dataset_split": [[315, "module-src.common.types.dataset_split"]], "datasetsplit (class in src.common.types.dataset_split)": [[316, "src.common.types.dataset_split.DatasetSplit"]], "src.common.types.exception": [[317, "module-src.common.types.exception"]], "subgraphsamplingvalidationerror": [[318, "src.common.types.exception.SubgraphSamplingValidationError"]], "subgraphsamplingvalidationerrortype (class in src.common.types.exception)": [[319, "src.common.types.exception.SubgraphSamplingValidationErrorType"]], "src.common.types.features": [[320, "module-src.common.types.features"]], "featuretypes (class in src.common.types.features)": [[321, "src.common.types.features.FeatureTypes"]], "src.common.types.graph_data": [[322, "module-src.common.types.graph_data"]], "edge (class in src.common.types.graph_data)": [[323, "src.common.types.graph_data.Edge"]], "__delattr__() (src.common.types.graph_data.edge method)": [[323, "src.common.types.graph_data.Edge.__delattr__"]], "__eq__() (src.common.types.graph_data.edge method)": [[323, "src.common.types.graph_data.Edge.__eq__"]], "__hash__() (src.common.types.graph_data.edge method)": [[323, "src.common.types.graph_data.Edge.__hash__"]], "__init__() (src.common.types.graph_data.edge method)": [[323, "src.common.types.graph_data.Edge.__init__"]], "__repr__() (src.common.types.graph_data.edge method)": [[323, "src.common.types.graph_data.Edge.__repr__"]], "__setattr__() (src.common.types.graph_data.edge method)": [[323, "src.common.types.graph_data.Edge.__setattr__"]], "__weakref__ (src.common.types.graph_data.edge attribute)": [[323, "src.common.types.graph_data.Edge.__weakref__"]], "edgetype (class in src.common.types.graph_data)": [[324, "src.common.types.graph_data.EdgeType"]], "__add__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__add__"]], "__class_getitem__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__class_getitem__"]], "__contains__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__contains__"]], "__eq__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__eq__"]], "__ge__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__ge__"]], "__getattribute__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__getattribute__"]], "__getitem__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__getitem__"]], "__getnewargs__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__getnewargs__"]], "__gt__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__gt__"]], "__hash__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__hash__"]], "__iter__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__iter__"]], "__le__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__le__"]], "__len__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__len__"]], "__lt__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__lt__"]], "__mul__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__mul__"]], "__ne__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__ne__"]], "__new__() (src.common.types.graph_data.edgetype static method)": [[324, "src.common.types.graph_data.EdgeType.__new__"]], "__repr__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__repr__"]], "__rmul__() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.__rmul__"]], "count() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.count"]], "dst_node_type (src.common.types.graph_data.edgetype attribute)": [[324, "src.common.types.graph_data.EdgeType.dst_node_type"]], "index() (src.common.types.graph_data.edgetype method)": [[324, "src.common.types.graph_data.EdgeType.index"]], "relation (src.common.types.graph_data.edgetype attribute)": [[324, "src.common.types.graph_data.EdgeType.relation"]], "src_node_type (src.common.types.graph_data.edgetype attribute)": [[324, "src.common.types.graph_data.EdgeType.src_node_type"]], "edgeusagetype (class in src.common.types.graph_data)": [[325, "src.common.types.graph_data.EdgeUsageType"]], "__weakref__ (src.common.types.graph_data.edgeusagetype attribute)": [[325, "src.common.types.graph_data.EdgeUsageType.__weakref__"]], "node (class in src.common.types.graph_data)": [[326, "src.common.types.graph_data.Node"]], "__delattr__() (src.common.types.graph_data.node method)": [[326, "src.common.types.graph_data.Node.__delattr__"]], "__eq__() (src.common.types.graph_data.node method)": [[326, "src.common.types.graph_data.Node.__eq__"]], "__gt__() (src.common.types.graph_data.node method)": [[326, "src.common.types.graph_data.Node.__gt__"]], "__hash__() (src.common.types.graph_data.node method)": [[326, "src.common.types.graph_data.Node.__hash__"]], "__init__() (src.common.types.graph_data.node method)": [[326, "src.common.types.graph_data.Node.__init__"]], "__lt__() (src.common.types.graph_data.node method)": [[326, "src.common.types.graph_data.Node.__lt__"]], "__repr__() (src.common.types.graph_data.node method)": [[326, "src.common.types.graph_data.Node.__repr__"]], "__setattr__() (src.common.types.graph_data.node method)": [[326, "src.common.types.graph_data.Node.__setattr__"]], "__weakref__ (src.common.types.graph_data.node attribute)": [[326, "src.common.types.graph_data.Node.__weakref__"]], "src.common.types.model_eval_metrics": [[327, "module-src.common.types.model_eval_metrics"]], "evalmetric (class in src.common.types.model_eval_metrics)": [[328, "src.common.types.model_eval_metrics.EvalMetric"]], "__eq__() (src.common.types.model_eval_metrics.evalmetric method)": [[328, "src.common.types.model_eval_metrics.EvalMetric.__eq__"]], "__hash__ (src.common.types.model_eval_metrics.evalmetric attribute)": [[328, "src.common.types.model_eval_metrics.EvalMetric.__hash__"]], "__init__() (src.common.types.model_eval_metrics.evalmetric method)": [[328, "src.common.types.model_eval_metrics.EvalMetric.__init__"]], "__repr__() (src.common.types.model_eval_metrics.evalmetric method)": [[328, "src.common.types.model_eval_metrics.EvalMetric.__repr__"]], "__weakref__ (src.common.types.model_eval_metrics.evalmetric attribute)": [[328, "src.common.types.model_eval_metrics.EvalMetric.__weakref__"]], "evalmetrictype (class in src.common.types.model_eval_metrics)": [[329, "src.common.types.model_eval_metrics.EvalMetricType"]], "evalmetricscollection (class in src.common.types.model_eval_metrics)": [[330, "src.common.types.model_eval_metrics.EvalMetricsCollection"]], "__init__() (src.common.types.model_eval_metrics.evalmetricscollection method)": [[330, "src.common.types.model_eval_metrics.EvalMetricsCollection.__init__"]], "__repr__() (src.common.types.model_eval_metrics.evalmetricscollection method)": [[330, "src.common.types.model_eval_metrics.EvalMetricsCollection.__repr__"]], "__weakref__ (src.common.types.model_eval_metrics.evalmetricscollection attribute)": [[330, "src.common.types.model_eval_metrics.EvalMetricsCollection.__weakref__"]], "src.common.types.pb_wrappers": [[331, "module-src.common.types.pb_wrappers"]], "src.common.types.pb_wrappers.dataset_metadata": [[332, "module-src.common.types.pb_wrappers.dataset_metadata"]], "datasetmetadatapbwrapper (class in src.common.types.pb_wrappers.dataset_metadata)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper"]], "__delattr__() (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper method)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.__delattr__"]], "__eq__() (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper method)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.__eq__"]], "__hash__() (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper method)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper method)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper method)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.__repr__"]], "__setattr__() (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper method)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.__setattr__"]], "__weakref__ (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper attribute)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.__weakref__"]], "get_output_paths() (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper method)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.get_output_paths"]], "output_metadata (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper property)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.output_metadata"]], "output_metadata_type (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper property)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.output_metadata_type"]], "training_sample_type (src.common.types.pb_wrappers.dataset_metadata.datasetmetadatapbwrapper property)": [[333, "src.common.types.pb_wrappers.dataset_metadata.DatasetMetadataPbWrapper.training_sample_type"]], "src.common.types.pb_wrappers.flattened_graph_metadata": [[334, "module-src.common.types.pb_wrappers.flattened_graph_metadata"]], "flattenedgraphmetadatapbwrapper (class in src.common.types.pb_wrappers.flattened_graph_metadata)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.flattened_graph_metadata.flattenedgraphmetadatapbwrapper method)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.flattened_graph_metadata.flattenedgraphmetadatapbwrapper attribute)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.flattened_graph_metadata.flattenedgraphmetadatapbwrapper method)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.flattened_graph_metadata.flattenedgraphmetadatapbwrapper method)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.flattened_graph_metadata.flattenedgraphmetadatapbwrapper attribute)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.__weakref__"]], "dataset_type (src.common.types.pb_wrappers.flattened_graph_metadata.flattenedgraphmetadatapbwrapper property)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.dataset_type"]], "get_output_paths() (src.common.types.pb_wrappers.flattened_graph_metadata.flattenedgraphmetadatapbwrapper method)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.get_output_paths"]], "output_metadata (src.common.types.pb_wrappers.flattened_graph_metadata.flattenedgraphmetadatapbwrapper property)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.output_metadata"]], "output_metadata_type (src.common.types.pb_wrappers.flattened_graph_metadata.flattenedgraphmetadatapbwrapper property)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.output_metadata_type"]], "training_sample_type (src.common.types.pb_wrappers.flattened_graph_metadata.flattenedgraphmetadatapbwrapper property)": [[335, "src.common.types.pb_wrappers.flattened_graph_metadata.FlattenedGraphMetadataPbWrapper.training_sample_type"]], "src.common.types.pb_wrappers.gigl_resource_config": [[336, "module-src.common.types.pb_wrappers.gigl_resource_config"]], "giglresourceconfigwrapper (class in src.common.types.pb_wrappers.gigl_resource_config)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper"]], "__eq__() (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper method)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper attribute)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper method)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper method)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper attribute)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.__weakref__"]], "dataflow_runner (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.dataflow_runner"]], "embedding_bq_dataset_name (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.embedding_bq_dataset_name"]], "get_resource_labels() (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper method)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.get_resource_labels"]], "inferencer_config (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.inferencer_config"]], "perm_assets_bucket_path (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.perm_assets_bucket_path"]], "preprocessor_config (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.preprocessor_config"]], "project (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.project"]], "region (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.region"]], "service_account_email (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.service_account_email"]], "split_generator_config (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.split_generator_config"]], "subgraph_sampler_config (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.subgraph_sampler_config"]], "temp_assets_bq_dataset_name (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.temp_assets_bq_dataset_name"]], "temp_assets_bucket_path (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.temp_assets_bucket_path"]], "temp_assets_regional_bucket_path (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.temp_assets_regional_bucket_path"]], "trainer_config (src.common.types.pb_wrappers.gigl_resource_config.giglresourceconfigwrapper property)": [[337, "src.common.types.pb_wrappers.gigl_resource_config.GiglResourceConfigWrapper.trainer_config"]], "src.common.types.pb_wrappers.graph_data_types": [[338, "module-src.common.types.pb_wrappers.graph_data_types"]], "edgepbwrapper (class in src.common.types.pb_wrappers.graph_data_types)": [[339, "src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper"]], "__delattr__() (src.common.types.pb_wrappers.graph_data_types.edgepbwrapper method)": [[339, "src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper.__delattr__"]], "__eq__() (src.common.types.pb_wrappers.graph_data_types.edgepbwrapper method)": [[339, "src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper.__eq__"]], "__hash__() (src.common.types.pb_wrappers.graph_data_types.edgepbwrapper method)": [[339, "src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.graph_data_types.edgepbwrapper method)": [[339, "src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.graph_data_types.edgepbwrapper method)": [[339, "src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper.__repr__"]], "__setattr__() (src.common.types.pb_wrappers.graph_data_types.edgepbwrapper method)": [[339, "src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper.__setattr__"]], "__weakref__ (src.common.types.pb_wrappers.graph_data_types.edgepbwrapper attribute)": [[339, "src.common.types.pb_wrappers.graph_data_types.EdgePbWrapper.__weakref__"]], "graphpbwrapper (class in src.common.types.pb_wrappers.graph_data_types)": [[340, "src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper"]], "__delattr__() (src.common.types.pb_wrappers.graph_data_types.graphpbwrapper method)": [[340, "src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper.__delattr__"]], "__eq__() (src.common.types.pb_wrappers.graph_data_types.graphpbwrapper method)": [[340, "src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper.__eq__"]], "__hash__() (src.common.types.pb_wrappers.graph_data_types.graphpbwrapper method)": [[340, "src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.graph_data_types.graphpbwrapper method)": [[340, "src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.graph_data_types.graphpbwrapper method)": [[340, "src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper.__repr__"]], "__setattr__() (src.common.types.pb_wrappers.graph_data_types.graphpbwrapper method)": [[340, "src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper.__setattr__"]], "__weakref__ (src.common.types.pb_wrappers.graph_data_types.graphpbwrapper attribute)": [[340, "src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper.__weakref__"]], "hydrate_subgraph_features() (src.common.types.pb_wrappers.graph_data_types.graphpbwrapper static method)": [[340, "src.common.types.pb_wrappers.graph_data_types.GraphPbWrapper.hydrate_subgraph_features"]], "nodepbwrapper (class in src.common.types.pb_wrappers.graph_data_types)": [[341, "src.common.types.pb_wrappers.graph_data_types.NodePbWrapper"]], "__delattr__() (src.common.types.pb_wrappers.graph_data_types.nodepbwrapper method)": [[341, "src.common.types.pb_wrappers.graph_data_types.NodePbWrapper.__delattr__"]], "__eq__() (src.common.types.pb_wrappers.graph_data_types.nodepbwrapper method)": [[341, "src.common.types.pb_wrappers.graph_data_types.NodePbWrapper.__eq__"]], "__hash__() (src.common.types.pb_wrappers.graph_data_types.nodepbwrapper method)": [[341, "src.common.types.pb_wrappers.graph_data_types.NodePbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.graph_data_types.nodepbwrapper method)": [[341, "src.common.types.pb_wrappers.graph_data_types.NodePbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.graph_data_types.nodepbwrapper method)": [[341, "src.common.types.pb_wrappers.graph_data_types.NodePbWrapper.__repr__"]], "__setattr__() (src.common.types.pb_wrappers.graph_data_types.nodepbwrapper method)": [[341, "src.common.types.pb_wrappers.graph_data_types.NodePbWrapper.__setattr__"]], "__weakref__ (src.common.types.pb_wrappers.graph_data_types.nodepbwrapper attribute)": [[341, "src.common.types.pb_wrappers.graph_data_types.NodePbWrapper.__weakref__"]], "src.common.types.pb_wrappers.graph_data_types_utils": [[342, "module-src.common.types.pb_wrappers.graph_data_types_utils"]], "get_dehydrated_node_pb_wrappers_from_edge_wrapper() (in module src.common.types.pb_wrappers.graph_data_types_utils)": [[343, "src.common.types.pb_wrappers.graph_data_types_utils.get_dehydrated_node_pb_wrappers_from_edge_wrapper"]], "src.common.types.pb_wrappers.graph_metadata": [[344, "module-src.common.types.pb_wrappers.graph_metadata"]], "graphmetadatapbwrapper (class in src.common.types.pb_wrappers.graph_metadata)": [[345, "src.common.types.pb_wrappers.graph_metadata.GraphMetadataPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.graph_metadata.graphmetadatapbwrapper method)": [[345, "src.common.types.pb_wrappers.graph_metadata.GraphMetadataPbWrapper.__eq__"]], "__hash__() (src.common.types.pb_wrappers.graph_metadata.graphmetadatapbwrapper method)": [[345, "src.common.types.pb_wrappers.graph_metadata.GraphMetadataPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.graph_metadata.graphmetadatapbwrapper method)": [[345, "src.common.types.pb_wrappers.graph_metadata.GraphMetadataPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.graph_metadata.graphmetadatapbwrapper method)": [[345, "src.common.types.pb_wrappers.graph_metadata.GraphMetadataPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.graph_metadata.graphmetadatapbwrapper attribute)": [[345, "src.common.types.pb_wrappers.graph_metadata.GraphMetadataPbWrapper.__weakref__"]], "condensed_edge_type_to_condensed_node_types (src.common.types.pb_wrappers.graph_metadata.graphmetadatapbwrapper property)": [[345, "src.common.types.pb_wrappers.graph_metadata.GraphMetadataPbWrapper.condensed_edge_type_to_condensed_node_types"]], "src.common.types.pb_wrappers.sampling_op": [[346, "module-src.common.types.pb_wrappers.sampling_op"]], "randomuniformpbwrapper (class in src.common.types.pb_wrappers.sampling_op)": [[347, "src.common.types.pb_wrappers.sampling_op.RandomUniformPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.sampling_op.randomuniformpbwrapper method)": [[347, "src.common.types.pb_wrappers.sampling_op.RandomUniformPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.sampling_op.randomuniformpbwrapper attribute)": [[347, "src.common.types.pb_wrappers.sampling_op.RandomUniformPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.sampling_op.randomuniformpbwrapper method)": [[347, "src.common.types.pb_wrappers.sampling_op.RandomUniformPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.sampling_op.randomuniformpbwrapper method)": [[347, "src.common.types.pb_wrappers.sampling_op.RandomUniformPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.sampling_op.randomuniformpbwrapper attribute)": [[347, "src.common.types.pb_wrappers.sampling_op.RandomUniformPbWrapper.__weakref__"]], "randomweightedpbwrapper (class in src.common.types.pb_wrappers.sampling_op)": [[348, "src.common.types.pb_wrappers.sampling_op.RandomWeightedPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.sampling_op.randomweightedpbwrapper method)": [[348, "src.common.types.pb_wrappers.sampling_op.RandomWeightedPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.sampling_op.randomweightedpbwrapper attribute)": [[348, "src.common.types.pb_wrappers.sampling_op.RandomWeightedPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.sampling_op.randomweightedpbwrapper method)": [[348, "src.common.types.pb_wrappers.sampling_op.RandomWeightedPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.sampling_op.randomweightedpbwrapper method)": [[348, "src.common.types.pb_wrappers.sampling_op.RandomWeightedPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.sampling_op.randomweightedpbwrapper attribute)": [[348, "src.common.types.pb_wrappers.sampling_op.RandomWeightedPbWrapper.__weakref__"]], "samplingdirectionenumtype (class in src.common.types.pb_wrappers.sampling_op)": [[349, "src.common.types.pb_wrappers.sampling_op.SamplingDirectionEnumType"]], "samplingoppbwrapper (class in src.common.types.pb_wrappers.sampling_op)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper method)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.__eq__"]], "__hash__() (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper method)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper method)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.__init__"]], "__reduce__() (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper method)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.__reduce__"]], "__repr__() (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper method)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper attribute)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.__weakref__"]], "add_child_sampling_op_pb_wrapper() (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper method)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.add_child_sampling_op_pb_wrapper"]], "add_parent_sampling_op_pb_wrapper() (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper method)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.add_parent_sampling_op_pb_wrapper"]], "check_if_dag_contains_cycles() (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper method)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.check_if_dag_contains_cycles"]], "check_sampling_op_edge_type_validity() (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper method)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.check_sampling_op_edge_type_validity"]], "child_sampling_op_pb_wrappers (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper property)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.child_sampling_op_pb_wrappers"]], "parent_sampling_op_pb_wrappers (src.common.types.pb_wrappers.sampling_op.samplingoppbwrapper property)": [[350, "src.common.types.pb_wrappers.sampling_op.SamplingOpPbWrapper.parent_sampling_op_pb_wrappers"]], "topkpbwrapper (class in src.common.types.pb_wrappers.sampling_op)": [[351, "src.common.types.pb_wrappers.sampling_op.TopKPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.sampling_op.topkpbwrapper method)": [[351, "src.common.types.pb_wrappers.sampling_op.TopKPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.sampling_op.topkpbwrapper attribute)": [[351, "src.common.types.pb_wrappers.sampling_op.TopKPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.sampling_op.topkpbwrapper method)": [[351, "src.common.types.pb_wrappers.sampling_op.TopKPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.sampling_op.topkpbwrapper method)": [[351, "src.common.types.pb_wrappers.sampling_op.TopKPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.sampling_op.topkpbwrapper attribute)": [[351, "src.common.types.pb_wrappers.sampling_op.TopKPbWrapper.__weakref__"]], "userdefinedpbwrapper (class in src.common.types.pb_wrappers.sampling_op)": [[352, "src.common.types.pb_wrappers.sampling_op.UserDefinedPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.sampling_op.userdefinedpbwrapper method)": [[352, "src.common.types.pb_wrappers.sampling_op.UserDefinedPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.sampling_op.userdefinedpbwrapper attribute)": [[352, "src.common.types.pb_wrappers.sampling_op.UserDefinedPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.sampling_op.userdefinedpbwrapper method)": [[352, "src.common.types.pb_wrappers.sampling_op.UserDefinedPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.sampling_op.userdefinedpbwrapper method)": [[352, "src.common.types.pb_wrappers.sampling_op.UserDefinedPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.sampling_op.userdefinedpbwrapper attribute)": [[352, "src.common.types.pb_wrappers.sampling_op.UserDefinedPbWrapper.__weakref__"]], "src.common.types.pb_wrappers.subgraph_sampling_strategy": [[353, "module-src.common.types.pb_wrappers.subgraph_sampling_strategy"]], "globalrandomuniformstrategypbwrapper (class in src.common.types.pb_wrappers.subgraph_sampling_strategy)": [[354, "src.common.types.pb_wrappers.subgraph_sampling_strategy.GlobalRandomUniformStrategyPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.globalrandomuniformstrategypbwrapper method)": [[354, "src.common.types.pb_wrappers.subgraph_sampling_strategy.GlobalRandomUniformStrategyPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.subgraph_sampling_strategy.globalrandomuniformstrategypbwrapper attribute)": [[354, "src.common.types.pb_wrappers.subgraph_sampling_strategy.GlobalRandomUniformStrategyPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.globalrandomuniformstrategypbwrapper method)": [[354, "src.common.types.pb_wrappers.subgraph_sampling_strategy.GlobalRandomUniformStrategyPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.globalrandomuniformstrategypbwrapper method)": [[354, "src.common.types.pb_wrappers.subgraph_sampling_strategy.GlobalRandomUniformStrategyPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.subgraph_sampling_strategy.globalrandomuniformstrategypbwrapper attribute)": [[354, "src.common.types.pb_wrappers.subgraph_sampling_strategy.GlobalRandomUniformStrategyPbWrapper.__weakref__"]], "messagepassingpathpbwrapper (class in src.common.types.pb_wrappers.subgraph_sampling_strategy)": [[355, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathpbwrapper method)": [[355, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathpbwrapper attribute)": [[355, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathpbwrapper method)": [[355, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathPbWrapper.__init__"]], "__post_init__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathpbwrapper method)": [[355, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathPbWrapper.__post_init__"]], "__repr__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathpbwrapper method)": [[355, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathpbwrapper attribute)": [[355, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathPbWrapper.__weakref__"]], "messagepassingpathstrategypbwrapper (class in src.common.types.pb_wrappers.subgraph_sampling_strategy)": [[356, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathStrategyPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathstrategypbwrapper method)": [[356, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathStrategyPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathstrategypbwrapper attribute)": [[356, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathStrategyPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathstrategypbwrapper method)": [[356, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathStrategyPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathstrategypbwrapper method)": [[356, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathStrategyPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.subgraph_sampling_strategy.messagepassingpathstrategypbwrapper attribute)": [[356, "src.common.types.pb_wrappers.subgraph_sampling_strategy.MessagePassingPathStrategyPbWrapper.__weakref__"]], "subgraphsamplingstrategypbwrapper (class in src.common.types.pb_wrappers.subgraph_sampling_strategy)": [[357, "src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.subgraphsamplingstrategypbwrapper method)": [[357, "src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.subgraph_sampling_strategy.subgraphsamplingstrategypbwrapper attribute)": [[357, "src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.subgraphsamplingstrategypbwrapper method)": [[357, "src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.subgraph_sampling_strategy.subgraphsamplingstrategypbwrapper method)": [[357, "src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.subgraph_sampling_strategy.subgraphsamplingstrategypbwrapper attribute)": [[357, "src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper.__weakref__"]], "root_node_type_to_message_passing_path_pb_wrapper (src.common.types.pb_wrappers.subgraph_sampling_strategy.subgraphsamplingstrategypbwrapper property)": [[357, "src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper.root_node_type_to_message_passing_path_pb_wrapper"]], "validate_dags() (src.common.types.pb_wrappers.subgraph_sampling_strategy.subgraphsamplingstrategypbwrapper method)": [[357, "src.common.types.pb_wrappers.subgraph_sampling_strategy.SubgraphSamplingStrategyPbWrapper.validate_dags"]], "src.common.types.pb_wrappers.task_metadata": [[358, "module-src.common.types.pb_wrappers.task_metadata"]], "taskmetadatapbwrapper (class in src.common.types.pb_wrappers.task_metadata)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper method)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper attribute)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper method)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper method)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper attribute)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.__weakref__"]], "get_supervision_edge_node_types() (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper method)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.get_supervision_edge_node_types"]], "get_supervision_edge_types() (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper method)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.get_supervision_edge_types"]], "get_supervision_node_types() (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper method)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.get_supervision_node_types"]], "get_task_root_node_types() (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper method)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.get_task_root_node_types"]], "task_metadata (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper property)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.task_metadata"]], "task_metadata_type (src.common.types.pb_wrappers.task_metadata.taskmetadatapbwrapper property)": [[359, "src.common.types.pb_wrappers.task_metadata.TaskMetadataPbWrapper.task_metadata_type"]], "src.common.types.pb_wrappers.trained_model_metadata": [[360, "module-src.common.types.pb_wrappers.trained_model_metadata"]], "trainedmodelmetadatapbwrapper (class in src.common.types.pb_wrappers.trained_model_metadata)": [[361, "src.common.types.pb_wrappers.trained_model_metadata.TrainedModelMetadataPbWrapper"]], "__eq__() (src.common.types.pb_wrappers.trained_model_metadata.trainedmodelmetadatapbwrapper method)": [[361, "src.common.types.pb_wrappers.trained_model_metadata.TrainedModelMetadataPbWrapper.__eq__"]], "__hash__ (src.common.types.pb_wrappers.trained_model_metadata.trainedmodelmetadatapbwrapper attribute)": [[361, "src.common.types.pb_wrappers.trained_model_metadata.TrainedModelMetadataPbWrapper.__hash__"]], "__init__() (src.common.types.pb_wrappers.trained_model_metadata.trainedmodelmetadatapbwrapper method)": [[361, "src.common.types.pb_wrappers.trained_model_metadata.TrainedModelMetadataPbWrapper.__init__"]], "__repr__() (src.common.types.pb_wrappers.trained_model_metadata.trainedmodelmetadatapbwrapper method)": [[361, "src.common.types.pb_wrappers.trained_model_metadata.TrainedModelMetadataPbWrapper.__repr__"]], "__weakref__ (src.common.types.pb_wrappers.trained_model_metadata.trainedmodelmetadatapbwrapper attribute)": [[361, "src.common.types.pb_wrappers.trained_model_metadata.TrainedModelMetadataPbWrapper.__weakref__"]], "src.common.types.pb_wrappers.types": [[362, "module-src.common.types.pb_wrappers.types"]], "src.common.types.task_metadata": [[363, "module-src.common.types.task_metadata"]], "taskmetadatatype (class in src.common.types.task_metadata)": [[364, "src.common.types.task_metadata.TaskMetadataType"]], "__weakref__ (src.common.types.task_metadata.taskmetadatatype attribute)": [[364, "src.common.types.task_metadata.TaskMetadataType.__weakref__"]], "src.common.utils": [[365, "module-src.common.utils"]], "src.common.utils.bq": [[366, "module-src.common.utils.bq"]], "bqutils (class in src.common.utils.bq)": [[367, "src.common.utils.bq.BqUtils"]], "__init__() (src.common.utils.bq.bqutils method)": [[367, "src.common.utils.bq.BqUtils.__init__"]], "__weakref__ (src.common.utils.bq.bqutils attribute)": [[367, "src.common.utils.bq.BqUtils.__weakref__"]], "delete_bq_table_if_exist() (src.common.utils.bq.bqutils method)": [[367, "src.common.utils.bq.BqUtils.delete_bq_table_if_exist"]], "fetch_bq_table_schema() (src.common.utils.bq.bqutils method)": [[367, "src.common.utils.bq.BqUtils.fetch_bq_table_schema"]], "format_bq_path() (src.common.utils.bq.bqutils static method)": [[367, "src.common.utils.bq.BqUtils.format_bq_path"]], "get_table_names_within_date_range() (src.common.utils.bq.bqutils method)": [[367, "src.common.utils.bq.BqUtils.get_table_names_within_date_range"]], "load_file_to_bq() (src.common.utils.bq.bqutils method)": [[367, "src.common.utils.bq.BqUtils.load_file_to_bq"]], "update_bq_dataset_retention() (src.common.utils.bq.bqutils method)": [[367, "src.common.utils.bq.BqUtils.update_bq_dataset_retention"]], "update_bq_table_retention() (src.common.utils.bq.bqutils method)": [[367, "src.common.utils.bq.BqUtils.update_bq_table_retention"]], "src.common.utils.data": [[368, "module-src.common.utils.data"]], "src.common.utils.data.feature_serialization": [[369, "module-src.common.utils.data.feature_serialization"]], "featureserializationutils (class in src.common.utils.data.feature_serialization)": [[370, "src.common.utils.data.feature_serialization.FeatureSerializationUtils"]], "__weakref__ (src.common.utils.data.feature_serialization.featureserializationutils attribute)": [[370, "src.common.utils.data.feature_serialization.FeatureSerializationUtils.__weakref__"]], "src.common.utils.dataflow": [[371, "module-src.common.utils.dataflow"]], "get_sanitized_dataflow_job_name() (in module src.common.utils.dataflow)": [[372, "src.common.utils.dataflow.get_sanitized_dataflow_job_name"]], "init_beam_pipeline_options() (in module src.common.utils.dataflow)": [[373, "src.common.utils.dataflow.init_beam_pipeline_options"]], "src.common.utils.eval_metrics": [[374, "module-src.common.utils.eval_metrics"]], "hit_rate_at_k() (in module src.common.utils.eval_metrics)": [[375, "src.common.utils.eval_metrics.hit_rate_at_k"]], "mean_reciprocal_rank() (in module src.common.utils.eval_metrics)": [[376, "src.common.utils.eval_metrics.mean_reciprocal_rank"]], "src.common.utils.file_loader": [[377, "module-src.common.utils.file_loader"]], "fileloader (class in src.common.utils.file_loader)": [[378, "src.common.utils.file_loader.FileLoader"]], "__init__() (src.common.utils.file_loader.fileloader method)": [[378, "src.common.utils.file_loader.FileLoader.__init__"]], "__weakref__ (src.common.utils.file_loader.fileloader attribute)": [[378, "src.common.utils.file_loader.FileLoader.__weakref__"]], "delete_files() (src.common.utils.file_loader.fileloader method)": [[378, "src.common.utils.file_loader.FileLoader.delete_files"]], "does_uri_exist() (src.common.utils.file_loader.fileloader method)": [[378, "src.common.utils.file_loader.FileLoader.does_uri_exist"]], "list_children() (src.common.utils.file_loader.fileloader method)": [[378, "src.common.utils.file_loader.FileLoader.list_children"]], "src.common.utils.gbml_protos": [[379, "module-src.common.utils.gbml_protos"]], "trainingsamplesschemaprotoutils (class in src.common.utils.gbml_protos)": [[380, "src.common.utils.gbml_protos.TrainingSamplesSchemaProtoUtils"]], "__weakref__ (src.common.utils.gbml_protos.trainingsamplesschemaprotoutils attribute)": [[380, "src.common.utils.gbml_protos.TrainingSamplesSchemaProtoUtils.__weakref__"]], "src.common.utils.metrics_service_provider": [[381, "module-src.common.utils.metrics_service_provider"]], "get_metrics_service_instance() (in module src.common.utils.metrics_service_provider)": [[382, "src.common.utils.metrics_service_provider.get_metrics_service_instance"]], "init_metrics_publisher_grouping_for_job() (in module src.common.utils.metrics_service_provider)": [[383, "src.common.utils.metrics_service_provider.init_metrics_publisher_grouping_for_job"]], "initialize_metrics() (in module src.common.utils.metrics_service_provider)": [[384, "src.common.utils.metrics_service_provider.initialize_metrics"]], "src.common.utils.model": [[385, "module-src.common.utils.model"]], "load_scripted_model_from_uri() (in module src.common.utils.model)": [[386, "src.common.utils.model.load_scripted_model_from_uri"]], "load_state_dict_from_uri() (in module src.common.utils.model)": [[387, "src.common.utils.model.load_state_dict_from_uri"]], "save_scripted_model() (in module src.common.utils.model)": [[388, "src.common.utils.model.save_scripted_model"]], "save_state_dict() (in module src.common.utils.model)": [[389, "src.common.utils.model.save_state_dict"]], "src.common.utils.scheduler": [[390, "module-src.common.utils.scheduler"]], "cosinedecayscheduler (class in src.common.utils.scheduler)": [[391, "src.common.utils.scheduler.CosineDecayScheduler"]], "__init__() (src.common.utils.scheduler.cosinedecayscheduler method)": [[391, "src.common.utils.scheduler.CosineDecayScheduler.__init__"]], "__weakref__ (src.common.utils.scheduler.cosinedecayscheduler attribute)": [[391, "src.common.utils.scheduler.CosineDecayScheduler.__weakref__"]], "src.common.utils.spark_job_manager": [[392, "module-src.common.utils.spark_job_manager"]], "dataprocclusterinitdata (class in src.common.utils.spark_job_manager)": [[393, "src.common.utils.spark_job_manager.DataprocClusterInitData"]], "__eq__() (src.common.utils.spark_job_manager.dataprocclusterinitdata method)": [[393, "src.common.utils.spark_job_manager.DataprocClusterInitData.__eq__"]], "__hash__ (src.common.utils.spark_job_manager.dataprocclusterinitdata attribute)": [[393, "src.common.utils.spark_job_manager.DataprocClusterInitData.__hash__"]], "__init__() (src.common.utils.spark_job_manager.dataprocclusterinitdata method)": [[393, "src.common.utils.spark_job_manager.DataprocClusterInitData.__init__"]], "__repr__() (src.common.utils.spark_job_manager.dataprocclusterinitdata method)": [[393, "src.common.utils.spark_job_manager.DataprocClusterInitData.__repr__"]], "__weakref__ (src.common.utils.spark_job_manager.dataprocclusterinitdata attribute)": [[393, "src.common.utils.spark_job_manager.DataprocClusterInitData.__weakref__"]], "sparkjobmanager (class in src.common.utils.spark_job_manager)": [[394, "src.common.utils.spark_job_manager.SparkJobManager"]], "__init__() (src.common.utils.spark_job_manager.sparkjobmanager method)": [[394, "src.common.utils.spark_job_manager.SparkJobManager.__init__"]], "__weakref__ (src.common.utils.spark_job_manager.sparkjobmanager attribute)": [[394, "src.common.utils.spark_job_manager.SparkJobManager.__weakref__"]], "src.common.utils.time": [[395, "module-src.common.utils.time"]], "convert_days_to_ms() (in module src.common.utils.time)": [[396, "src.common.utils.time.convert_days_to_ms"]], "current_datetime() (in module src.common.utils.time)": [[397, "src.common.utils.time.current_datetime"]], "current_formatted_datetime() (in module src.common.utils.time)": [[398, "src.common.utils.time.current_formatted_datetime"]], "format_datetime() (in module src.common.utils.time)": [[399, "src.common.utils.time.format_datetime"]], "is_datetime_str_format_valid() (in module src.common.utils.time)": [[400, "src.common.utils.time.is_datetime_str_format_valid"]], "parse_formatted_datetime() (in module src.common.utils.time)": [[401, "src.common.utils.time.parse_formatted_datetime"]], "src.common.utils.timeout": [[402, "module-src.common.utils.timeout"]], "timedoutexception": [[403, "src.common.utils.timeout.TimedOutException"]], "timeout() (in module src.common.utils.timeout)": [[404, "src.common.utils.timeout.timeout"]], "src.config_populator": [[405, "module-src.config_populator"]], "src.config_populator.config_populator": [[406, "module-src.config_populator.config_populator"]], "configpopulator (class in src.config_populator.config_populator)": [[407, "src.config_populator.config_populator.ConfigPopulator"]], "__init__() (src.config_populator.config_populator.configpopulator method)": [[407, "src.config_populator.config_populator.ConfigPopulator.__init__"]], "__weakref__ (src.config_populator.config_populator.configpopulator attribute)": [[407, "src.config_populator.config_populator.ConfigPopulator.__weakref__"]], "src.data_preprocessor": [[408, "module-src.data_preprocessor"]], "src.data_preprocessor.lib": [[409, "module-src.data_preprocessor.lib"]], "src.data_preprocessor.lib.enumerate": [[410, "module-src.data_preprocessor.lib.enumerate"]], "src.data_preprocessor.lib.enumerate.queries": [[411, "module-src.data_preprocessor.lib.enumerate.queries"]], "src.data_preprocessor.lib.ingest": [[412, "module-src.data_preprocessor.lib.ingest"]], "src.data_preprocessor.lib.transform": [[413, "module-src.data_preprocessor.lib.transform"]], "src.inference": [[414, "module-src.inference"]], "src.inference.v1": [[415, "module-src.inference.v1"]], "src.inference.v1.lib": [[416, "module-src.inference.v1.lib"]], "src.inference.v1.lib.inference_output_schema": [[417, "module-src.inference.v1.lib.inference_output_schema"]], "inferenceoutputbigquerytableschema (class in src.inference.v1.lib.inference_output_schema)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema"]], "__add__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__add__"]], "__class_getitem__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__class_getitem__"]], "__contains__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__contains__"]], "__eq__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__eq__"]], "__ge__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__ge__"]], "__getattribute__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__getattribute__"]], "__getitem__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__getitem__"]], "__getnewargs__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__getnewargs__"]], "__gt__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__gt__"]], "__hash__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__hash__"]], "__iter__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__iter__"]], "__le__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__le__"]], "__len__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__len__"]], "__lt__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__lt__"]], "__mul__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__mul__"]], "__ne__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__ne__"]], "__new__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema static method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__new__"]], "__repr__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__repr__"]], "__rmul__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.__rmul__"]], "count() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.count"]], "index() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema method)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.index"]], "node_field (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema attribute)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.node_field"]], "schema (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschema attribute)": [[418, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchema.schema"]], "inferenceoutputbigquerytableschemabuilder (class in src.inference.v1.lib.inference_output_schema)": [[419, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchemaBuilder"]], "__init__() (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschemabuilder method)": [[419, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchemaBuilder.__init__"]], "__weakref__ (src.inference.v1.lib.inference_output_schema.inferenceoutputbigquerytableschemabuilder attribute)": [[419, "src.inference.v1.lib.inference_output_schema.InferenceOutputBigqueryTableSchemaBuilder.__weakref__"]], "src.inference.v1.lib.queries": [[420, "module-src.inference.v1.lib.queries"]], "src.inference.v1.lib.transforms": [[421, "module-src.inference.v1.lib.transforms"]], "src.inference.v2": [[422, "module-src.inference.v2"]], "src.post_process": [[423, "module-src.post_process"]], "src.post_process.lib": [[424, "module-src.post_process.lib"]], "src.post_process.lib.base_post_processor": [[425, "module-src.post_process.lib.base_post_processor"]], "basepostprocessor (class in src.post_process.lib.base_post_processor)": [[426, "src.post_process.lib.base_post_processor.BasePostProcessor"]], "__weakref__ (src.post_process.lib.base_post_processor.basepostprocessor attribute)": [[426, "src.post_process.lib.base_post_processor.BasePostProcessor.__weakref__"]], "src.post_process.utils": [[427, "module-src.post_process.utils"]], "src.post_process.utils.component_runtime": [[428, "module-src.post_process.utils.component_runtime"]], "assert_component_runtimes_match_expected_parameters() (in module src.post_process.utils.component_runtime)": [[429, "src.post_process.utils.component_runtime.assert_component_runtimes_match_expected_parameters"]], "get_runtime_manifest_from_kfp_pipeline() (in module src.post_process.utils.component_runtime)": [[430, "src.post_process.utils.component_runtime.get_runtime_manifest_from_kfp_pipeline"]], "src.post_process.utils.cosine_similarity": [[431, "module-src.post_process.utils.cosine_similarity"]], "assert_cosine_similarity_stats() (in module src.post_process.utils.cosine_similarity)": [[432, "src.post_process.utils.cosine_similarity.assert_cosine_similarity_stats"]], "calculate_cosine_sim_between_embedding_tables() (in module src.post_process.utils.cosine_similarity)": [[433, "src.post_process.utils.cosine_similarity.calculate_cosine_sim_between_embedding_tables"]], "calculate_cosine_similarity_stats() (in module src.post_process.utils.cosine_similarity)": [[434, "src.post_process.utils.cosine_similarity.calculate_cosine_similarity_stats"]], "get_table_paths_via_timedelta() (in module src.post_process.utils.cosine_similarity)": [[435, "src.post_process.utils.cosine_similarity.get_table_paths_via_timedelta"]], "src.split_generator": [[436, "module-src.split_generator"]], "src.subgraph_sampler": [[437, "module-src.subgraph_sampler"]], "src.subgraph_sampler.lib": [[438, "module-src.subgraph_sampler.lib"]], "src.training": [[439, "module-src.training"]], "src.training.v1": [[440, "module-src.training.v1"]], "src.training.v1.lib": [[441, "module-src.training.v1.lib"]], "src.training.v1.lib.data_loaders": [[442, "module-src.training.v1.lib.data_loaders"]], "src.training.v1.lib.data_loaders.common": [[443, "module-src.training.v1.lib.data_loaders.common"]], "dataloaderconfig (class in src.training.v1.lib.data_loaders.common)": [[444, "src.training.v1.lib.data_loaders.common.DataloaderConfig"]], "__eq__() (src.training.v1.lib.data_loaders.common.dataloaderconfig method)": [[444, "src.training.v1.lib.data_loaders.common.DataloaderConfig.__eq__"]], "__hash__ (src.training.v1.lib.data_loaders.common.dataloaderconfig attribute)": [[444, "src.training.v1.lib.data_loaders.common.DataloaderConfig.__hash__"]], "__init__() (src.training.v1.lib.data_loaders.common.dataloaderconfig method)": [[444, "src.training.v1.lib.data_loaders.common.DataloaderConfig.__init__"]], "__repr__() (src.training.v1.lib.data_loaders.common.dataloaderconfig method)": [[444, "src.training.v1.lib.data_loaders.common.DataloaderConfig.__repr__"]], "__weakref__ (src.training.v1.lib.data_loaders.common.dataloaderconfig attribute)": [[444, "src.training.v1.lib.data_loaders.common.DataloaderConfig.__weakref__"]], "dataloadertypes (class in src.training.v1.lib.data_loaders.common)": [[445, "src.training.v1.lib.data_loaders.common.DataloaderTypes"]], "src.training.v1.lib.eval_metrics": [[446, "module-src.training.v1.lib.eval_metrics"]], "get_metric_name_for_gauge_model_metrics_hit_rate_at() (in module src.training.v1.lib.eval_metrics)": [[447, "src.training.v1.lib.eval_metrics.get_metric_name_for_gauge_model_metrics_hit_rate_at"]], "src.training.v2": [[448, "module-src.training.v2"]], "src.validation_check": [[449, "module-src.validation_check"]], "src.validation_check.libs": [[450, "module-src.validation_check.libs"]], "src.validation_check.libs.resource_config_checks": [[451, "module-src.validation_check.libs.resource_config_checks"]], "check_if_inferencer_resource_config_valid() (in module src.validation_check.libs.resource_config_checks)": [[452, "src.validation_check.libs.resource_config_checks.check_if_inferencer_resource_config_valid"]], "check_if_preprocessor_resource_config_valid() (in module src.validation_check.libs.resource_config_checks)": [[453, "src.validation_check.libs.resource_config_checks.check_if_preprocessor_resource_config_valid"]], "check_if_shared_resource_config_valid() (in module src.validation_check.libs.resource_config_checks)": [[454, "src.validation_check.libs.resource_config_checks.check_if_shared_resource_config_valid"]], "check_if_split_generator_resource_config_valid() (in module src.validation_check.libs.resource_config_checks)": [[455, "src.validation_check.libs.resource_config_checks.check_if_split_generator_resource_config_valid"]], "check_if_subgraph_sampler_resource_config_valid() (in module src.validation_check.libs.resource_config_checks)": [[456, "src.validation_check.libs.resource_config_checks.check_if_subgraph_sampler_resource_config_valid"]], "check_if_trainer_resource_config_valid() (in module src.validation_check.libs.resource_config_checks)": [[457, "src.validation_check.libs.resource_config_checks.check_if_trainer_resource_config_valid"]], "src.validation_check.libs.utils": [[458, "module-src.validation_check.libs.utils"]], "assert_proto_field_value_is_truthy() (in module src.validation_check.libs.utils)": [[459, "src.validation_check.libs.utils.assert_proto_field_value_is_truthy"]], "assert_proto_has_field() (in module src.validation_check.libs.utils)": [[460, "src.validation_check.libs.utils.assert_proto_has_field"]]}})