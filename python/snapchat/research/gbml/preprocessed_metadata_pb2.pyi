"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class PreprocessedMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class NodeMetadataOutput(google.protobuf.message.Message):
        """Houses metadata about node TFTransform output from DataPreprocessor."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NODE_ID_KEY_FIELD_NUMBER: builtins.int
        FEATURE_KEYS_FIELD_NUMBER: builtins.int
        LABEL_KEYS_FIELD_NUMBER: builtins.int
        TFRECORD_URI_PREFIX_FIELD_NUMBER: builtins.int
        SCHEMA_URI_FIELD_NUMBER: builtins.int
        ENUMERATED_NODE_IDS_BQ_TABLE_FIELD_NUMBER: builtins.int
        ENUMERATED_NODE_DATA_BQ_TABLE_FIELD_NUMBER: builtins.int
        FEATURE_DIM_FIELD_NUMBER: builtins.int
        TRANSFORM_FN_ASSETS_URI_FIELD_NUMBER: builtins.int
        node_id_key: builtins.str
        """The field in output TFRecords which references the node identifier."""
        @property
        def feature_keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
            """Fields in output TFRecords which reference features."""
        @property
        def label_keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
            """Fields in output TFRecords which reference labels."""
        tfrecord_uri_prefix: builtins.str
        """GCS prefix which can be used to glob the TFRecord dataset."""
        schema_uri: builtins.str
        """GCS path to a schema which can be used to parse the TFRecord dataset."""
        enumerated_node_ids_bq_table: builtins.str
        """BQ path to a table which stores the original to enumerated node id association."""
        enumerated_node_data_bq_table: builtins.str
        """BQ path to a table which stores the enumerated node id to node metadata association."""
        feature_dim: builtins.int
        """Feature dimension after preprocessing"""
        transform_fn_assets_uri: builtins.str
        """Contains categorical feature vocabularies"""
        def __init__(
            self,
            *,
            node_id_key: builtins.str = ...,
            feature_keys: collections.abc.Iterable[builtins.str] | None = ...,
            label_keys: collections.abc.Iterable[builtins.str] | None = ...,
            tfrecord_uri_prefix: builtins.str = ...,
            schema_uri: builtins.str = ...,
            enumerated_node_ids_bq_table: builtins.str = ...,
            enumerated_node_data_bq_table: builtins.str = ...,
            feature_dim: builtins.int | None = ...,
            transform_fn_assets_uri: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_feature_dim", b"_feature_dim", "feature_dim", b"feature_dim"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_feature_dim", b"_feature_dim", "enumerated_node_data_bq_table", b"enumerated_node_data_bq_table", "enumerated_node_ids_bq_table", b"enumerated_node_ids_bq_table", "feature_dim", b"feature_dim", "feature_keys", b"feature_keys", "label_keys", b"label_keys", "node_id_key", b"node_id_key", "schema_uri", b"schema_uri", "tfrecord_uri_prefix", b"tfrecord_uri_prefix", "transform_fn_assets_uri", b"transform_fn_assets_uri"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_feature_dim", b"_feature_dim"]) -> typing_extensions.Literal["feature_dim"] | None: ...

    class EdgeMetadataInfo(google.protobuf.message.Message):
        """Houses metadata of edge features output from DataPreprocessor"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        FEATURE_KEYS_FIELD_NUMBER: builtins.int
        LABEL_KEYS_FIELD_NUMBER: builtins.int
        TFRECORD_URI_PREFIX_FIELD_NUMBER: builtins.int
        SCHEMA_URI_FIELD_NUMBER: builtins.int
        ENUMERATED_EDGE_DATA_BQ_TABLE_FIELD_NUMBER: builtins.int
        FEATURE_DIM_FIELD_NUMBER: builtins.int
        TRANSFORM_FN_ASSETS_URI_FIELD_NUMBER: builtins.int
        @property
        def feature_keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
            """Fields in output TFRecords which reference features."""
        @property
        def label_keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
            """Fields in output TFRecords which reference labels."""
        tfrecord_uri_prefix: builtins.str
        """GCS prefix which can be used to glob the TFRecord dataset."""
        schema_uri: builtins.str
        """GCS path to a schema which can be used to parse the TFRecord dataset."""
        enumerated_edge_data_bq_table: builtins.str
        """BQ path to a table which stores the enumerated node id to node metadata association."""
        feature_dim: builtins.int
        """Feature dimension after preprocessing"""
        transform_fn_assets_uri: builtins.str
        """Contains categorical feature vocabularies"""
        def __init__(
            self,
            *,
            feature_keys: collections.abc.Iterable[builtins.str] | None = ...,
            label_keys: collections.abc.Iterable[builtins.str] | None = ...,
            tfrecord_uri_prefix: builtins.str = ...,
            schema_uri: builtins.str = ...,
            enumerated_edge_data_bq_table: builtins.str = ...,
            feature_dim: builtins.int | None = ...,
            transform_fn_assets_uri: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_feature_dim", b"_feature_dim", "feature_dim", b"feature_dim"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_feature_dim", b"_feature_dim", "enumerated_edge_data_bq_table", b"enumerated_edge_data_bq_table", "feature_dim", b"feature_dim", "feature_keys", b"feature_keys", "label_keys", b"label_keys", "schema_uri", b"schema_uri", "tfrecord_uri_prefix", b"tfrecord_uri_prefix", "transform_fn_assets_uri", b"transform_fn_assets_uri"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_feature_dim", b"_feature_dim"]) -> typing_extensions.Literal["feature_dim"] | None: ...

    class EdgeMetadataOutput(google.protobuf.message.Message):
        """Houses metadata about edge TFTransform output from DataPreprocessor."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SRC_NODE_ID_KEY_FIELD_NUMBER: builtins.int
        DST_NODE_ID_KEY_FIELD_NUMBER: builtins.int
        MAIN_EDGE_INFO_FIELD_NUMBER: builtins.int
        POSITIVE_EDGE_INFO_FIELD_NUMBER: builtins.int
        NEGATIVE_EDGE_INFO_FIELD_NUMBER: builtins.int
        src_node_id_key: builtins.str
        """The field in output TFRecords which references the source node identifier."""
        dst_node_id_key: builtins.str
        """The field in output TFRecords which references the destination node identifier."""
        @property
        def main_edge_info(self) -> global___PreprocessedMetadata.EdgeMetadataInfo:
            """Detailed metadata for message-passing edges"""
        @property
        def positive_edge_info(self) -> global___PreprocessedMetadata.EdgeMetadataInfo:
            """Detailed metadata for user-defined positive edges"""
        @property
        def negative_edge_info(self) -> global___PreprocessedMetadata.EdgeMetadataInfo:
            """Detailed metadata for user-defined negative edges"""
        def __init__(
            self,
            *,
            src_node_id_key: builtins.str = ...,
            dst_node_id_key: builtins.str = ...,
            main_edge_info: global___PreprocessedMetadata.EdgeMetadataInfo | None = ...,
            positive_edge_info: global___PreprocessedMetadata.EdgeMetadataInfo | None = ...,
            negative_edge_info: global___PreprocessedMetadata.EdgeMetadataInfo | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_negative_edge_info", b"_negative_edge_info", "_positive_edge_info", b"_positive_edge_info", "main_edge_info", b"main_edge_info", "negative_edge_info", b"negative_edge_info", "positive_edge_info", b"positive_edge_info"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_negative_edge_info", b"_negative_edge_info", "_positive_edge_info", b"_positive_edge_info", "dst_node_id_key", b"dst_node_id_key", "main_edge_info", b"main_edge_info", "negative_edge_info", b"negative_edge_info", "positive_edge_info", b"positive_edge_info", "src_node_id_key", b"src_node_id_key"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_negative_edge_info", b"_negative_edge_info"]) -> typing_extensions.Literal["negative_edge_info"] | None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_positive_edge_info", b"_positive_edge_info"]) -> typing_extensions.Literal["positive_edge_info"] | None: ...

    class CondensedNodeTypeToPreprocessedMetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___PreprocessedMetadata.NodeMetadataOutput: ...
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___PreprocessedMetadata.NodeMetadataOutput | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    class CondensedEdgeTypeToPreprocessedMetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___PreprocessedMetadata.EdgeMetadataOutput: ...
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___PreprocessedMetadata.EdgeMetadataOutput | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    CONDENSED_NODE_TYPE_TO_PREPROCESSED_METADATA_FIELD_NUMBER: builtins.int
    CONDENSED_EDGE_TYPE_TO_PREPROCESSED_METADATA_FIELD_NUMBER: builtins.int
    @property
    def condensed_node_type_to_preprocessed_metadata(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___PreprocessedMetadata.NodeMetadataOutput]:
        """Maps condensed node types to their respective post-TFTransform outputs."""
    @property
    def condensed_edge_type_to_preprocessed_metadata(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___PreprocessedMetadata.EdgeMetadataOutput]:
        """Maps condensed edge types to their respective post-TFTransform outputs."""
    def __init__(
        self,
        *,
        condensed_node_type_to_preprocessed_metadata: collections.abc.Mapping[builtins.int, global___PreprocessedMetadata.NodeMetadataOutput] | None = ...,
        condensed_edge_type_to_preprocessed_metadata: collections.abc.Mapping[builtins.int, global___PreprocessedMetadata.EdgeMetadataOutput] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["condensed_edge_type_to_preprocessed_metadata", b"condensed_edge_type_to_preprocessed_metadata", "condensed_node_type_to_preprocessed_metadata", b"condensed_node_type_to_preprocessed_metadata"]) -> None: ...

global___PreprocessedMetadata = PreprocessedMetadata
