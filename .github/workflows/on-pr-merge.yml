name: CI Tests

on:
  # Run whenever GitHubâ€™s merge queue asks for required checks
  # We add `pull_request` below to get around a merge queue status check limitation:
  # https://github.com/orgs/community/discussions/46757#discussioncomment-4912738
  pull_request:
  merge_group:

permissions:
  # Needed for gcloud auth: https://github.com/google-github-actions/auth
  id-token: 'write'
  contents: 'read'
  # Needed for commenting on PRs
  pull-requests: 'write'
  issues: 'write'

jobs:
  ci-unit-test:
    # Because of limitation discussed https://github.com/orgs/community/discussions/46757#discussioncomment-4912738
    # We skip when the workflow is triggered by a pull_request event; otherwise we will run the check twice.
    # Once before it gets into the merge queue and once when it is in the merge queue.
    # Our tests take a long time to run, so this is not ideal.
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup development environment
      uses: snap-research/gigl/.github/actions/setup-python-tools@main
      with:
          setup_gcloud: "true"
          gcp_project_id: ${{ secrets.gcp_project_id }}
          workload_identity_provider: ${{ secrets.workload_identity_provider }}
          gcp_service_account_email: ${{ secrets.gcp_service_account_email }}
    - name: Run Unit Tests
      # We use cloud run here instead of using github hosted runners because of limitation of tests
      # using GFile library (a.k.a anything that does IO w/ Tensorflow). GFile does not understand
      # how to leverage Workload Identity Federation to read assets from GCS, et al. See:
      # https://github.com/tensorflow/tensorflow/issues/57104
      uses: snap-research/gigl/.github/actions/run-cloud-run-command-on-active-checkout@main
      with:
        cmd: "make unit_test"
        service_account:  ${{ secrets.gcp_service_account_email }}
        project:  ${{ secrets.gcp_project_id }}

  ci-integration-test:
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup development environment
      uses: snap-research/gigl/.github/actions/setup-python-tools@main
      with:
          setup_gcloud: "true"
          gcp_project_id: ${{ secrets.gcp_project_id }}
          workload_identity_provider: ${{ secrets.workload_identity_provider }}
          gcp_service_account_email: ${{ secrets.gcp_service_account_email }}
    - name: Run Integration Tests
      uses: snap-research/gigl/.github/actions/run-cloud-run-command-on-active-checkout@main
      with:
        cmd: "make integration_test"
        service_account:  ${{ secrets.gcp_service_account_email }}
        project:  ${{ secrets.gcp_project_id }}
  
  ci-integration-e2e-test:
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup development environment
      uses: snap-research/gigl/.github/actions/setup-python-tools@main
      with:
          setup_gcloud: "true"
          gcp_project_id: ${{ secrets.gcp_project_id }}
          workload_identity_provider: ${{ secrets.workload_identity_provider }}
          gcp_service_account_email: ${{ secrets.gcp_service_account_email }}
    - name: Run E2E Tests
      uses: snap-research/gigl/.github/actions/run-cloud-run-command-on-active-checkout@main
      with:
        cmd: "make run_all_e2e_tests"
        service_account:  ${{ secrets.gcp_service_account_email }}
        project:  ${{ secrets.gcp_project_id }}

  ci-lint-test:
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup development environment
      uses: snap-research/gigl/.github/actions/setup-python-tools@main
      with:
          install_dev_deps: "true"
          setup_gcloud: "true"
          gcp_project_id: ${{ secrets.gcp_project_id }}
          workload_identity_provider: ${{ secrets.workload_identity_provider }}
          gcp_service_account_email: ${{ secrets.gcp_service_account_email }}
    - name: Run Lint Tests
      run: |
        source ~/.profile
        make check_format
        make assert_yaml_configs_parse
  