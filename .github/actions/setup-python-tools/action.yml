name: setup-python-and-tools
description: |
  This action sets up Python and installs pip-tools, and other necessary pip-tools

inputs:
  setup_gcloud:
    description: "Set up Google Cloud authentication and tooling"
    required: false
    default: "false"
  
  try_cleaning_disk_space:
    description: "Try to clean up disk space by removing caches; useful when building docker images, et al."
    required: false
    default: "false"

  install_dev_deps:
    description: "Set up the development environment that can allow for building/testing/releasing"
    required: false
    default: "false"

  gcp_project_id:
    description: "Google Cloud Project ID"
    required: false
    default: ""
  
  workload_identity_provider:
    description: "Workload Identity Provider"
    required: false
    default: ""

  gcp_service_account_email:
    description: "Google Cloud Service Account Email"
    required: false
    default: ""

runs:
    using: "composite"
    # needs: comment-link-to-workflow  # Ensure that a comment is posted with workflow id
    steps:
      # Step 1: Set up Python environment (Python 3.9.13).
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          # Available versions: https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
          # Ensure to use a version that has support for arm64-darwin so we can build for Apple Silicon (macOS 14).
          python-version: '3.9.13' 

      # Step 2: Install pip-tools, which is used to generate hashed requirements.
      - name: Install pip-tools
        shell: bash
        run: pip install pip-tools

      # Step 3: Set up Gcloud AUTH using Workload Identity Federation
      # See following for context: https://cloud.google.com/blog/products/identity-security/enabling-keyless-authentication-from-github-actions
      - name: Google Cloud Auth
        if: inputs.setup_gcloud == 'true'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ inputs.gcp_project_id }}
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.gcp_service_account_email }}
          create_credentials_file: true
          export_environment_variables: true

      # Step 4: Install gcloud tooling
      - name: Set Up Cloud SDK
        if: inputs.setup_gcloud == 'true'
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ inputs.gcp_project_id }}

      # Note: Without below we run out of DISK SPACE when building the images.
      # Seems the below helped some folks on https://github.com/orgs/community/discussions/25678
      - name: Delete huge unnecessary tools folder
        if: inputs.try_cleaning_disk_space == 'true'
        shell: bash
        run: rm -rf /opt/hostedtoolcache

      - name: Set up dev environment
        if: ${{ inputs.install_dev_deps == 'true' }}
        shell: bash
        run: |
          make install_dev_deps