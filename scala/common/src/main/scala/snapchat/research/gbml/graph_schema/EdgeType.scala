// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package snapchat.research.gbml.graph_schema

/** @param relation
  *   The relation of source / destination node_type
  *   i.e. (Person , is_friend, Person) ; "Person" is node_type for both
  *   src and dst nodes, and "is_friend" is the "relation"
  */
@SerialVersionUID(0L)
final case class EdgeType(
    relation: _root_.scala.Predef.String = "",
    srcNodeType: _root_.scala.Predef.String = "",
    dstNodeType: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[EdgeType] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = relation
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = srcNodeType
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = dstNodeType
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = relation
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = srcNodeType
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = dstNodeType
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withRelation(__v: _root_.scala.Predef.String): EdgeType = copy(relation = __v)
    def withSrcNodeType(__v: _root_.scala.Predef.String): EdgeType = copy(srcNodeType = __v)
    def withDstNodeType(__v: _root_.scala.Predef.String): EdgeType = copy(dstNodeType = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = relation
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = srcNodeType
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = dstNodeType
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(relation)
        case 2 => _root_.scalapb.descriptors.PString(srcNodeType)
        case 3 => _root_.scalapb.descriptors.PString(dstNodeType)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: snapchat.research.gbml.graph_schema.EdgeType.type = snapchat.research.gbml.graph_schema.EdgeType
    // @@protoc_insertion_point(GeneratedMessage[snapchat.research.gbml.EdgeType])
}

object EdgeType extends scalapb.GeneratedMessageCompanion[snapchat.research.gbml.graph_schema.EdgeType] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[snapchat.research.gbml.graph_schema.EdgeType] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): snapchat.research.gbml.graph_schema.EdgeType = {
    var __relation: _root_.scala.Predef.String = ""
    var __srcNodeType: _root_.scala.Predef.String = ""
    var __dstNodeType: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __relation = _input__.readStringRequireUtf8()
        case 18 =>
          __srcNodeType = _input__.readStringRequireUtf8()
        case 26 =>
          __dstNodeType = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    snapchat.research.gbml.graph_schema.EdgeType(
        relation = __relation,
        srcNodeType = __srcNodeType,
        dstNodeType = __dstNodeType,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[snapchat.research.gbml.graph_schema.EdgeType] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      snapchat.research.gbml.graph_schema.EdgeType(
        relation = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        srcNodeType = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        dstNodeType = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = GraphSchemaProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = GraphSchemaProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = snapchat.research.gbml.graph_schema.EdgeType(
    relation = "",
    srcNodeType = "",
    dstNodeType = ""
  )
  implicit class EdgeTypeLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, snapchat.research.gbml.graph_schema.EdgeType]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, snapchat.research.gbml.graph_schema.EdgeType](_l) {
    def relation: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.relation)((c_, f_) => c_.copy(relation = f_))
    def srcNodeType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.srcNodeType)((c_, f_) => c_.copy(srcNodeType = f_))
    def dstNodeType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.dstNodeType)((c_, f_) => c_.copy(dstNodeType = f_))
  }
  final val RELATION_FIELD_NUMBER = 1
  final val SRC_NODE_TYPE_FIELD_NUMBER = 2
  final val DST_NODE_TYPE_FIELD_NUMBER = 3
  def of(
    relation: _root_.scala.Predef.String,
    srcNodeType: _root_.scala.Predef.String,
    dstNodeType: _root_.scala.Predef.String
  ): _root_.snapchat.research.gbml.graph_schema.EdgeType = _root_.snapchat.research.gbml.graph_schema.EdgeType(
    relation,
    srcNodeType,
    dstNodeType
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[snapchat.research.gbml.EdgeType])
}
